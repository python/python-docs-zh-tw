# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2022, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
# Steven Hsu <hsuhaochun@gmail.com>, 2021
msgid ""
msgstr ""
"Project-Id-Version: Python 3.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-06-26 18:54+0800\n"
"PO-Revision-Date: 2021-07-06 22:18+0800\n"
"Last-Translator: Adrian Liaw <adrianliaw2000@gmail.com>\n"
"Language-Team: Chinese - TAIWAN (https://github.com/python/python-docs-zh-"
"tw)\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Poedit 2.4.3\n"

#: ../../extending/index.rst:5
msgid "Extending and Embedding the Python Interpreter"
msgstr "擴充和嵌入 Python 直譯器"

#: ../../extending/index.rst:7
msgid ""
"This document describes how to write modules in C or C++ to extend the "
"Python interpreter with new modules.  Those modules can not only define new "
"functions but also new object types and their methods.  The document also "
"describes how to embed the Python interpreter in another application, for "
"use as an extension language.  Finally, it shows how to compile and link "
"extension modules so that they can be loaded dynamically (at run time) into "
"the interpreter, if the underlying operating system supports this feature."
msgstr ""
"這份說明文件描述如何在 C 或 C++ 中編寫模組，並使用新模組來擴充 Python 直譯器"
"功能。那些模組不僅可以定義新的函式，也可以定義新的物件型別及其方法 (method)。"
"文件內容也會描述如何將 Python 直譯器嵌入另一個應用程式中，做為一種擴充語言 "
"(extension language) 使用。最後，它會展示如何編譯及連結擴充模組，使那些模組可"
"以動態地（在運行時）被載入到直譯器中，前提是底層作業系統有支援這個功能。"

#: ../../extending/index.rst:15
msgid ""
"This document assumes basic knowledge about Python.  For an informal "
"introduction to the language, see :ref:`tutorial-index`.  :ref:`reference-"
"index` gives a more formal definition of the language.  :ref:`library-index` "
"documents the existing object types, functions and modules (both built-in "
"and written in Python) that give the language its wide application range."
msgstr ""
"這份說明文件假設您具備 Python 的基礎知識。關於此語言的非正式介紹，請參閱 :"
"ref:`tutorial-index`\\ 。\\ :ref:`reference-index`\\ 給予此語言更為正式的定"
"義。\\ :ref:`library-index` 記錄了賦予此語言廣泛應用範圍的物件型別、函式"
"與（內建的和以 Python 編寫的）模組。"

#: ../../extending/index.rst:21
msgid ""
"For a detailed description of the whole Python/C API, see the separate :ref:"
"`c-api-index`."
msgstr ""
"關於完整的 Python/C API 詳細介紹，請參閱另外一份 :ref:`c-api-index`\\ 。"

#: ../../extending/index.rst:26
msgid "Recommended third party tools"
msgstr "推薦的第三方工具"

#: ../../extending/index.rst:28
msgid ""
"This guide only covers the basic tools for creating extensions provided as "
"part of this version of CPython. Third party tools like `Cython <http://"
"cython.org/>`_, `cffi <https://cffi.readthedocs.io>`_, `SWIG <http://www."
"swig.org>`_ and `Numba <https://numba.pydata.org/>`_ offer both simpler and "
"more sophisticated approaches to creating C and C++ extensions for Python."
msgstr ""
"這份指南僅涵蓋了此 CPython 版本所提供的、用以建立擴充的基本工具。第三方工具，"
"例如 `Cython <http://cython.org/>`_\\ 、\\ `cffi <https://cffi.readthedocs."
"io>`_\\ 、\\ `SWIG <http://www.swig.org>`_ 和 `Numba <https://numba.pydata."
"org/>`_\\ ，提供了更為簡單及更為複雜的多種方法，來為 Python 建立 C 和 C ++ 擴"
"充。"

#: ../../extending/index.rst:40
msgid ""
"`Python Packaging User Guide: Binary Extensions <https://packaging.python."
"org/guides/packaging-binary-extensions/>`_"
msgstr ""
"`Python 封裝使用者指南：二進制擴充 <https://packaging.python.org/guides/"
"packaging-binary-extensions/>`_"

#: ../../extending/index.rst:38
msgid ""
"The Python Packaging User Guide not only covers several available tools that "
"simplify the creation of binary extensions, but also discusses the various "
"reasons why creating an extension module may be desirable in the first place."
msgstr ""
"Python 封裝使用者指南 (Python Packaging User Guide) 不僅涵蓋了數個可以用來簡"
"化二進制擴充建立過程的工具，也會討論為何建立一個擴充模組可能會是您的優先考"
"量。"

#: ../../extending/index.rst:45
msgid "Creating extensions without third party tools"
msgstr "不使用第三方工具建立擴充"

#: ../../extending/index.rst:47
msgid ""
"This section of the guide covers creating C and C++ extensions without "
"assistance from third party tools. It is intended primarily for creators of "
"those tools, rather than being a recommended way to create your own C "
"extensions."
msgstr ""
"本指南中的這一節將說明，在沒有第三方工具的協助下，如何建立 C 和 C ++ 擴充。它"
"主要是寫給使用那些工具的創作者們，而不是讓你建立自己的 C 擴充的推薦方法。"

#: ../../extending/index.rst:63
msgid "Embedding the CPython runtime in a larger application"
msgstr "在更大的應用程式中嵌入 CPython 運行環境 (runtime)"

#: ../../extending/index.rst:65
msgid ""
"Sometimes, rather than creating an extension that runs inside the Python "
"interpreter as the main application, it is desirable to instead embed the "
"CPython runtime inside a larger application. This section covers some of the "
"details involved in doing that successfully."
msgstr ""
"有時候，相較於建立一個擴充，使其在 Python 直譯器中可作為主應用程式運行，還不"
"如將 CPython 運行環境嵌入至一個更大的應用程式中更可取。本節將涵蓋一些要"
"成功完成此任務所涉及的細節。"
