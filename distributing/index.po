# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2022, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
# Leon H., 2017
# Steven Hsu <hsuhaochun@gmail.com>, 2021
msgid ""
msgstr ""
"Project-Id-Version: Python 3.12\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-08-18 00:03+0000\n"
"PO-Revision-Date: 2021-07-04 18:06+0800\n"
"Last-Translator: Adrian Liaw <adrianliaw2000@gmail.com>\n"
"Language-Team: Chinese - TAIWAN (https://github.com/python/python-docs-zh-"
"tw)\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Poedit 3.2.2\n"

#: ../../distributing/index.rst:10
msgid "Distributing Python Modules"
msgstr "發布 Python 模組"

#: ../../distributing/index.rst:14
msgid ""
"Information and guidance on distributing Python modules and packages has "
"been moved to the `Python Packaging User Guide`_, and the tutorial on "
"`packaging Python projects`_."
msgstr ""

#~ msgid "Email"
#~ msgstr "電子郵件"

#~ msgid "distutils-sig@python.org"
#~ msgstr "distutils-sig@python.org"

#~ msgid ""
#~ "As a popular open source development project, Python has an active "
#~ "supporting community of contributors and users that also make their "
#~ "software available for other Python developers to use under open source "
#~ "license terms."
#~ msgstr ""
#~ "作為一個普及的開源開發專案，Python 有一個活躍的支持社群，由其貢獻者及使用"
#~ "者組成，而他們也讓他們的軟體可被其他 Python 開發者在開源授權條款下使用。"

#~ msgid ""
#~ "This allows Python users to share and collaborate effectively, benefiting "
#~ "from the solutions others have already created to common (and sometimes "
#~ "even rare!) problems, as well as potentially contributing their own "
#~ "solutions to the common pool."
#~ msgstr ""
#~ "這樣可以讓 Python 使用者們有效地共享和合作，並受益於其他人對常見（有時甚至"
#~ "是罕見）的問題已經建立的解決方案，更可以在公開社群中潛在地貢獻他們自己的解"
#~ "決方案。"

#~ msgid ""
#~ "This guide covers the distribution part of the process. For a guide to "
#~ "installing other Python projects, refer to the :ref:`installation guide "
#~ "<installing-index>`."
#~ msgstr ""
#~ "這份指南涵蓋了上述過程中的發布部分。如果是要安裝其他的 Python 專案，請參考"
#~ "\\ :ref:`安裝 Python 模組 <distributing-index>`\\ 指南。"

#~ msgid ""
#~ "For corporate and other institutional users, be aware that many "
#~ "organisations have their own policies around using and contributing to "
#~ "open source software. Please take such policies into account when making "
#~ "use of the distribution and installation tools provided with Python."
#~ msgstr ""
#~ "對於企業和其他機構的使用者，要注意到，許多組織對於使用和貢獻開源軟體都有自"
#~ "己的政策。在開始使用配備 Python 的發布及安裝工具時，請將那些政策納入考量。"

#~ msgid "Key terms"
#~ msgstr "關鍵術語"

#~ msgid ""
#~ "the `Python Package Index <https://pypi.org>`__ is a public repository of "
#~ "open source licensed packages made available for use by other Python users"
#~ msgstr ""
#~ "`Python 套件索引 (Python Package Index) <https://pypi.org>`__ 是開源授權套"
#~ "件的一個公共儲存庫，其中的套件皆可被其他 Python 使用者所使用"

#~ msgid ""
#~ "the `Python Packaging Authority <https://www.pypa.io/>`__ are the group "
#~ "of developers and documentation authors responsible for the maintenance "
#~ "and evolution of the standard packaging tools and the associated metadata "
#~ "and file format standards. They maintain a variety of tools, "
#~ "documentation and issue trackers on `GitHub <https://github.com/pypa>`__."
#~ msgstr ""
#~ "`Python 封裝管理站 (Python Packaging Authority) <https://www.pypa.io/>`__ "
#~ "是一個由開發者和說明文件作者組成的團隊，負責維護及改進標準封裝工具，以及相"
#~ "關的元資料 (metadata) 和檔案格式標準。他們在 `GitHub <https://github.com/"
#~ "pypa>`__ 平台上維護各種工具、說明文件及問題追蹤系統。"

#~ msgid ""
#~ "``distutils`` is the original build and distribution system first added "
#~ "to the Python standard library in 1998. While direct use of ``distutils`` "
#~ "is being phased out, it still laid the foundation for the current "
#~ "packaging and distribution infrastructure, and it not only remains part "
#~ "of the standard library, but its name lives on in other ways (such as the "
#~ "name of the mailing list used to coordinate Python packaging standards "
#~ "development)."
#~ msgstr ""
#~ "``distutils`` 是最早的建置和發布系統，於 1998 年首次被加入 Python 標準函式"
#~ "庫。雖然直接使用 ``distutils`` 的方式已經被逐步淘汰，它仍然是現今封裝和發"
#~ "布的基礎結構根基，而且它不僅仍然是標準函式庫的一部分，它的名稱也以其他的方"
#~ "式存活著（例如：用於協調 Python 封裝標準開發的郵寄清單就是以它命名）。"

#~ msgid ""
#~ "`setuptools`_ is a (largely) drop-in replacement for ``distutils`` first "
#~ "published in 2004. Its most notable addition over the unmodified "
#~ "``distutils`` tools was the ability to declare dependencies on other "
#~ "packages. It is currently recommended as a more regularly updated "
#~ "alternative to ``distutils`` that offers consistent support for more "
#~ "recent packaging standards across a wide range of Python versions."
#~ msgstr ""
#~ "`setuptools`_ 是 ``distutils`` 的一個（主要的）偶然出現的替代品，它於 "
#~ "2004 年首次被發布。相較於未修改的 ``distutils`` 工具，它最值得注意的新功"
#~ "能，是能夠宣告對其他套件的依賴性 (dependency)。它目前被推薦為 "
#~ "``distutils`` 的一個替代方案，因其更新較為頻繁，且能在各個廣泛的 Python 版"
#~ "本之間，為較新的封裝標準提供一致性的支援。"

#~ msgid ""
#~ "`wheel`_ (in this context) is a project that adds the ``bdist_wheel`` "
#~ "command to ``distutils``/`setuptools`_. This produces a cross platform "
#~ "binary packaging format (called \"wheels\" or \"wheel files\" and defined "
#~ "in :pep:`427`) that allows Python libraries, even those including binary "
#~ "extensions, to be installed on a system without needing to be built "
#~ "locally."
#~ msgstr ""
#~ "`wheel`_\\ （在此文中）是一個將 ``bdist_wheel`` 指令附加到 ``distutils``/"
#~ "`setuptools`_ 的專案。這會產生一個跨平台的二進制封裝格式（稱為「wheels」或"
#~ "「wheel 檔案」，並於 :pep:`427` 中被定義），它可讓 Python 函式庫，甚至那些"
#~ "包含二進制擴充的函式庫，可以在系統中被安裝，但不需要在本機進行建置。"

#~ msgid "Open source licensing and collaboration"
#~ msgstr "開源授權與協同合作"

#~ msgid ""
#~ "In most parts of the world, software is automatically covered by "
#~ "copyright. This means that other developers require explicit permission "
#~ "to copy, use, modify and redistribute the software."
#~ msgstr ""
#~ "在世界上多數地方，軟體會自動受版權所保護。這代表著其他開發人員需要明確的許"
#~ "可，才能複製、使用、修改和重新發布軟體。"

#~ msgid ""
#~ "Open source licensing is a way of explicitly granting such permission in "
#~ "a relatively consistent way, allowing developers to share and collaborate "
#~ "efficiently by making common solutions to various problems freely "
#~ "available. This leaves many developers free to spend more time focusing "
#~ "on the problems that are relatively unique to their specific situation."
#~ msgstr ""
#~ "開源授權是一種以相對一致的方式，明確地授予此類許可的方法，它允許開發人員透"
#~ "過為各種問題提供免費可用的共通解決方案，來達到高效率的共享和協作。這使得許"
#~ "多開發人員可以自由地將更多時間專注於處理他們在特定情況中遇到的相對獨特的問"
#~ "題。"

#~ msgid ""
#~ "The distribution tools provided with Python are designed to make it "
#~ "reasonably straightforward for developers to make their own contributions "
#~ "back to that common pool of software if they choose to do so."
#~ msgstr ""
#~ "Python 所提供的發布工具，被設計為讓開發人員能夠以合理的直觀方式，對該公用"
#~ "軟體庫回饋他們自己的貢獻，前提是他們願意這樣做。"

#~ msgid ""
#~ "The same distribution tools can also be used to distribute software "
#~ "within an organisation, regardless of whether that software is published "
#~ "as open source software or not."
#~ msgstr ""
#~ "同一個發布工具也可用於在組織內發布軟體，不論該軟體是否有作為開源軟體被發"
#~ "布。"

#~ msgid "Installing the tools"
#~ msgstr "安裝工具"

#~ msgid ""
#~ "The standard library does not include build tools that support modern "
#~ "Python packaging standards, as the core development team has found that "
#~ "it is important to have standard tools that work consistently, even on "
#~ "older versions of Python."
#~ msgstr ""
#~ "標準函式庫並不包含那些支援現代 Python 封裝標準的建置工具，因為核心開發團隊"
#~ "發現，提供始終可運作的標準工具是很重要的，即使它們是在舊版的 Python 上運"
#~ "作。"

#~ msgid ""
#~ "The currently recommended build and distribution tools can be installed "
#~ "by invoking the ``pip`` module at the command line::"
#~ msgstr ""
#~ "當今被推薦的建置及發布工具，可以透過在命令列中呼叫 ``pip`` 模組來安裝它"
#~ "們：\n"
#~ "\n"
#~ "::"

#~ msgid ""
#~ "For POSIX users (including macOS and Linux users), these instructions "
#~ "assume the use of a :term:`virtual environment`."
#~ msgstr ""
#~ "對於 POSIX 使用者（包括 Mac OS X 和 Linux 使用者），這些教學皆假設有使用 :"
#~ "term:`virtual environment`\\ 。"

#~ msgid ""
#~ "For Windows users, these instructions assume that the option to adjust "
#~ "the system PATH environment variable was selected when installing Python."
#~ msgstr ""
#~ "對於 Windows 使用者，這些教學皆假設在安裝 Python 時，「可調整系統 PATH 環"
#~ "境變數」的選項已被選取。"

#~ msgid ""
#~ "The Python Packaging User Guide includes more details on the `currently "
#~ "recommended tools`_."
#~ msgstr "Python 封裝使用者指南包含了關於\\ `當今推薦工具`_\\ 的更多細節。"

#~ msgid "Reading the Python Packaging User Guide"
#~ msgstr "閱讀 Python 封裝使用者指南"

#~ msgid ""
#~ "The Python Packaging User Guide covers the various key steps and elements "
#~ "involved in creating and publishing a project:"
#~ msgstr ""
#~ "Python 封裝使用者指南涵蓋了關於建立和發布一個專案的各項關鍵步驟和元素："

#~ msgid "`Project structure`_"
#~ msgstr "`專案結構`_"

#~ msgid "`Building and packaging the project`_"
#~ msgstr "`專案建置與封裝`_"

#~ msgid "`Uploading the project to the Python Package Index`_"
#~ msgstr "`上傳專案至 Python 套件索引 (Python Package Index)`_"

#~ msgid "`The .pypirc file`_"
#~ msgstr "`.pypirc 檔案`_"

#~ msgid "How do I...?"
#~ msgstr "我該如何...？"

#~ msgid "These are quick answers or links for some common tasks."
#~ msgstr "接下來是關於一些常見任務的快速解答或連結。"

#~ msgid "... choose a name for my project?"
#~ msgstr "...為我的專案選擇一個名稱？"

#~ msgid "This isn't an easy topic, but here are a few tips:"
#~ msgstr "這不是一個簡單的題目，但這裡有一些提示："

#~ msgid "check the Python Package Index to see if the name is already in use"
#~ msgstr "檢查 Python 套件索引，看看該名稱是否已被使用"

#~ msgid ""
#~ "check popular hosting sites like GitHub, Bitbucket, etc to see if there "
#~ "is already a project with that name"
#~ msgstr ""
#~ "檢查常用的代管網站，像是 GitHub、Bitbucket 等，看看是否已經有一個使用該名"
#~ "稱的專案"

#~ msgid "check what comes up in a web search for the name you're considering"
#~ msgstr "檢查您正在考慮的名稱在網路搜尋中會出現的內容"

#~ msgid ""
#~ "avoid particularly common words, especially ones with multiple meanings, "
#~ "as they can make it difficult for users to find your software when "
#~ "searching for it"
#~ msgstr ""
#~ "避免使用特別常見的單字，尤其是那些有多重含義的單字，因為它們會讓使用者在搜"
#~ "尋你的軟體時時很難找到它"

#~ msgid "... create and distribute binary extensions?"
#~ msgstr "...建立和發布二進制擴充？"

#~ msgid ""
#~ "This is actually quite a complex topic, with a variety of alternatives "
#~ "available depending on exactly what you're aiming to achieve. See the "
#~ "Python Packaging User Guide for more information and recommendations."
#~ msgstr ""
#~ "實際上這是一個非常複雜的題目，因為有各式各樣的替代方案可使用，取決於您確實"
#~ "想要達成的目標。更多的資訊和建議，請參閱 Python 封裝使用者指南。"

#~ msgid ""
#~ "`Python Packaging User Guide: Binary Extensions <https://packaging.python."
#~ "org/guides/packaging-binary-extensions/>`__"
#~ msgstr ""
#~ "`Python 封裝使用者指南：二進制擴充 <https://packaging.python.org/guides/"
#~ "packaging-binary-extensions/>`__"

#~ msgid "Python Package Index (PyPI)"
#~ msgstr "Python Package Index (PyPI)"

#~ msgid "PyPI"
#~ msgstr "PyPI"

#~ msgid "(see Python Package Index (PyPI))"
#~ msgstr "（請見 Python Package Index (PyPI)）"
