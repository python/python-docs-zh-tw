# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2022, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: Python 3.12\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-11-01 00:03+0000\n"
"PO-Revision-Date: 2018-05-23 16:12+0000\n"
"Last-Translator: Adrian Liaw <adrianliaw2000@gmail.com>\n"
"Language-Team: Chinese - TAIWAN (https://github.com/python/python-docs-zh-"
"tw)\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/termios.rst:2
msgid ":mod:`termios` --- POSIX style tty control"
msgstr ""

#: ../../library/termios.rst:14
msgid ""
"This module provides an interface to the POSIX calls for tty I/O control. "
"For a complete description of these calls, see :manpage:`termios(3)` Unix "
"manual page.  It is only available for those Unix versions that support "
"POSIX *termios* style tty I/O control configured during installation."
msgstr ""

#: ../../library/termios.rst:19
msgid ":ref:`Availability <availability>`: Unix."
msgstr ":ref:`適用 <availability>`：Unix。"

#: ../../library/termios.rst:21
msgid ""
"All functions in this module take a file descriptor *fd* as their first "
"argument.  This can be an integer file descriptor, such as returned by ``sys."
"stdin.fileno()``, or a :term:`file object`, such as ``sys.stdin`` itself."
msgstr ""

#: ../../library/termios.rst:25
msgid ""
"This module also defines all the constants needed to work with the functions "
"provided here; these have the same name as their counterparts in C.  Please "
"refer to your system documentation for more information on using these "
"terminal control interfaces."
msgstr ""

#: ../../library/termios.rst:30
msgid "The module defines the following functions:"
msgstr ""

#: ../../library/termios.rst:35
msgid ""
"Return a list containing the tty attributes for file descriptor *fd*, as "
"follows: ``[iflag, oflag, cflag, lflag, ispeed, ospeed, cc]`` where *cc* is "
"a list of the tty special characters (each a string of length 1, except the "
"items with indices :const:`VMIN` and :const:`VTIME`, which are integers when "
"these fields are defined).  The interpretation of the flags and the speeds "
"as well as the indexing in the *cc* array must be done using the symbolic "
"constants defined in the :mod:`termios` module."
msgstr ""

#: ../../library/termios.rst:46
msgid ""
"Set the tty attributes for file descriptor *fd* from the *attributes*, which "
"is a list like the one returned by :func:`tcgetattr`.  The *when* argument "
"determines when the attributes are changed:"
msgstr ""

#: ../../library/termios.rst:52
msgid "Change attributes immediately."
msgstr ""

#: ../../library/termios.rst:56
msgid "Change attributes after transmitting all queued output."
msgstr ""

#: ../../library/termios.rst:60
msgid ""
"Change attributes after transmitting all queued output and discarding all "
"queued input."
msgstr ""

#: ../../library/termios.rst:66
msgid ""
"Send a break on file descriptor *fd*.  A zero *duration* sends a break for "
"0.25--0.5 seconds; a nonzero *duration* has a system dependent meaning."
msgstr ""

#: ../../library/termios.rst:72
msgid ""
"Wait until all output written to file descriptor *fd* has been transmitted."
msgstr ""

#: ../../library/termios.rst:77
msgid ""
"Discard queued data on file descriptor *fd*.  The *queue* selector specifies "
"which queue: :const:`TCIFLUSH` for the input queue, :const:`TCOFLUSH` for "
"the output queue, or :const:`TCIOFLUSH` for both queues."
msgstr ""

#: ../../library/termios.rst:84
msgid ""
"Suspend or resume input or output on file descriptor *fd*.  The *action* "
"argument can be :const:`TCOOFF` to suspend output, :const:`TCOON` to restart "
"output, :const:`TCIOFF` to suspend input, or :const:`TCION` to restart input."
msgstr ""

#: ../../library/termios.rst:91
msgid ""
"Return a tuple ``(ws_row, ws_col)`` containing the tty window size for file "
"descriptor *fd*. Requires :const:`termios.TIOCGWINSZ` or :const:`termios."
"TIOCGSIZE`."
msgstr ""

#: ../../library/termios.rst:100
msgid ""
"Set the tty window size for file descriptor *fd* from *winsize*, which is a "
"two-item tuple ``(ws_row, ws_col)`` like the one returned by :func:"
"`tcgetwinsize`. Requires at least one of the pairs (:const:`termios."
"TIOCGWINSZ`, :const:`termios.TIOCSWINSZ`); (:const:`termios.TIOCGSIZE`, :"
"const:`termios.TIOCSSIZE`) to be defined."
msgstr ""

#: ../../library/termios.rst:111
msgid "Module :mod:`tty`"
msgstr ":mod:`tty` 模組"

#: ../../library/termios.rst:112
msgid "Convenience functions for common terminal control operations."
msgstr ""

#: ../../library/termios.rst:118
msgid "Example"
msgstr "範例"

#: ../../library/termios.rst:120
msgid ""
"Here's a function that prompts for a password with echoing turned off.  Note "
"the technique using a separate :func:`tcgetattr` call and a :keyword:"
"`try` ... :keyword:`finally` statement to ensure that the old tty attributes "
"are restored exactly no matter what happens::"
msgstr ""

#: ../../library/termios.rst:8
msgid "POSIX"
msgstr "POSIX"

#: ../../library/termios.rst:8
msgid "I/O control"
msgstr "I/O control（I/O 控制）"

#: ../../library/termios.rst:8
msgid "tty"
msgstr "tty"
