# Copyright (C) 2001-2023, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
# Matt Wang <mattwang44@gmail.com>, 2023
msgid ""
msgstr ""
"Project-Id-Version: Python 3.12\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-07-29 10:36+0000\n"
"PO-Revision-Date: 2018-05-23 16:06+0000\n"
"Last-Translator: Matt Wang <mattwang44@gmail.com>\n"
"Language-Team: Chinese - TAIWAN (https://github.com/python/python-docs-zh-"
"tw)\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/netrc.rst:3
msgid ":mod:`netrc` --- netrc file processing"
msgstr ":mod:`netrc` --- netrc 檔案處理"

#: ../../library/netrc.rst:11
msgid "**Source code:** :source:`Lib/netrc.py`"
msgstr "**原始碼：**\\ :source:`Lib/netrc.py`"

#: ../../library/netrc.rst:15
msgid ""
"The :class:`~netrc.netrc` class parses and encapsulates the netrc file "
"format used by the Unix :program:`ftp` program and other FTP clients."
msgstr ""
":class:`~netrc.netrc` 類別能夠剖析 (parse) 並封裝 (encapsulate) netrc 檔案格"
"式，以供 Unix :program:`ftp` 程式和其他 FTP 用戶端使用。"

#: ../../library/netrc.rst:21
msgid ""
"A :class:`~netrc.netrc` instance or subclass instance encapsulates data "
"from  a netrc file.  The initialization argument, if present, specifies the "
"file to parse.  If no argument is given, the file :file:`.netrc` in the "
"user's home directory -- as determined by :func:`os.path.expanduser` -- will "
"be read.  Otherwise, a :exc:`FileNotFoundError` exception will be raised. "
"Parse errors will raise :exc:`NetrcParseError` with diagnostic information "
"including the file name, line number, and terminating token. If no argument "
"is specified on a POSIX system, the presence of passwords in the :file:`."
"netrc` file will raise a :exc:`NetrcParseError` if the file ownership or "
"permissions are insecure (owned by a user other than the user running the "
"process, or accessible for read or write by any other user). This implements "
"security behavior equivalent to that of ftp and other programs that use :"
"file:`.netrc`."
msgstr ""
":class:`~netrc.netrc` 實例或其子類別實例能夠封裝來自 netrc 檔案的資料。可用初"
"始化引數（如有給定）指定要剖析的檔案，如果未給定引數，則將讀取（由 :func:`os."
"path.expanduser` 指定的）使用者主目錄中的 :file:`.netrc` 檔案，否則將引發 :"
"exc:`FileNotFoundError` 例外。剖析錯誤會引發 :exc:`NetrcParseError`，其帶有包"
"括檔案名稱、列號和終止 token 的診斷資訊。如果在 POSIX 系統上未指定引數，且若"
"檔案所有權或權限不安全（擁有者與運行該行程的使用者不同，或者可供任何其他使用"
"者讀取或寫入），存有密碼的 :file:`.netrc` 檔案將會引發 :exc:"
"`NetrcParseError`。這實作了與 ftp 和其他使用 :file:`.netrc` 程式等效的安全行"
"為。"

#: ../../library/netrc.rst:35
msgid "Added the POSIX permission check."
msgstr "新增了 POSIX 權限檢查。"

#: ../../library/netrc.rst:37
msgid ""
":func:`os.path.expanduser` is used to find the location of the :file:`."
"netrc` file when *file* is not passed as argument."
msgstr ""
"當未傳遞 *file* 引數時，:func:`os.path.expanduser` 可用於查找 :file:`.netrc` "
"檔案的位置。"

#: ../../library/netrc.rst:41
msgid ""
":class:`netrc` try UTF-8 encoding before using locale specific encoding. The "
"entry in the netrc file no longer needs to contain all tokens.  The missing "
"tokens' value default to an empty string.  All the tokens and their values "
"now can contain arbitrary characters, like whitespace and non-ASCII "
"characters. If the login name is anonymous, it won't trigger the security "
"check."
msgstr ""
":class:`netrc` 在使用特定語言環境編碼前會先嘗試 UTF-8 編碼。netrc 檔案中的條"
"目就不再需要包含所有 token，缺少的 token 值被預設為空字串。現在所有 token 及"
"其值都可以包含任意字元，例如空格和非 ASCII 字元。如果登入名稱為匿名，就不會觸"
"發安全檢查。"

#: ../../library/netrc.rst:52
msgid ""
"Exception raised by the :class:`~netrc.netrc` class when syntactical errors "
"are encountered in source text.  Instances of this exception provide three "
"interesting attributes:"
msgstr ""
"當原始文本中遇到語法錯誤時，:class:`~netrc.netrc` 類別會引發例外。此例外的實"
"例提供了三個有趣的屬性："

#: ../../library/netrc.rst:58
msgid "Textual explanation of the error."
msgstr "錯誤的文字解釋。"

#: ../../library/netrc.rst:62
msgid "The name of the source file."
msgstr "原始檔案的名稱。"

#: ../../library/netrc.rst:66
msgid "The line number on which the error was found."
msgstr "發現錯誤的列號。"

#: ../../library/netrc.rst:72
msgid "netrc Objects"
msgstr "netrc 物件"

#: ../../library/netrc.rst:74
msgid "A :class:`~netrc.netrc` instance has the following methods:"
msgstr ":class:`~netrc.netrc` 實例具有以下方法："

#: ../../library/netrc.rst:79
msgid ""
"Return a 3-tuple ``(login, account, password)`` of authenticators for "
"*host*. If the netrc file did not contain an entry for the given host, "
"return the tuple associated with the 'default' entry.  If neither matching "
"host nor default entry is available, return ``None``."
msgstr ""
"回傳 *host* 身份驗證器的三元素 tuple ``(login, account, password)``。如果 "
"netrc 檔案不包含給定主機的條目，則回傳與 'default' 條目關聯的 tuple。如果並無"
"匹配主機且預設條目也不可用則回傳 ``None``。"

#: ../../library/netrc.rst:87
msgid ""
"Dump the class data as a string in the format of a netrc file. (This "
"discards comments and may reorder the entries.)"
msgstr ""
"將類別資料傾印 (dump) 為 netrc 檔案格式的字串。（這會將註解移除，並可能會對條"
"目重新排序。）"

#: ../../library/netrc.rst:90
msgid "Instances of :class:`~netrc.netrc` have public instance variables:"
msgstr ":class:`~netrc.netrc` 的實例具有公開實例變數："

#: ../../library/netrc.rst:95
msgid ""
"Dictionary mapping host names to ``(login, account, password)`` tuples.  The "
"'default' entry, if any, is represented as a pseudo-host by that name."
msgstr ""
"將主機名稱對映到 ``(login, account, password)`` tuple 的字典。'default' 條目"
"（如存在）表示為該名稱對應到的偽主機 (pseudo-host)。"

#: ../../library/netrc.rst:101
msgid "Dictionary mapping macro names to string lists."
msgstr "巨集 (macro) 名稱與字串 list（串列）的對映字典。"
