# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2022, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: Python 3.12\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-04-16 00:03+0000\n"
"PO-Revision-Date: 2023-07-09 15:09+0800\n"
"Last-Translator: Po-Chuan Chen <present90308@gmail.com>\n"
"Language-Team: Chinese - TAIWAN (https://github.com/python/python-docs-zh-"
"tw)\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Poedit 3.3.2\n"

#: ../../library/venv.rst:2
msgid ":mod:`venv` --- Creation of virtual environments"
msgstr ""

#: ../../library/venv.rst:12
msgid "**Source code:** :source:`Lib/venv/`"
msgstr "**原始碼：**\\ :source:`Lib/venv/`"

#: ../../library/venv.rst:21
msgid ""
"The :mod:`!venv` module supports creating lightweight \"virtual "
"environments\", each with their own independent set of Python packages "
"installed in their :mod:`site` directories. A virtual environment is created "
"on top of an existing Python installation, known as the virtual "
"environment's \"base\" Python, and may optionally be isolated from the "
"packages in the base environment, so only those explicitly installed in the "
"virtual environment are available."
msgstr ""

#: ../../library/venv.rst:29
msgid ""
"When used from within a virtual environment, common installation tools such "
"as :pypi:`pip` will install Python packages into a virtual environment "
"without needing to be told to do so explicitly."
msgstr ""

#: ../../library/venv.rst:33
msgid "A virtual environment is (amongst other things):"
msgstr ""

#: ../../library/venv.rst:35
msgid ""
"Used to contain a specific Python interpreter and software libraries and "
"binaries which are needed to support a project (library or application). "
"These are by default isolated from software in other virtual environments "
"and Python interpreters and libraries installed in the operating system."
msgstr ""

#: ../../library/venv.rst:40
msgid ""
"Contained in a directory, conventionally either named ``venv`` or ``.venv`` "
"in the project directory, or under a container directory for lots of virtual "
"environments, such as ``~/.virtualenvs``."
msgstr ""

#: ../../library/venv.rst:44
msgid "Not checked into source control systems such as Git."
msgstr ""

#: ../../library/venv.rst:46
msgid ""
"Considered as disposable -- it should be simple to delete and recreate it "
"from scratch. You don't place any project code in the environment"
msgstr ""

#: ../../library/venv.rst:49
msgid ""
"Not considered as movable or copyable -- you just recreate the same "
"environment in the target location."
msgstr ""

#: ../../library/venv.rst:52
msgid "See :pep:`405` for more background on Python virtual environments."
msgstr "更多關於 Python 虛擬環境的背景資訊請見 :pep:`405`\\ 。"

#: ../../library/venv.rst:56
msgid ""
"`Python Packaging User Guide: Creating and using virtual environments "
"<https://packaging.python.org/guides/installing-using-pip-and-virtual-"
"environments/#create-and-use-virtual-environments>`__"
msgstr ""

#: ../../includes/wasm-notavail.rst:3
msgid ":ref:`Availability <availability>`: not Emscripten, not WASI."
msgstr ""

#: ../../includes/wasm-notavail.rst:5
msgid ""
"This module does not work or is not available on WebAssembly platforms "
"``wasm32-emscripten`` and ``wasm32-wasi``. See :ref:`wasm-availability` for "
"more information."
msgstr ""
"此模組在 WebAssembly 平台 ``wasm32-emscripten`` 和 ``wasm32-wasi`` 上無法作用"
"或無法使用。有關更多資訊，請參閱 :ref:`wasm-availability`。"

#: ../../library/venv.rst:62
msgid "Creating virtual environments"
msgstr "建立虛擬環境"

#: ../../using/venv-create.inc:1
msgid ""
"Creation of :ref:`virtual environments <venv-def>` is done by executing the "
"command ``venv``::"
msgstr "建立\\ :ref:`虛擬環境 <venv-def>`\\ 的方法是透過執行指令 ``venv``："

#: ../../using/venv-create.inc:6
msgid ""
"Running this command creates the target directory (creating any parent "
"directories that don't exist already) and places a ``pyvenv.cfg`` file in it "
"with a ``home`` key pointing to the Python installation from which the "
"command was run (a common name for the target directory is ``.venv``).  It "
"also creates a ``bin`` (or ``Scripts`` on Windows) subdirectory containing a "
"copy/symlink of the Python binary/binaries (as appropriate for the platform "
"or arguments used at environment creation time). It also creates an "
"(initially empty) ``lib/pythonX.Y/site-packages`` subdirectory (on Windows, "
"this is ``Lib\\site-packages``). If an existing directory is specified, it "
"will be re-used."
msgstr ""
"執行此命令會建立目標目錄（同時也會建立任何還不存在的父目錄）並在目錄中放置一"
"個名為 ``pyvenv.cfg`` 的檔案，其中包含一個指向執行該命令的 Python 安裝路徑的 "
"``home`` 鍵（目標目錄的常見名稱為 ``.venv``）。同時，它會建立一個 ``bin`` "
"（在 Windows 上為 ``Scripts``）子目錄，其中包含一個 Python 二進位檔案的副本/"
"符號連結（根據建立環境時使用的平台或引數而定）。此外，它還會建立一個（最初為"
"空的） ``lib/pythonX.Y/site-packages`` 子目錄（在 Windows 上為 ``Lib\\site-"
"packages``）。如果指定的目錄已存在，則將重新使用該目錄。"

#: ../../using/venv-create.inc:17
msgid ""
"The use of ``venv`` is now recommended for creating virtual environments."
msgstr "目前建議使用 ``venv`` 來建立虛擬環境。"

#: ../../using/venv-create.inc:20
msgid ""
"``pyvenv`` was the recommended tool for creating virtual environments for "
"Python 3.3 and 3.4, and is :ref:`deprecated in Python 3.6 <whatsnew36-venv>`."
msgstr ""
"``pyvenv`` 是在 Python 3.3 和 3.4 中建立虛擬環境的推薦工具，但在 Python 3.6 "
"中已被\\ :ref:`棄用 <whatsnew36-venv>`。"

#: ../../using/venv-create.inc:27
msgid "On Windows, invoke the ``venv`` command as follows::"
msgstr "在 Windows 上，執行以下命令以使用 ``venv``："

#: ../../using/venv-create.inc:31
msgid ""
"Alternatively, if you configured the ``PATH`` and ``PATHEXT`` variables for "
"your :ref:`Python installation <using-on-windows>`::"
msgstr ""
"或者，如你已經為你的 :ref:`Python 安裝 <using-on-windows>`\\ 配置了 ``PATH`` "
"和 ``PATHEXT`` 變數，則可以執行以下命令："

#: ../../using/venv-create.inc:36
msgid "The command, if run with ``-h``, will show the available options::"
msgstr "如果使用 ``-h`` 選項執行該命令，將會顯示可用的選項："

#: ../../library/venv.rst:313 ../../using/venv-create.inc:72
msgid "``setuptools`` is no longer a core venv dependency."
msgstr ""

#: ../../using/venv-create.inc:74
msgid ""
"Add ``--upgrade-deps`` option to upgrade pip + setuptools to the latest on "
"PyPI"
msgstr ""
"新增 ``--upgrade-deps`` 選項以將 pip 和 setuptools 升級至 PyPI 上的最新版本"

#: ../../using/venv-create.inc:77
msgid ""
"Installs pip by default, added the ``--without-pip``  and ``--copies`` "
"options"
msgstr "預設情況下安裝 pip，並新增了 ``--without-pip`` 和 ``--copies`` 選項"

#: ../../using/venv-create.inc:81
msgid ""
"In earlier versions, if the target directory already existed, an error was "
"raised, unless the ``--clear`` or ``--upgrade`` option was provided."
msgstr ""
"在較早的版本中，如果目標目錄已存在，除非提供了 ``--clear`` 或 ``--upgrade`` "
"選項，否則會引發錯誤。"

#: ../../using/venv-create.inc:86
msgid ""
"While symlinks are supported on Windows, they are not recommended. Of "
"particular note is that double-clicking ``python.exe`` in File Explorer will "
"resolve the symlink eagerly and ignore the virtual environment."
msgstr ""
"雖然在 Windows 上支援符號連結，但並不建議使用。特別需要注意的是，在檔案總管中"
"按兩下 ``python.exe`` 會急切地解析符號連結並忽略虛擬環境。"

#: ../../using/venv-create.inc:91
msgid ""
"On Microsoft Windows, it may be required to enable the ``Activate.ps1`` "
"script by setting the execution policy for the user. You can do this by "
"issuing the following PowerShell command:"
msgstr ""
"在 Microsoft Windows 上，可能需要通過設置使用者的執行策略來啟用 ``Activate."
"ps1`` 腳本。你可以發出以下 PowerShell 命令來執行此操作："

#: ../../using/venv-create.inc:95
msgid ""
"PS C:\\> Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope CurrentUser"
msgstr ""

#: ../../using/venv-create.inc:97
msgid ""
"See `About Execution Policies <https://go.microsoft.com/fwlink/?"
"LinkID=135170>`_ for more information."
msgstr ""
"有關更多資訊，請參閱\\ `關於執行策略 <https://go.microsoft.com/fwlink/?"
"LinkID=135170>`_。"

#: ../../using/venv-create.inc:101
msgid ""
"The created ``pyvenv.cfg`` file also includes the ``include-system-site-"
"packages`` key, set to ``true`` if ``venv`` is run with the ``--system-site-"
"packages`` option, ``false`` otherwise."
msgstr ""
"被建立的 ``pyvenv.cfg`` 檔案還包括了 ``include-system-site-packages`` 的鍵，"
"如果使用 ``venv`` 執行時帶有 ``--system-site-packages`` 選項，則設置為 "
"``true``，否則設置為 ``false``。"

#: ../../using/venv-create.inc:105
msgid ""
"Unless the ``--without-pip`` option is given, :mod:`ensurepip` will be "
"invoked to bootstrap ``pip`` into the virtual environment."
msgstr ""
"除非 ``--without-pip`` 選項被提供，否則將調用 :mod:`ensurepip` 來啟動 "
"``pip`` 到虛擬環境中。"

#: ../../using/venv-create.inc:108
msgid ""
"Multiple paths can be given to ``venv``, in which case an identical virtual "
"environment will be created, according to the given options, at each "
"provided path."
msgstr ""
"可以向 ``venv`` 提供多個路徑，這樣每個提供的路徑都將根據給定的選項建立一個相"
"同的虛擬環境。"

#: ../../library/venv.rst:69
msgid "How venvs work"
msgstr "虛擬環境如何運作"

#: ../../library/venv.rst:71
msgid ""
"When a Python interpreter is running from a virtual environment, :data:`sys."
"prefix` and :data:`sys.exec_prefix` point to the directories of the virtual "
"environment, whereas :data:`sys.base_prefix` and :data:`sys."
"base_exec_prefix` point to those of the base Python used to create the "
"environment. It is sufficient to check ``sys.prefix != sys.base_prefix`` to "
"determine if the current interpreter is running from a virtual environment."
msgstr ""
"當 Python 直譯器跑在虛擬環境時，:data:`sys.prefix` 和 :data:`sys."
"exec_prefix` 會指向虛擬環境的目錄，而 :data:`sys.base_prefix` 和 :data:`sys."
"base_exec_prefix` 會指向建立虛擬環境的基礎 Python 的目錄。檢查 ``sys.prefix !"
"= sys.base_prefix`` 就可以確定目前的直譯器是否跑在虛擬環境中。"

#: ../../library/venv.rst:80
msgid ""
"A virtual environment may be \"activated\" using a script in its binary "
"directory (``bin`` on POSIX; ``Scripts`` on Windows). This will prepend that "
"directory to your :envvar:`PATH`, so that running :program:`python` will "
"invoke the environment's Python interpreter and you can run installed "
"scripts without having to use their full path. The invocation of the "
"activation script is platform-specific (:samp:`{<venv>}` must be replaced by "
"the path to the directory containing the virtual environment):"
msgstr ""
"虛擬環境可以透過位於二進位檔案目錄中的腳本「啟用」（在 POSIX 上為 ``bin``；"
"在 Windows 上為 ``Scripts``）這會將該目錄加入到你的 :envvar:`PATH`，當你運"
"行 :program:`python` 時就會調用該環境的直譯器並且執行已安裝的腳本，而不需要使"
"用完整的路徑。啟動腳本的方式因平台而異（:samp:`{<venv>}` 需要替換成包含虛擬環"
"境的目錄路徑）"

#: ../../library/venv.rst:90
msgid "Platform"
msgstr "平台"

#: ../../library/venv.rst:90
msgid "Shell"
msgstr "Shell"

#: ../../library/venv.rst:90
msgid "Command to activate virtual environment"
msgstr "啟動虛擬環境的指令"

#: ../../library/venv.rst:92
msgid "POSIX"
msgstr "POSIX"

#: ../../library/venv.rst:92
msgid "bash/zsh"
msgstr "bash/zsh"

#: ../../library/venv.rst:92
msgid ":samp:`$ source {<venv>}/bin/activate`"
msgstr ":samp:`$ source {<venv>}/bin/activate`"

#: ../../library/venv.rst:94
msgid "fish"
msgstr "fish"

#: ../../library/venv.rst:94
msgid ":samp:`$ source {<venv>}/bin/activate.fish`"
msgstr ":samp:`$ source {<venv>}/bin/activate.fish`"

#: ../../library/venv.rst:96
msgid "csh/tcsh"
msgstr "csh/tcsh"

#: ../../library/venv.rst:96
msgid ":samp:`$ source {<venv>}/bin/activate.csh`"
msgstr ":samp:`$ source {<venv>}/bin/activate.csh`"

#: ../../library/venv.rst:98 ../../library/venv.rst:102
msgid "PowerShell"
msgstr "PowerShell"

#: ../../library/venv.rst:98
msgid ":samp:`$ {<venv>}/bin/Activate.ps1`"
msgstr ":samp:`$ {<venv>}/bin/Activate.ps1`"

#: ../../library/venv.rst:100
msgid "Windows"
msgstr "Windows"

#: ../../library/venv.rst:100
msgid "cmd.exe"
msgstr "cmd.exe"

#: ../../library/venv.rst:100
msgid ":samp:`C:\\\\> {<venv>}\\\\Scripts\\\\activate.bat`"
msgstr ":samp:`C:\\\\> {<venv>}\\\\Scripts\\\\activate.bat`"

#: ../../library/venv.rst:102
msgid ":samp:`PS C:\\\\> {<venv>}\\\\Scripts\\\\Activate.ps1`"
msgstr ":samp:`PS C:\\\\> {<venv>}\\\\Scripts\\\\Activate.ps1`"

#: ../../library/venv.rst:105
msgid ":program:`fish` and :program:`csh` activation scripts."
msgstr ":program:`fish` 和 :program:`csh` 啟動腳本。"

#: ../../library/venv.rst:108
msgid ""
"PowerShell activation scripts installed under POSIX for PowerShell Core "
"support."
msgstr "PowerShell 的啟動腳本安裝在 POSIX 上支援 PowerShell Core。"

#: ../../library/venv.rst:112
msgid ""
"You don't specifically *need* to activate a virtual environment, as you can "
"just specify the full path to that environment's Python interpreter when "
"invoking Python. Furthermore, all scripts installed in the environment "
"should be runnable without activating it."
msgstr ""
"你不用特別開啟虛擬環境，你可以在調用 Python 時指定該環境下 Python 直譯器的完"
"整路徑。此外，所有安裝在環境裡的腳本都應該都可以在未啟用虛擬環境的情況下運"
"行。"

#: ../../library/venv.rst:118
msgid ""
"In order to achieve this, scripts installed into virtual environments have a "
"\"shebang\" line which points to the environment's Python interpreter, i.e. :"
"samp:`#!/{<path-to-venv>}/bin/python`. This means that the script will run "
"with that interpreter regardless of the value of :envvar:`PATH`. On Windows, "
"\"shebang\" line processing is supported if you have the :ref:`launcher` "
"installed. Thus, double-clicking an installed script in a Windows Explorer "
"window should run it with the correct interpreter without the environment "
"needing to be activated or on the :envvar:`PATH`."
msgstr ""
"為了實現這一點，安裝在虛擬環境中的腳本會有一個 \"shebang\" 列，此列指向該環境"
"的 Python 直譯器，例如： :samp:`#!/{<path-to-venv>}/bin/python`。這代表無論 :"
"envvar:`PATH` 的值為何，該腳本都會在直譯器上運行。在 Windows 上，如果你安裝"
"了 :ref:`launcher`，則支援 \"shebang\" 列處理。因此，在 Windows 檔案總管"
"（Windows Explorer）中雙擊已安裝的腳本，應該可以在沒有啟用環境或將其加入 :"
"envvar:`PATH` 的情況下正確地運行。"

#: ../../library/venv.rst:127
msgid ""
"When a virtual environment has been activated, the :envvar:`!VIRTUAL_ENV` "
"environment variable is set to the path of the environment. Since explicitly "
"activating a virtual environment is not required to use it, :envvar:`!"
"VIRTUAL_ENV` cannot be relied upon to determine whether a virtual "
"environment is being used."
msgstr ""
"當虛擬環境被啟用時，:envvar:`!VIRTUAL_ENV` 環境變數會被設置為該環境的路徑。由"
"於不需要明確啟用虛擬環境才能使用它。因此，無法依賴 :envvar:`!VIRTUAL_ENV` 來"
"判斷是否正在使用虛擬環境。"

#: ../../library/venv.rst:133
msgid ""
"Because scripts installed in environments should not expect the environment "
"to be activated, their shebang lines contain the absolute paths to their "
"environment's interpreters. Because of this, environments are inherently non-"
"portable, in the general case. You should always have a simple means of "
"recreating an environment (for example, if you have a requirements file "
"``requirements.txt``, you can invoke ``pip install -r requirements.txt`` "
"using the environment's ``pip`` to install all of the packages needed by the "
"environment). If for any reason you need to move the environment to a new "
"location, you should recreate it at the desired location and delete the one "
"at the old location. If you move an environment because you moved a parent "
"directory of it, you should recreate the environment in its new location. "
"Otherwise, software installed into the environment may not work as expected."
msgstr ""
"因為安裝在環境中的腳本不應該預期該環境已經被啟動，所以它們的 shebang 列會包含"
"環境直譯器的絕對路徑。因此，在一般情況下，環境本質上是不可攜帶的。你應該使用"
"一個簡單的方法來重新建立一個環境（例如：如果你有一個名為 ``requirements."
"txt`` 的需求檔案，你可以使用環境的 ``pip install -r requirements.txt`` 來安裝"
"環境所需的所有套件）。如果出於某種原因，你需要將環境移至新位置，你應該在所需"
"位置重新建立它，並刪除舊位置的環境。如果你移動環境是因為移動了其父目錄，你應"
"該在新位置重新建立環境。否則，安裝在該環境中的軟體可能無法正常運作。"

#: ../../library/venv.rst:147
msgid ""
"You can deactivate a virtual environment by typing ``deactivate`` in your "
"shell. The exact mechanism is platform-specific and is an internal "
"implementation detail (typically, a script or shell function will be used)."
msgstr ""
"你可以在 shell 輸入 ``deactivate`` 來關閉虛擬環境。具體的使用方式因平台而異，"
"是內部實作的細節（通常會使用腳本或是 shell 函式）"

#: ../../library/venv.rst:155
msgid "API"
msgstr "API"

#: ../../library/venv.rst:159
msgid ""
"The high-level method described above makes use of a simple API which "
"provides mechanisms for third-party virtual environment creators to "
"customize environment creation according to their needs, the :class:"
"`EnvBuilder` class."
msgstr ""
"上述提到的高階 method（方法）透過簡單的 API 使用， 為第三方虛擬環境建立者提供"
"可以依據他們需求來建立環境的客製化機制： :class:`EnvBuilder` class。"

#: ../../library/venv.rst:167
msgid ""
"The :class:`EnvBuilder` class accepts the following keyword arguments on "
"instantiation:"
msgstr "進行實例化時，class :class:`EnvBuilder` 接受下列的關鍵字引數："

#: ../../library/venv.rst:170
msgid ""
"``system_site_packages`` -- a Boolean value indicating that the system "
"Python site-packages should be available to the environment (defaults to "
"``False``)."
msgstr ""
"``system_site_packages`` -- 為一個 Boolean （布林值），並表明系統的 Python "
"site-packages 是否可以在環境中可用（預設為 ``False`` ）。"

#: ../../library/venv.rst:173
msgid ""
"``clear`` -- a Boolean value which, if true, will delete the contents of any "
"existing target directory, before creating the environment."
msgstr ""
"``clear`` -- 為一個 Boolean，如果為 true，則在建立環境之前，刪除目標目錄內所"
"有存在的內容。"

#: ../../library/venv.rst:176
msgid ""
"``symlinks`` -- a Boolean value indicating whether to attempt to symlink the "
"Python binary rather than copying."
msgstr ""
"``symlinks`` --  為一個 Boolean，並表明是否嘗試與 Python 二進位檔案建立符號連"
"結而不是複製該檔案。"

#: ../../library/venv.rst:179
msgid ""
"``upgrade`` -- a Boolean value which, if true, will upgrade an existing "
"environment with the running Python - for use when that Python has been "
"upgraded in-place (defaults to ``False``)."
msgstr ""
"``upgrade`` -- 為一個 Boolean，若為 true，則會在執行 Python 時為現有的環境進"
"行升級。目的是讓 Python 可以升級到位（預設為 ``False``）。"

#: ../../library/venv.rst:183
msgid ""
"``with_pip`` -- a Boolean value which, if true, ensures pip is installed in "
"the virtual environment. This uses :mod:`ensurepip` with the ``--default-"
"pip`` option."
msgstr ""
"``with_pip`` -- 為一個 Boolean，若為 true，則確保 pip 有安裝至虛擬環境之中。"
"當有 ``--default-pip`` 的選項時，會使用 :mod:`ensurepip`。"

#: ../../library/venv.rst:187
msgid ""
"``prompt`` -- a String to be used after virtual environment is activated "
"(defaults to ``None`` which means directory name of the environment would be "
"used). If the special string ``\".\"`` is provided, the basename of the "
"current directory is used as the prompt."
msgstr ""
"``prompt`` -- 為一個 String（字串），該字串會在虛擬環境啟動時被使用。（預設"
"為 ``None``，代表該環境的目錄名稱會被使用）倘若出現特殊字串 ``\".\"`` ，則當"
"前目錄的 basename 會做為提示路徑使用。"

#: ../../library/venv.rst:192
msgid "``upgrade_deps`` -- Update the base venv modules to the latest on PyPI"
msgstr "``upgrade_deps`` -- 更新基礎 venv 模組至 PyPI 的最新版本"

#: ../../library/venv.rst:194 ../../library/venv.rst:372
msgid "Added the ``with_pip`` parameter"
msgstr "新增 ``with_pip`` 參數"

#: ../../library/venv.rst:197 ../../library/venv.rst:375
msgid "Added the ``prompt`` parameter"
msgstr "新增 ``prompt`` 參數"

#: ../../library/venv.rst:200 ../../library/venv.rst:378
msgid "Added the ``upgrade_deps`` parameter"
msgstr "新增 ``upgrade_deps`` 參數"

#: ../../library/venv.rst:203
msgid ""
"Creators of third-party virtual environment tools will be free to use the "
"provided :class:`EnvBuilder` class as a base class."
msgstr ""
"第三方虛擬環境工具的建立者可以自由地使用 :class:`EnvBuilder` class 作為 base "
"class（基底類別）使用."

#: ../../library/venv.rst:206
msgid "The returned env-builder is an object which has a method, ``create``:"
msgstr "回傳的 env-builder 為一個物件，且帶有一個 method ``create``："

#: ../../library/venv.rst:210
msgid ""
"Create a virtual environment by specifying the target directory (absolute or "
"relative to the current directory) which is to contain the virtual "
"environment.  The ``create`` method will either create the environment in "
"the specified directory, or raise an appropriate exception."
msgstr ""
"透過指定將會容納虛擬環境的目標目錄來建立一個虛擬環境（絕對路徑或相對路徑到該"
"目錄），也就是在該目錄中容納虛擬環境。``create`` method 將會在指定的目錄下建"
"立環境，或是觸發適當的例外。"

#: ../../library/venv.rst:216
msgid ""
"The ``create`` method of the :class:`EnvBuilder` class illustrates the hooks "
"available for subclass customization::"
msgstr ""
":class:`EnvBuilder` class 的 ``create`` method 會闡述可用的 Hooks 以客製化 "
"subclass （子類別）::"

#: ../../library/venv.rst:231
msgid ""
"Each of the methods :meth:`ensure_directories`, :meth:"
"`create_configuration`, :meth:`setup_python`, :meth:`setup_scripts` and :"
"meth:`post_setup` can be overridden."
msgstr ""
"每個 methods :meth:`ensure_directories`、:meth:`create_configuration`、:meth:"
"`setup_python`、:meth:`setup_scripts` 及 :meth:`post_setup` 都可以被覆寫。"

#: ../../library/venv.rst:237
msgid ""
"Creates the environment directory and all necessary subdirectories that "
"don't already exist, and returns a context object.  This context object is "
"just a holder for attributes (such as paths) for use by the other methods.  "
"If the :class:`EnvBuilder` is created with the arg ``clear=True``, contents "
"of the environment directory will be cleared and then all necessary "
"subdirectories will be recreated."
msgstr ""
"建立還不存在的環境目錄及必要的子目錄，並回傳一個情境物件（context object）。"
"這個情境物件只是一個屬性 (例如：路徑) 的所有者，可被其他 method 使用。如果 :"
"class:`EnvBuilder` 已被建立且帶有 ``clear=True`` 的引數，該環境目錄下的內容將"
"被清空，以及所有必要的子目錄將被重新建立。"

#: ../../library/venv.rst:244
msgid ""
"The returned context object is a :class:`types.SimpleNamespace` with the "
"following attributes:"
msgstr ""
"回傳的情境物件（context object）其型別會是 :class:`types.SimpleNamespace`，並"
"包含以下屬性："

#: ../../library/venv.rst:247
msgid ""
"``env_dir`` - The location of the virtual environment. Used for "
"``__VENV_DIR__`` in activation scripts (see :meth:`install_scripts`)."
msgstr ""

#: ../../library/venv.rst:250
msgid ""
"``env_name`` - The name of the virtual environment. Used for "
"``__VENV_NAME__`` in activation scripts (see :meth:`install_scripts`)."
msgstr ""

#: ../../library/venv.rst:253
msgid ""
"``prompt`` - The prompt to be used by the activation scripts. Used for "
"``__VENV_PROMPT__`` in activation scripts (see :meth:`install_scripts`)."
msgstr ""

#: ../../library/venv.rst:256
msgid ""
"``executable`` - The underlying Python executable used by the virtual "
"environment. This takes into account the case where a virtual environment is "
"created from another virtual environment."
msgstr ""

#: ../../library/venv.rst:260
msgid "``inc_path`` - The include path for the virtual environment."
msgstr ""

#: ../../library/venv.rst:262
msgid "``lib_path`` - The purelib path for the virtual environment."
msgstr ""

#: ../../library/venv.rst:264
msgid "``bin_path`` - The script path for the virtual environment."
msgstr ""

#: ../../library/venv.rst:266
msgid ""
"``bin_name`` - The name of the script path relative to the virtual "
"environment location. Used for ``__VENV_BIN_NAME__`` in activation scripts "
"(see :meth:`install_scripts`)."
msgstr ""

#: ../../library/venv.rst:270
msgid ""
"``env_exe`` - The name of the Python interpreter in the virtual environment. "
"Used for ``__VENV_PYTHON__`` in activation scripts (see :meth:"
"`install_scripts`)."
msgstr ""

#: ../../library/venv.rst:274
msgid ""
"``env_exec_cmd`` - The name of the Python interpreter, taking into account "
"filesystem redirections. This can be used to run Python in the virtual "
"environment."
msgstr ""

#: ../../library/venv.rst:279
msgid ""
"The *venv* :ref:`sysconfig installation scheme <installation_paths>` is used "
"to construct the paths of the created directories."
msgstr ""

#: ../../library/venv.rst:284
msgid ""
"The attribute ``lib_path`` was added to the context, and the context object "
"was documented."
msgstr ""

#: ../../library/venv.rst:290
msgid "Creates the ``pyvenv.cfg`` configuration file in the environment."
msgstr ""

#: ../../library/venv.rst:294
msgid ""
"Creates a copy or symlink to the Python executable in the environment. On "
"POSIX systems, if a specific executable ``python3.x`` was used, symlinks to "
"``python`` and ``python3`` will be created pointing to that executable, "
"unless files with those names already exist."
msgstr ""

#: ../../library/venv.rst:301
msgid ""
"Installs activation scripts appropriate to the platform into the virtual "
"environment."
msgstr ""

#: ../../library/venv.rst:306
msgid ""
"Upgrades the core venv dependency packages (currently ``pip``) in the "
"environment. This is done by shelling out to the ``pip`` executable in the "
"environment."
msgstr ""

#: ../../library/venv.rst:317
msgid ""
"A placeholder method which can be overridden in third party implementations "
"to pre-install packages in the virtual environment or perform other post-"
"creation steps."
msgstr ""

#: ../../library/venv.rst:321
msgid ""
"Windows now uses redirector scripts for ``python[w].exe`` instead of copying "
"the actual binaries. In 3.7.2 only :meth:`setup_python` does nothing unless "
"running from a build in the source tree."
msgstr ""

#: ../../library/venv.rst:326
msgid ""
"Windows copies the redirector scripts as part of :meth:`setup_python` "
"instead of :meth:`setup_scripts`. This was not the case in 3.7.2. When using "
"symlinks, the original executables will be linked."
msgstr ""

#: ../../library/venv.rst:331
msgid ""
"In addition, :class:`EnvBuilder` provides this utility method that can be "
"called from :meth:`setup_scripts` or :meth:`post_setup` in subclasses to "
"assist in installing custom scripts into the virtual environment."
msgstr ""

#: ../../library/venv.rst:337
msgid ""
"*path* is the path to a directory that should contain subdirectories "
"\"common\", \"posix\", \"nt\", each containing scripts destined for the bin "
"directory in the environment.  The contents of \"common\" and the directory "
"corresponding to :data:`os.name` are copied after some text replacement of "
"placeholders:"
msgstr ""

#: ../../library/venv.rst:343
msgid ""
"``__VENV_DIR__`` is replaced with the absolute path of the environment "
"directory."
msgstr ""

#: ../../library/venv.rst:346
msgid ""
"``__VENV_NAME__`` is replaced with the environment name (final path segment "
"of environment directory)."
msgstr ""

#: ../../library/venv.rst:349
msgid ""
"``__VENV_PROMPT__`` is replaced with the prompt (the environment name "
"surrounded by parentheses and with a following space)"
msgstr ""

#: ../../library/venv.rst:352
msgid ""
"``__VENV_BIN_NAME__`` is replaced with the name of the bin directory (either "
"``bin`` or ``Scripts``)."
msgstr ""

#: ../../library/venv.rst:355
msgid ""
"``__VENV_PYTHON__`` is replaced with the absolute path of the environment's "
"executable."
msgstr ""

#: ../../library/venv.rst:358
msgid ""
"The directories are allowed to exist (for when an existing environment is "
"being upgraded)."
msgstr ""

#: ../../library/venv.rst:361
msgid "There is also a module-level convenience function:"
msgstr ""

#: ../../library/venv.rst:367
msgid ""
"Create an :class:`EnvBuilder` with the given keyword arguments, and call "
"its :meth:`~EnvBuilder.create` method with the *env_dir* argument."
msgstr ""

#: ../../library/venv.rst:382
msgid "An example of extending ``EnvBuilder``"
msgstr ""

#: ../../library/venv.rst:384
msgid ""
"The following script shows how to extend :class:`EnvBuilder` by implementing "
"a subclass which installs setuptools and pip into a created virtual "
"environment::"
msgstr ""

#: ../../library/venv.rst:595
msgid ""
"This script is also available for download `online <https://gist.github.com/"
"vsajip/4673395>`_."
msgstr ""

#: ../../library/venv.rst:14
msgid "Environments"
msgstr "Environments （環境）"

#: ../../library/venv.rst:14
msgid "virtual"
msgstr "virtual （虛擬）"
