# Copyright (C) 2001-2022, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
# Matt Wang <mattwang44@gmail.com>, 2022
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-12-07 00:17+0000\n"
"PO-Revision-Date: 2022-02-09 11:27+0800\n"
"Last-Translator: Matt Wang <mattwang44@gmail.com>\n"
"Language-Team: Chinese - TAIWAN (https://github.com/python/python-docs-zh-"
"tw)\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Poedit 3.0.1\n"

#: ../../library/asyncio-llapi-index.rst:6
msgid "Low-level API Index"
msgstr "低階 API 索引"

#: ../../library/asyncio-llapi-index.rst:8
msgid "This page lists all low-level asyncio APIs."
msgstr "本頁列出所有低階 asyncio APIs。"

#: ../../library/asyncio-llapi-index.rst:12
msgid "Obtaining the Event Loop"
msgstr "獲取事件迴圈"

#: ../../library/asyncio-llapi-index.rst:18
msgid ":func:`asyncio.get_running_loop`"
msgstr ":func:`asyncio.get_running_loop`"

#: ../../library/asyncio-llapi-index.rst:19
msgid "The **preferred** function to get the running event loop."
msgstr "**推薦使用**\\ 於獲取當前運行事件迴圈 (event loop) 的函式。"

#: ../../library/asyncio-llapi-index.rst:21
msgid ":func:`asyncio.get_event_loop`"
msgstr ":func:`asyncio.get_event_loop`"

#: ../../library/asyncio-llapi-index.rst:22
msgid "Get an event loop instance (running or current via the current policy)."
msgstr "獲得一個（正在運行的或透過當前 policy 建立的）事件迴圈實例。"

#: ../../library/asyncio-llapi-index.rst:24
msgid ":func:`asyncio.set_event_loop`"
msgstr ":func:`asyncio.set_event_loop`"

#: ../../library/asyncio-llapi-index.rst:25
msgid "Set the event loop as current via the current policy."
msgstr "透過當前 policy 來設定當前事件迴圈。"

#: ../../library/asyncio-llapi-index.rst:27
msgid ":func:`asyncio.new_event_loop`"
msgstr ":func:`asyncio.new_event_loop`"

#: ../../library/asyncio-llapi-index.rst:28
msgid "Create a new event loop."
msgstr "建立一個新的事件迴圈。"

#: ../../library/asyncio-llapi-index.rst:32
#: ../../library/asyncio-llapi-index.rst:269
msgid "Examples"
msgstr "範例"

#: ../../library/asyncio-llapi-index.rst:33
msgid ":ref:`Using asyncio.get_running_loop() <asyncio_example_future>`."
msgstr ":ref:`使用 asyncio.get_running_loop() <asyncio_example_future>`\\ 。"

#: ../../library/asyncio-llapi-index.rst:37
msgid "Event Loop Methods"
msgstr "事件迴圈方法"

#: ../../library/asyncio-llapi-index.rst:39
msgid ""
"See also the main documentation section about the :ref:`asyncio-event-loop-"
"methods`."
msgstr "也請查閱文件中關於\\ :ref:`asyncio-event-loop-methods`\\ 的主要段落。"

#: ../../library/asyncio-llapi-index.rst:42
msgid "Lifecycle"
msgstr "生命週期"

#: ../../library/asyncio-llapi-index.rst:47
msgid ":meth:`loop.run_until_complete`"
msgstr ":meth:`loop.run_until_complete`"

#: ../../library/asyncio-llapi-index.rst:48
msgid "Run a Future/Task/awaitable until complete."
msgstr "執行一個 Future/Task/awaitable（可等待物件）直到完成。"

#: ../../library/asyncio-llapi-index.rst:50
msgid ":meth:`loop.run_forever`"
msgstr ":meth:`loop.run_forever`"

#: ../../library/asyncio-llapi-index.rst:51
msgid "Run the event loop forever."
msgstr "持續運行事件迴圈。"

#: ../../library/asyncio-llapi-index.rst:53
msgid ":meth:`loop.stop`"
msgstr ":meth:`loop.stop`"

#: ../../library/asyncio-llapi-index.rst:54
msgid "Stop the event loop."
msgstr "停止事件迴圈。"

#: ../../library/asyncio-llapi-index.rst:56
msgid ":meth:`loop.close`"
msgstr ":meth:`loop.close`"

#: ../../library/asyncio-llapi-index.rst:57
msgid "Close the event loop."
msgstr "關閉事件迴圈。"

#: ../../library/asyncio-llapi-index.rst:59
msgid ":meth:`loop.is_running()`"
msgstr ":meth:`loop.is_running()`"

#: ../../library/asyncio-llapi-index.rst:60
msgid "Return ``True`` if the event loop is running."
msgstr "如果事件迴圈正在執行則回傳 ``True``\\ 。"

#: ../../library/asyncio-llapi-index.rst:62
msgid ":meth:`loop.is_closed()`"
msgstr ":meth:`loop.is_closed()`"

#: ../../library/asyncio-llapi-index.rst:63
msgid "Return ``True`` if the event loop is closed."
msgstr "如果事件迴圈已經被關閉則回傳 ``True``\\ ，。"

#: ../../library/asyncio-llapi-index.rst:65
msgid "``await`` :meth:`loop.shutdown_asyncgens`"
msgstr "``await`` :meth:`loop.shutdown_asyncgens`"

#: ../../library/asyncio-llapi-index.rst:66
msgid "Close asynchronous generators."
msgstr "關閉非同步產生器 (asynchronous generators)。"

#: ../../library/asyncio-llapi-index.rst:69
msgid "Debugging"
msgstr "除錯"

#: ../../library/asyncio-llapi-index.rst:74
msgid ":meth:`loop.set_debug`"
msgstr ":meth:`loop.set_debug`"

#: ../../library/asyncio-llapi-index.rst:75
msgid "Enable or disable the debug mode."
msgstr "開啟或禁用除錯模式。"

#: ../../library/asyncio-llapi-index.rst:77
msgid ":meth:`loop.get_debug`"
msgstr ":meth:`loop.get_debug`"

#: ../../library/asyncio-llapi-index.rst:78
msgid "Get the current debug mode."
msgstr "獲取當前除錯模式。"

#: ../../library/asyncio-llapi-index.rst:81
msgid "Scheduling Callbacks"
msgstr "為回呼函式排程"

#: ../../library/asyncio-llapi-index.rst:86
msgid ":meth:`loop.call_soon`"
msgstr ":meth:`loop.call_soon`"

#: ../../library/asyncio-llapi-index.rst:87
msgid "Invoke a callback soon."
msgstr "儘快調用回呼函式 (callback)。"

#: ../../library/asyncio-llapi-index.rst:89
msgid ":meth:`loop.call_soon_threadsafe`"
msgstr ":meth:`loop.call_soon_threadsafe`"

#: ../../library/asyncio-llapi-index.rst:90
msgid "A thread-safe variant of :meth:`loop.call_soon`."
msgstr ":meth:`loop.call_soon` 方法之有支援執行緒安全 (thread-safe) 變體。"

#: ../../library/asyncio-llapi-index.rst:92
msgid ":meth:`loop.call_later`"
msgstr ":meth:`loop.call_later`"

#: ../../library/asyncio-llapi-index.rst:93
msgid "Invoke a callback *after* the given time."
msgstr "在給定時間\\ *之後*\\ 調用回呼函式。"

#: ../../library/asyncio-llapi-index.rst:95
msgid ":meth:`loop.call_at`"
msgstr ":meth:`loop.call_at`"

#: ../../library/asyncio-llapi-index.rst:96
msgid "Invoke a callback *at* the given time."
msgstr "在給定時間\\ *當下*\\ 調用回呼函式。"

#: ../../library/asyncio-llapi-index.rst:99
msgid "Thread/Process Pool"
msgstr "執行緒 (Thread)/行程池 (Process Pool)"

#: ../../library/asyncio-llapi-index.rst:104
msgid "``await`` :meth:`loop.run_in_executor`"
msgstr "``await`` :meth:`loop.run_in_executor`"

#: ../../library/asyncio-llapi-index.rst:105
msgid ""
"Run a CPU-bound or other blocking function in a :mod:`concurrent.futures` "
"executor."
msgstr ""
"在 :mod:`concurrent.futures` 執行器 (excutor) 中執行一個 CPU 密集型 (CPU-"
"bound) 或其它阻塞型式的函式。"

#: ../../library/asyncio-llapi-index.rst:108
msgid ":meth:`loop.set_default_executor`"
msgstr ":meth:`loop.set_default_executor`"

#: ../../library/asyncio-llapi-index.rst:109
msgid "Set the default executor for :meth:`loop.run_in_executor`."
msgstr "為 :meth:`loop.run_in_executor` 設定預設執行器。"

#: ../../library/asyncio-llapi-index.rst:112
msgid "Tasks and Futures"
msgstr "Tasks 與 Futures"

#: ../../library/asyncio-llapi-index.rst:117
msgid ":meth:`loop.create_future`"
msgstr ":meth:`loop.create_future`"

#: ../../library/asyncio-llapi-index.rst:118
msgid "Create a :class:`Future` object."
msgstr "建立一個 :class:`Future` 物件。"

#: ../../library/asyncio-llapi-index.rst:120
msgid ":meth:`loop.create_task`"
msgstr ":meth:`loop.create_task`"

#: ../../library/asyncio-llapi-index.rst:121
msgid "Schedule coroutine as a :class:`Task`."
msgstr "像是 :class:`Task` 一樣，為協程 (coroutine) 排程。"

#: ../../library/asyncio-llapi-index.rst:123
msgid ":meth:`loop.set_task_factory`"
msgstr ":meth:`loop.set_task_factory`"

#: ../../library/asyncio-llapi-index.rst:124
msgid ""
"Set a factory used by :meth:`loop.create_task` to create :class:`Tasks "
"<Task>`."
msgstr ""
"設定被 :meth:`loop.create_task` 用來建立 :class:`Tasks <Task>` 的工廠函式 "
"(factory)。"

#: ../../library/asyncio-llapi-index.rst:127
msgid ":meth:`loop.get_task_factory`"
msgstr ":meth:`loop.get_task_factory`"

#: ../../library/asyncio-llapi-index.rst:128
msgid ""
"Get the factory :meth:`loop.create_task` uses to create :class:`Tasks "
"<Task>`."
msgstr ""
"獲取被 :meth:`loop.create_task` 用來建立 :class:`Tasks <Task>` 的工廠函式。"

#: ../../library/asyncio-llapi-index.rst:132
msgid "DNS"
msgstr "DNS"

#: ../../library/asyncio-llapi-index.rst:137
msgid "``await`` :meth:`loop.getaddrinfo`"
msgstr "``await`` :meth:`loop.getaddrinfo`"

#: ../../library/asyncio-llapi-index.rst:138
msgid "Asynchronous version of :meth:`socket.getaddrinfo`."
msgstr "非同步版本的 :meth:`socket.getaddrinfo`\\ 。"

#: ../../library/asyncio-llapi-index.rst:140
msgid "``await`` :meth:`loop.getnameinfo`"
msgstr "``await`` :meth:`loop.getnameinfo`"

#: ../../library/asyncio-llapi-index.rst:141
msgid "Asynchronous version of :meth:`socket.getnameinfo`."
msgstr "非同步版本的 :meth:`socket.getnameinfo`\\ 。"

#: ../../library/asyncio-llapi-index.rst:144
msgid "Networking and IPC"
msgstr "網路和 IPC"

#: ../../library/asyncio-llapi-index.rst:149
msgid "``await`` :meth:`loop.create_connection`"
msgstr "``await`` :meth:`loop.create_connection`"

#: ../../library/asyncio-llapi-index.rst:150
msgid "Open a TCP connection."
msgstr "開啟一個 TCP 連線。"

#: ../../library/asyncio-llapi-index.rst:152
msgid "``await`` :meth:`loop.create_server`"
msgstr "``await`` :meth:`loop.create_server`"

#: ../../library/asyncio-llapi-index.rst:153
msgid "Create a TCP server."
msgstr "建立一個 TCP 伺服器。"

#: ../../library/asyncio-llapi-index.rst:155
msgid "``await`` :meth:`loop.create_unix_connection`"
msgstr "``await`` :meth:`loop.create_unix_connection`"

#: ../../library/asyncio-llapi-index.rst:156
msgid "Open a Unix socket connection."
msgstr "開啟一個 Unix socket 連線。"

#: ../../library/asyncio-llapi-index.rst:158
msgid "``await`` :meth:`loop.create_unix_server`"
msgstr "``await`` :meth:`loop.create_unix_server`"

#: ../../library/asyncio-llapi-index.rst:159
msgid "Create a Unix socket server."
msgstr "建立一個 Unix socket 伺服器。"

#: ../../library/asyncio-llapi-index.rst:161
msgid "``await`` :meth:`loop.connect_accepted_socket`"
msgstr "``await`` :meth:`loop.connect_accepted_socket`"

#: ../../library/asyncio-llapi-index.rst:162
msgid "Wrap a :class:`~socket.socket` into a ``(transport, protocol)`` pair."
msgstr "將 :class:`~socket.socket` 包裝成  ``(transport, protocol)``\\ 。"

#: ../../library/asyncio-llapi-index.rst:165
msgid "``await`` :meth:`loop.create_datagram_endpoint`"
msgstr "``await`` :meth:`loop.create_datagram_endpoint`"

#: ../../library/asyncio-llapi-index.rst:166
msgid "Open a datagram (UDP) connection."
msgstr "開啟一個資料單元 (datagram) (UDP) 連線。"

#: ../../library/asyncio-llapi-index.rst:168
msgid "``await`` :meth:`loop.sendfile`"
msgstr "``await`` :meth:`loop.sendfile`"

#: ../../library/asyncio-llapi-index.rst:169
msgid "Send a file over a transport."
msgstr "透過傳輸通道傳送一個檔案。"

#: ../../library/asyncio-llapi-index.rst:171
msgid "``await`` :meth:`loop.start_tls`"
msgstr "``await`` :meth:`loop.start_tls`"

#: ../../library/asyncio-llapi-index.rst:172
msgid "Upgrade an existing connection to TLS."
msgstr "將一個已存在的連線升級到 TLS。"

#: ../../library/asyncio-llapi-index.rst:174
msgid "``await`` :meth:`loop.connect_read_pipe`"
msgstr "``await`` :meth:`loop.connect_read_pipe`"

#: ../../library/asyncio-llapi-index.rst:175
msgid "Wrap a read end of a pipe into a ``(transport, protocol)`` pair."
msgstr "將 pipe（管道）讀取端包裝成  ``(transport, protocol)``\\ 。"

#: ../../library/asyncio-llapi-index.rst:177
msgid "``await`` :meth:`loop.connect_write_pipe`"
msgstr "``await`` :meth:`loop.connect_write_pipe`"

#: ../../library/asyncio-llapi-index.rst:178
msgid "Wrap a write end of a pipe into a ``(transport, protocol)`` pair."
msgstr "將 pipe 寫入端包裝成  ``(transport, protocol)``\\ 。"

#: ../../library/asyncio-llapi-index.rst:181
msgid "Sockets"
msgstr "Sockets"

#: ../../library/asyncio-llapi-index.rst:186
msgid "``await`` :meth:`loop.sock_recv`"
msgstr "``await`` :meth:`loop.sock_recv`"

#: ../../library/asyncio-llapi-index.rst:187
msgid "Receive data from the :class:`~socket.socket`."
msgstr "從 :class:`~socket.socket` 接收資料。"

#: ../../library/asyncio-llapi-index.rst:189
msgid "``await`` :meth:`loop.sock_recv_into`"
msgstr "``await`` :meth:`loop.sock_recv_into`"

#: ../../library/asyncio-llapi-index.rst:190
msgid "Receive data from the :class:`~socket.socket` into a buffer."
msgstr ""
"將從 :class:`~socket.socket` 接收到的資料存放於一個緩衝區 (buffer) 中。"

#: ../../library/asyncio-llapi-index.rst:192
msgid "``await`` :meth:`loop.sock_recvfrom`"
msgstr "``await`` :meth:`loop.sock_recvfrom`"

#: ../../library/asyncio-llapi-index.rst:193
msgid "Receive a datagram from the :class:`~socket.socket`."
msgstr "從 :class:`~socket.socket` 接收一個資料單元。"

#: ../../library/asyncio-llapi-index.rst:195
msgid "``await`` :meth:`loop.sock_recvfrom_into`"
msgstr "``await`` :meth:`loop.sock_recvfrom_into`"

#: ../../library/asyncio-llapi-index.rst:196
msgid "Receive a datagram from the :class:`~socket.socket` into a buffer."
msgstr "將從 :class:`~socket.socket` 接收到的資料單元存放於一個緩衝區中。"

#: ../../library/asyncio-llapi-index.rst:198
msgid "``await`` :meth:`loop.sock_sendall`"
msgstr "``await`` :meth:`loop.sock_sendall`"

#: ../../library/asyncio-llapi-index.rst:199
msgid "Send data to the :class:`~socket.socket`."
msgstr "傳送資料到 :class:`~socket.socket`\\ 。"

#: ../../library/asyncio-llapi-index.rst:201
msgid "``await`` :meth:`loop.sock_sendto`"
msgstr "``await`` :meth:`loop.sock_sendto`"

#: ../../library/asyncio-llapi-index.rst:202
msgid "Send a datagram via the :class:`~socket.socket` to the given address."
msgstr "透過 :class:`~socket.socket` 將資料單元傳送至給定的地址。"

#: ../../library/asyncio-llapi-index.rst:204
msgid "``await`` :meth:`loop.sock_connect`"
msgstr "``await`` :meth:`loop.sock_connect`"

#: ../../library/asyncio-llapi-index.rst:205
msgid "Connect the :class:`~socket.socket`."
msgstr "連接 :class:`~socket.socket`\\ 。"

#: ../../library/asyncio-llapi-index.rst:207
msgid "``await`` :meth:`loop.sock_accept`"
msgstr "``await`` :meth:`loop.sock_accept`"

#: ../../library/asyncio-llapi-index.rst:208
msgid "Accept a :class:`~socket.socket` connection."
msgstr "接受一個 :class:`~socket.socket` 連線。"

#: ../../library/asyncio-llapi-index.rst:210
msgid "``await`` :meth:`loop.sock_sendfile`"
msgstr "``await`` :meth:`loop.sock_sendfile`"

#: ../../library/asyncio-llapi-index.rst:211
msgid "Send a file over the :class:`~socket.socket`."
msgstr "透過 :class:`~socket.socket` 傳送一個檔案。"

#: ../../library/asyncio-llapi-index.rst:213
msgid ":meth:`loop.add_reader`"
msgstr ":meth:`loop.add_reader`"

#: ../../library/asyncio-llapi-index.rst:214
msgid "Start watching a file descriptor for read availability."
msgstr "開始監控一個檔案描述器 (file descriptor) 的可讀取性。"

#: ../../library/asyncio-llapi-index.rst:216
msgid ":meth:`loop.remove_reader`"
msgstr ":meth:`loop.remove_reader`"

#: ../../library/asyncio-llapi-index.rst:217
msgid "Stop watching a file descriptor for read availability."
msgstr "停止監控一個檔案描述器的可讀取性。"

#: ../../library/asyncio-llapi-index.rst:219
msgid ":meth:`loop.add_writer`"
msgstr ":meth:`loop.add_writer`"

#: ../../library/asyncio-llapi-index.rst:220
msgid "Start watching a file descriptor for write availability."
msgstr "開始監控一個檔案描述器的可寫入性。"

#: ../../library/asyncio-llapi-index.rst:222
msgid ":meth:`loop.remove_writer`"
msgstr ":meth:`loop.remove_writer`"

#: ../../library/asyncio-llapi-index.rst:223
msgid "Stop watching a file descriptor for write availability."
msgstr "停止監控一個檔案描述器的可寫入性。"

#: ../../library/asyncio-llapi-index.rst:226
msgid "Unix Signals"
msgstr "Unix 信號"

#: ../../library/asyncio-llapi-index.rst:231
msgid ":meth:`loop.add_signal_handler`"
msgstr ":meth:`loop.add_signal_handler`"

#: ../../library/asyncio-llapi-index.rst:232
msgid "Add a handler for a :mod:`signal`."
msgstr "為 :mod:`signal` 新增一個處理函式 (handler)。"

#: ../../library/asyncio-llapi-index.rst:234
msgid ":meth:`loop.remove_signal_handler`"
msgstr ":meth:`loop.remove_signal_handler`"

#: ../../library/asyncio-llapi-index.rst:235
msgid "Remove a handler for a :mod:`signal`."
msgstr "刪除 :mod:`signal` 的處理函式。"

#: ../../library/asyncio-llapi-index.rst:238
msgid "Subprocesses"
msgstr "子行程"

#: ../../library/asyncio-llapi-index.rst:243
msgid ":meth:`loop.subprocess_exec`"
msgstr ":meth:`loop.subprocess_exec`"

#: ../../library/asyncio-llapi-index.rst:244
msgid "Spawn a subprocess."
msgstr "衍生 (spawn) 一個子行程 (subprocess)。"

#: ../../library/asyncio-llapi-index.rst:246
msgid ":meth:`loop.subprocess_shell`"
msgstr ":meth:`loop.subprocess_shell`"

#: ../../library/asyncio-llapi-index.rst:247
msgid "Spawn a subprocess from a shell command."
msgstr "從 shell 指令衍生一個子行程。"

#: ../../library/asyncio-llapi-index.rst:250
msgid "Error Handling"
msgstr "錯誤處理"

#: ../../library/asyncio-llapi-index.rst:255
msgid ":meth:`loop.call_exception_handler`"
msgstr ":meth:`loop.call_exception_handler`"

#: ../../library/asyncio-llapi-index.rst:256
msgid "Call the exception handler."
msgstr "呼叫例外處理函式。"

#: ../../library/asyncio-llapi-index.rst:258
msgid ":meth:`loop.set_exception_handler`"
msgstr ":meth:`loop.set_exception_handler`"

#: ../../library/asyncio-llapi-index.rst:259
msgid "Set a new exception handler."
msgstr "設定一個新的例外處理函式。"

#: ../../library/asyncio-llapi-index.rst:261
msgid ":meth:`loop.get_exception_handler`"
msgstr ":meth:`loop.get_exception_handler`"

#: ../../library/asyncio-llapi-index.rst:262
msgid "Get the current exception handler."
msgstr "獲取當前例外處理函式。"

#: ../../library/asyncio-llapi-index.rst:264
msgid ":meth:`loop.default_exception_handler`"
msgstr ":meth:`loop.default_exception_handler`"

#: ../../library/asyncio-llapi-index.rst:265
msgid "The default exception handler implementation."
msgstr "預設例外處理函式實作。"

#: ../../library/asyncio-llapi-index.rst:270
msgid ""
":ref:`Using asyncio.new_event_loop() and loop.run_forever() "
"<asyncio_example_lowlevel_helloworld>`."
msgstr ""
":ref:`使用 asyncio.new_event_loop() 和 loop.run_forever() "
"<asyncio_example_lowlevel_helloworld>`\\ 。"

#: ../../library/asyncio-llapi-index.rst:273
msgid ":ref:`Using loop.call_later() <asyncio_example_call_later>`."
msgstr ":ref:`使用 loop.call_later() <asyncio_example_call_later>`\\ 。"

#: ../../library/asyncio-llapi-index.rst:275
msgid ""
"Using ``loop.create_connection()`` to implement :ref:`an echo-client "
"<asyncio_example_tcp_echo_client_protocol>`."
msgstr ""
"使用 ``loop.create_connection()`` 以實作\\ :ref:`一個 echo 客戶端 "
"<asyncio_example_tcp_echo_client_protocol>`\\ 。"

#: ../../library/asyncio-llapi-index.rst:278
msgid ""
"Using ``loop.create_connection()`` to :ref:`connect a socket "
"<asyncio_example_create_connection>`."
msgstr ""
"使用 ``loop.create_connection()`` 來\\ :ref:`連接 socket "
"<asyncio_example_create_connection>`\\ 。"

#: ../../library/asyncio-llapi-index.rst:281
msgid ""
":ref:`Using add_reader() to watch an FD for read events "
"<asyncio_example_watch_fd>`."
msgstr ""
":ref:`使用 add_reader() 監控 FD 的讀取事件 <asyncio_example_watch_fd>`\\ 。"

#: ../../library/asyncio-llapi-index.rst:284
msgid ":ref:`Using loop.add_signal_handler() <asyncio_example_unix_signals>`."
msgstr ""
":ref:`使用 loop.add_signal_handler() <asyncio_example_unix_signals>`\\ 。"

#: ../../library/asyncio-llapi-index.rst:286
msgid ":ref:`Using loop.subprocess_exec() <asyncio_example_subprocess_proto>`."
msgstr ""
":ref:`使用 loop.add_signal_handler() <asyncio_example_subprocess_proto>`\\ 。"

#: ../../library/asyncio-llapi-index.rst:290
msgid "Transports"
msgstr "傳輸"

#: ../../library/asyncio-llapi-index.rst:292
msgid "All transports implement the following methods:"
msgstr "所有傳輸方式都有實作以下方法："

#: ../../library/asyncio-llapi-index.rst:298
msgid ":meth:`transport.close() <BaseTransport.close>`"
msgstr ":meth:`transport.close() <BaseTransport.close>`"

#: ../../library/asyncio-llapi-index.rst:299
msgid "Close the transport."
msgstr "關閉傳輸。"

#: ../../library/asyncio-llapi-index.rst:301
msgid ":meth:`transport.is_closing() <BaseTransport.is_closing>`"
msgstr ":meth:`transport.is_closing() <BaseTransport.is_closing>`"

#: ../../library/asyncio-llapi-index.rst:302
msgid "Return ``True`` if the transport is closing or is closed."
msgstr "如果傳輸正在關閉或已經關閉則回傳 ``True``\\ 。"

#: ../../library/asyncio-llapi-index.rst:304
msgid ":meth:`transport.get_extra_info() <BaseTransport.get_extra_info>`"
msgstr ":meth:`transport.get_extra_info() <BaseTransport.get_extra_info>`"

#: ../../library/asyncio-llapi-index.rst:305
msgid "Request for information about the transport."
msgstr "請求傳輸的相關資訊。"

#: ../../library/asyncio-llapi-index.rst:307
msgid ":meth:`transport.set_protocol() <BaseTransport.set_protocol>`"
msgstr ":meth:`transport.set_protocol() <BaseTransport.set_protocol>`"

#: ../../library/asyncio-llapi-index.rst:308
msgid "Set a new protocol."
msgstr "設定一個新協定。"

#: ../../library/asyncio-llapi-index.rst:310
msgid ":meth:`transport.get_protocol() <BaseTransport.get_protocol>`"
msgstr ":meth:`transport.get_protocol() <BaseTransport.get_protocol>`"

#: ../../library/asyncio-llapi-index.rst:311
msgid "Return the current protocol."
msgstr "回傳當前協定。"

#: ../../library/asyncio-llapi-index.rst:314
msgid ""
"Transports that can receive data (TCP and Unix connections, pipes, etc).  "
"Returned from methods like :meth:`loop.create_connection`, :meth:`loop."
"create_unix_connection`, :meth:`loop.connect_read_pipe`, etc:"
msgstr ""
"可以接收資料（TCP 和 Unix 連線、pipe 等）的傳輸。它由 :meth:`loop."
"create_connection`\\ 、\\ :meth:`loop.create_unix_connection`\\ 、\\ :meth:"
"`loop.connect_read_pipe` 等方法回傳："

#: ../../library/asyncio-llapi-index.rst:319
msgid "Read Transports"
msgstr "讀取傳輸"

#: ../../library/asyncio-llapi-index.rst:324
msgid ":meth:`transport.is_reading() <ReadTransport.is_reading>`"
msgstr ":meth:`transport.is_reading() <ReadTransport.is_reading>`"

#: ../../library/asyncio-llapi-index.rst:325
msgid "Return ``True`` if the transport is receiving."
msgstr "如果傳輸正在接收則回傳 ``True``\\ 。"

#: ../../library/asyncio-llapi-index.rst:327
msgid ":meth:`transport.pause_reading() <ReadTransport.pause_reading>`"
msgstr ":meth:`transport.pause_reading() <ReadTransport.pause_reading>`"

#: ../../library/asyncio-llapi-index.rst:328
msgid "Pause receiving."
msgstr "暫停接收。"

#: ../../library/asyncio-llapi-index.rst:330
msgid ":meth:`transport.resume_reading() <ReadTransport.resume_reading>`"
msgstr ":meth:`transport.resume_reading() <ReadTransport.resume_reading>`"

#: ../../library/asyncio-llapi-index.rst:331
msgid "Resume receiving."
msgstr "繼續接收。"

#: ../../library/asyncio-llapi-index.rst:334
msgid ""
"Transports that can Send data (TCP and Unix connections, pipes, etc).  "
"Returned from methods like :meth:`loop.create_connection`, :meth:`loop."
"create_unix_connection`, :meth:`loop.connect_write_pipe`, etc:"
msgstr ""
"可以傳送資料（TCP 和 Unix 連線、pipe 等）的傳輸。它由 :meth:`loop."
"create_connection`\\ 、\\ :meth:`loop.create_unix_connection`\\ 、\\ :meth:"
"`loop.connect_write_pipe` 等方法回傳："

#: ../../library/asyncio-llapi-index.rst:339
msgid "Write Transports"
msgstr "寫入傳輸"

#: ../../library/asyncio-llapi-index.rst:344
msgid ":meth:`transport.write() <WriteTransport.write>`"
msgstr ":meth:`transport.write() <WriteTransport.write>`"

#: ../../library/asyncio-llapi-index.rst:345
msgid "Write data to the transport."
msgstr "將資料寫入傳輸。"

#: ../../library/asyncio-llapi-index.rst:347
msgid ":meth:`transport.writelines() <WriteTransport.writelines>`"
msgstr ":meth:`transport.writelines() <WriteTransport.writelines>`"

#: ../../library/asyncio-llapi-index.rst:348
msgid "Write buffers to the transport."
msgstr "將緩衝區資料寫入傳輸。"

#: ../../library/asyncio-llapi-index.rst:350
msgid ":meth:`transport.can_write_eof() <WriteTransport.can_write_eof>`"
msgstr ":meth:`transport.can_write_eof() <WriteTransport.can_write_eof>`"

#: ../../library/asyncio-llapi-index.rst:351
msgid "Return :const:`True` if the transport supports sending EOF."
msgstr "如果傳輸支援傳送 EOF 則回傳  :const:`True`\\ 。"

#: ../../library/asyncio-llapi-index.rst:353
msgid ":meth:`transport.write_eof() <WriteTransport.write_eof>`"
msgstr ":meth:`transport.write_eof() <WriteTransport.write_eof>`"

#: ../../library/asyncio-llapi-index.rst:354
msgid "Close and send EOF after flushing buffered data."
msgstr "在清除 (flush) 已緩衝的資料後關閉傳輸並傳送 EOF。"

#: ../../library/asyncio-llapi-index.rst:356
msgid ":meth:`transport.abort() <WriteTransport.abort>`"
msgstr ":meth:`transport.abort() <WriteTransport.abort>`"

#: ../../library/asyncio-llapi-index.rst:357
#: ../../library/asyncio-llapi-index.rst:383
msgid "Close the transport immediately."
msgstr "立即關閉傳輸。"

#: ../../library/asyncio-llapi-index.rst:359
msgid ""
":meth:`transport.get_write_buffer_size() <WriteTransport."
"get_write_buffer_size>`"
msgstr ""
":meth:`transport.get_write_buffer_size() <WriteTransport."
"get_write_buffer_size>`"

#: ../../library/asyncio-llapi-index.rst:361
msgid "Return the current size of the output buffer."
msgstr "回傳當前輸出緩衝區的大小。"

#: ../../library/asyncio-llapi-index.rst:363
msgid ""
":meth:`transport.get_write_buffer_limits() <WriteTransport."
"get_write_buffer_limits>`"
msgstr ""
":meth:`transport.get_write_buffer_limits() <WriteTransport."
"get_write_buffer_limits>`"

#: ../../library/asyncio-llapi-index.rst:365
msgid "Return high and low water marks for write flow control."
msgstr ""
"回傳用於寫入流量控制 (write flow control) 的高低標記位 (high and low water "
"marks)。"

#: ../../library/asyncio-llapi-index.rst:367
msgid ""
":meth:`transport.set_write_buffer_limits() <WriteTransport."
"set_write_buffer_limits>`"
msgstr ""
":meth:`transport.set_write_buffer_limits() <WriteTransport."
"set_write_buffer_limits>`"

#: ../../library/asyncio-llapi-index.rst:369
msgid "Set new high and low water marks for write flow control."
msgstr "為寫入流量控制設定高低標記位。"

#: ../../library/asyncio-llapi-index.rst:372
msgid "Transports returned by :meth:`loop.create_datagram_endpoint`:"
msgstr "由 :meth:`loop.create_datagram_endpoint` 回傳的傳輸："

#: ../../library/asyncio-llapi-index.rst:374
msgid "Datagram Transports"
msgstr "資料單元傳輸"

#: ../../library/asyncio-llapi-index.rst:379
msgid ":meth:`transport.sendto() <DatagramTransport.sendto>`"
msgstr ":meth:`transport.sendto() <DatagramTransport.sendto>`"

#: ../../library/asyncio-llapi-index.rst:380
msgid "Send data to the remote peer."
msgstr "傳送資料到連線遠端。"

#: ../../library/asyncio-llapi-index.rst:382
msgid ":meth:`transport.abort() <DatagramTransport.abort>`"
msgstr ":meth:`transport.abort() <DatagramTransport.abort>`"

#: ../../library/asyncio-llapi-index.rst:386
msgid ""
"Low-level transport abstraction over subprocesses. Returned by :meth:`loop."
"subprocess_exec` and :meth:`loop.subprocess_shell`:"
msgstr ""
"基於子行程的低階傳輸抽象，它會由 :meth:`loop.subprocess_exec` 和 :meth:`loop."
"subprocess_shell` 所回傳："

#: ../../library/asyncio-llapi-index.rst:390
msgid "Subprocess Transports"
msgstr "子行程傳輸"

#: ../../library/asyncio-llapi-index.rst:395
msgid ":meth:`transport.get_pid() <SubprocessTransport.get_pid>`"
msgstr ":meth:`transport.get_pid() <SubprocessTransport.get_pid>`"

#: ../../library/asyncio-llapi-index.rst:396
msgid "Return the subprocess process id."
msgstr "回傳子行程的行程 id。"

#: ../../library/asyncio-llapi-index.rst:398
msgid ""
":meth:`transport.get_pipe_transport() <SubprocessTransport."
"get_pipe_transport>`"
msgstr ""
":meth:`transport.get_pipe_transport() <SubprocessTransport."
"get_pipe_transport>`"

#: ../../library/asyncio-llapi-index.rst:400
msgid ""
"Return the transport for the requested communication pipe (*stdin*, "
"*stdout*, or *stderr*)."
msgstr ""
"回傳被請求用於通訊 pipe （*stdin*\\ 、\\ *stdout* 或 *stderr*）的傳輸。"

#: ../../library/asyncio-llapi-index.rst:403
msgid ":meth:`transport.get_returncode() <SubprocessTransport.get_returncode>`"
msgstr ""
":meth:`transport.get_returncode() <SubprocessTransport.get_returncode>`"

#: ../../library/asyncio-llapi-index.rst:404
msgid "Return the subprocess return code."
msgstr "回傳子行程的回傳代號 (return code)。"

#: ../../library/asyncio-llapi-index.rst:406
msgid ":meth:`transport.kill() <SubprocessTransport.kill>`"
msgstr ":meth:`transport.kill() <SubprocessTransport.kill>`"

#: ../../library/asyncio-llapi-index.rst:407
msgid "Kill the subprocess."
msgstr "殺死子行程。"

#: ../../library/asyncio-llapi-index.rst:409
msgid ":meth:`transport.send_signal() <SubprocessTransport.send_signal>`"
msgstr ":meth:`transport.send_signal() <SubprocessTransport.send_signal>`"

#: ../../library/asyncio-llapi-index.rst:410
msgid "Send a signal to the subprocess."
msgstr "傳送一個訊號到子行程。"

#: ../../library/asyncio-llapi-index.rst:412
msgid ":meth:`transport.terminate() <SubprocessTransport.terminate>`"
msgstr ":meth:`transport.terminate() <SubprocessTransport.terminate>`"

#: ../../library/asyncio-llapi-index.rst:413
msgid "Stop the subprocess."
msgstr "停止子行程。"

#: ../../library/asyncio-llapi-index.rst:415
msgid ":meth:`transport.close() <SubprocessTransport.close>`"
msgstr ":meth:`transport.close() <SubprocessTransport.close>`"

#: ../../library/asyncio-llapi-index.rst:416
msgid "Kill the subprocess and close all pipes."
msgstr "殺死子行程並關閉所有 pipes。"

#: ../../library/asyncio-llapi-index.rst:420
msgid "Protocols"
msgstr "協定"

#: ../../library/asyncio-llapi-index.rst:422
msgid "Protocol classes can implement the following **callback methods**:"
msgstr "協定類別可以實作以下\\ **回呼方法**\\ ："

#: ../../library/asyncio-llapi-index.rst:428
msgid "``callback`` :meth:`connection_made() <BaseProtocol.connection_made>`"
msgstr "``callback`` :meth:`connection_made() <BaseProtocol.connection_made>`"

#: ../../library/asyncio-llapi-index.rst:429
msgid "Called when a connection is made."
msgstr "在連線建立時被呼叫。"

#: ../../library/asyncio-llapi-index.rst:431
msgid "``callback`` :meth:`connection_lost() <BaseProtocol.connection_lost>`"
msgstr "``callback`` :meth:`connection_lost() <BaseProtocol.connection_lost>`"

#: ../../library/asyncio-llapi-index.rst:432
msgid "Called when the connection is lost or closed."
msgstr "在失去連線或連線關閉時被呼叫。"

#: ../../library/asyncio-llapi-index.rst:434
msgid "``callback`` :meth:`pause_writing() <BaseProtocol.pause_writing>`"
msgstr "``callback`` :meth:`pause_writing() <BaseProtocol.pause_writing>`"

#: ../../library/asyncio-llapi-index.rst:435
msgid "Called when the transport's buffer goes over the high water mark."
msgstr "在傳輸緩衝區超過高標記位時被呼叫。"

#: ../../library/asyncio-llapi-index.rst:437
msgid "``callback`` :meth:`resume_writing() <BaseProtocol.resume_writing>`"
msgstr "``callback`` :meth:`resume_writing() <BaseProtocol.resume_writing>`"

#: ../../library/asyncio-llapi-index.rst:438
msgid "Called when the transport's buffer drains below the low water mark."
msgstr "在傳輸緩衝區低於低標記位時被呼叫。"

#: ../../library/asyncio-llapi-index.rst:441
msgid "Streaming Protocols (TCP, Unix Sockets, Pipes)"
msgstr "串流協定 (TCP, Unix socket, Pipes)"

#: ../../library/asyncio-llapi-index.rst:446
msgid "``callback`` :meth:`data_received() <Protocol.data_received>`"
msgstr "``callback`` :meth:`data_received() <Protocol.data_received>`"

#: ../../library/asyncio-llapi-index.rst:447
msgid "Called when some data is received."
msgstr "在接收到資料時被呼叫。"

#: ../../library/asyncio-llapi-index.rst:449
msgid "``callback`` :meth:`eof_received() <Protocol.eof_received>`"
msgstr "``callback`` :meth:`eof_received() <Protocol.eof_received>`"

#: ../../library/asyncio-llapi-index.rst:450
#: ../../library/asyncio-llapi-index.rst:465
msgid "Called when an EOF is received."
msgstr "在接收到 EOF 時被呼叫。"

#: ../../library/asyncio-llapi-index.rst:453
msgid "Buffered Streaming Protocols"
msgstr "緩衝串流協定"

#: ../../library/asyncio-llapi-index.rst:458
msgid "``callback`` :meth:`get_buffer() <BufferedProtocol.get_buffer>`"
msgstr "``callback`` :meth:`get_buffer() <BufferedProtocol.get_buffer>`"

#: ../../library/asyncio-llapi-index.rst:459
msgid "Called to allocate a new receive buffer."
msgstr "呼叫後會分配新的接收緩衝區。"

#: ../../library/asyncio-llapi-index.rst:461
msgid "``callback`` :meth:`buffer_updated() <BufferedProtocol.buffer_updated>`"
msgstr ""
"``callback`` :meth:`buffer_updated() <BufferedProtocol.buffer_updated>`"

#: ../../library/asyncio-llapi-index.rst:462
msgid "Called when the buffer was updated with the received data."
msgstr "在以接收到的資料更新緩衝區時被呼叫。"

#: ../../library/asyncio-llapi-index.rst:464
msgid "``callback`` :meth:`eof_received() <BufferedProtocol.eof_received>`"
msgstr "``callback`` :meth:`eof_received() <BufferedProtocol.eof_received>`"

#: ../../library/asyncio-llapi-index.rst:468
msgid "Datagram Protocols"
msgstr "資料單元協定"

#: ../../library/asyncio-llapi-index.rst:473
msgid ""
"``callback`` :meth:`datagram_received() <DatagramProtocol.datagram_received>`"
msgstr ""
"``callback`` :meth:`datagram_received() <DatagramProtocol.datagram_received>`"

#: ../../library/asyncio-llapi-index.rst:475
msgid "Called when a datagram is received."
msgstr "在接收到資料單元時被呼叫。"

#: ../../library/asyncio-llapi-index.rst:477
msgid "``callback`` :meth:`error_received() <DatagramProtocol.error_received>`"
msgstr ""
"``callback`` :meth:`error_received() <DatagramProtocol.error_received>`"

#: ../../library/asyncio-llapi-index.rst:478
msgid ""
"Called when a previous send or receive operation raises an :class:`OSError`."
msgstr "在前一個傳送或接收操作引發 :class:`OSError` 時被呼叫。"

#: ../../library/asyncio-llapi-index.rst:482
msgid "Subprocess Protocols"
msgstr "子行程協定"

#: ../../library/asyncio-llapi-index.rst:487
msgid ""
"``callback`` :meth:`pipe_data_received() <SubprocessProtocol."
"pipe_data_received>`"
msgstr ""
"``callback`` :meth:`pipe_data_received() <SubprocessProtocol."
"pipe_data_received>`"

#: ../../library/asyncio-llapi-index.rst:489
msgid ""
"Called when the child process writes data into its *stdout* or *stderr* pipe."
msgstr "在子行程向 *stdout* 或 *stderr* pipe 寫入資料時被呼叫。"

#: ../../library/asyncio-llapi-index.rst:492
msgid ""
"``callback`` :meth:`pipe_connection_lost() <SubprocessProtocol."
"pipe_connection_lost>`"
msgstr ""
"``callback`` :meth:`pipe_connection_lost() <SubprocessProtocol."
"pipe_connection_lost>`"

#: ../../library/asyncio-llapi-index.rst:494
msgid ""
"Called when one of the pipes communicating with the child process is closed."
msgstr "在與子行程通訊的其中一個 pipes 關閉時被呼叫。"

#: ../../library/asyncio-llapi-index.rst:497
msgid ""
"``callback`` :meth:`process_exited() <SubprocessProtocol.process_exited>`"
msgstr ""
"``callback`` :meth:`process_exited() <SubprocessProtocol.process_exited>`"

#: ../../library/asyncio-llapi-index.rst:499
msgid "Called when the child process has exited."
msgstr "在子行程退出後被呼叫。"

#: ../../library/asyncio-llapi-index.rst:503
msgid "Event Loop Policies"
msgstr "事件迴圈 Policies"

#: ../../library/asyncio-llapi-index.rst:505
msgid ""
"Policies is a low-level mechanism to alter the behavior of functions like :"
"func:`asyncio.get_event_loop`.  See also the main :ref:`policies section "
"<asyncio-policies>` for more details."
msgstr ""
"Policy 是改變 :func:`asyncio.get_event_loop` 這類函式行為的一個低階機制。更多"
"細節請見 :ref:`Policy 相關段落 <asyncio-policies>`\\ 。"

#: ../../library/asyncio-llapi-index.rst:511
msgid "Accessing Policies"
msgstr "存取 Policy"

#: ../../library/asyncio-llapi-index.rst:516
msgid ":meth:`asyncio.get_event_loop_policy`"
msgstr ":meth:`asyncio.get_event_loop_policy`"

#: ../../library/asyncio-llapi-index.rst:517
msgid "Return the current process-wide policy."
msgstr "回傳當前整個行程中的 Policy。"

#: ../../library/asyncio-llapi-index.rst:519
msgid ":meth:`asyncio.set_event_loop_policy`"
msgstr ":meth:`asyncio.set_event_loop_policy`"

#: ../../library/asyncio-llapi-index.rst:520
msgid "Set a new process-wide policy."
msgstr "設定整個行程中的一個新 Policy。"

#: ../../library/asyncio-llapi-index.rst:522
msgid ":class:`AbstractEventLoopPolicy`"
msgstr ":class:`AbstractEventLoopPolicy`"

#: ../../library/asyncio-llapi-index.rst:523
msgid "Base class for policy objects."
msgstr "Policy 物件的基礎類別。"
