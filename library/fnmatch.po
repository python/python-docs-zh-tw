# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2022, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-11-29 00:17+0000\n"
"PO-Revision-Date: 2018-05-23 16:02+0000\n"
"Last-Translator: Adrian Liaw <adrianliaw2000@gmail.com>\n"
"Language-Team: Chinese - TAIWAN (https://github.com/python/python-docs-zh-"
"tw)\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/fnmatch.rst:2
msgid ":mod:`fnmatch` --- Unix filename pattern matching"
msgstr ""

#: ../../library/fnmatch.rst:7
msgid "**Source code:** :source:`Lib/fnmatch.py`"
msgstr "**原始碼：**\\ :source:`Lib/fnmatch.py`"

#: ../../library/fnmatch.rst:15
msgid ""
"This module provides support for Unix shell-style wildcards, which are *not* "
"the same as regular expressions (which are documented in the :mod:`re` "
"module).  The special characters used in shell-style wildcards are:"
msgstr ""

#: ../../library/fnmatch.rst:27
msgid "Pattern"
msgstr ""

#: ../../library/fnmatch.rst:27
msgid "Meaning"
msgstr ""

#: ../../library/fnmatch.rst:29
msgid "``*``"
msgstr "``*``"

#: ../../library/fnmatch.rst:29
msgid "matches everything"
msgstr ""

#: ../../library/fnmatch.rst:31
msgid "``?``"
msgstr "``?``"

#: ../../library/fnmatch.rst:31
msgid "matches any single character"
msgstr ""

#: ../../library/fnmatch.rst:33
msgid "``[seq]``"
msgstr "``[seq]``"

#: ../../library/fnmatch.rst:33
msgid "matches any character in *seq*"
msgstr ""

#: ../../library/fnmatch.rst:35
msgid "``[!seq]``"
msgstr "``[!seq]``"

#: ../../library/fnmatch.rst:35
msgid "matches any character not in *seq*"
msgstr ""

#: ../../library/fnmatch.rst:38
msgid ""
"For a literal match, wrap the meta-characters in brackets. For example, "
"``'[?]'`` matches the character ``'?'``."
msgstr ""

#: ../../library/fnmatch.rst:43
msgid ""
"Note that the filename separator (``'/'`` on Unix) is *not* special to this "
"module.  See module :mod:`glob` for pathname expansion (:mod:`glob` uses :"
"func:`.filter` to match pathname segments).  Similarly, filenames starting "
"with a period are not special for this module, and are matched by the ``*`` "
"and ``?`` patterns."
msgstr ""

#: ../../library/fnmatch.rst:49
msgid ""
"Also note that :func:`functools.lru_cache` with the *maxsize* of 32768 is "
"used to cache the compiled regex patterns in the following functions: :func:"
"`fnmatch`, :func:`fnmatchcase`, :func:`.filter`."
msgstr ""

#: ../../library/fnmatch.rst:55
msgid ""
"Test whether the *filename* string matches the *pattern* string, returning :"
"const:`True` or :const:`False`.  Both parameters are case-normalized using :"
"func:`os.path.normcase`. :func:`fnmatchcase` can be used to perform a case-"
"sensitive comparison, regardless of whether that's standard for the "
"operating system."
msgstr ""

#: ../../library/fnmatch.rst:61
msgid ""
"This example will print all file names in the current directory with the "
"extension ``.txt``::"
msgstr ""

#: ../../library/fnmatch.rst:74
msgid ""
"Test whether *filename* matches *pattern*, returning :const:`True` or :const:"
"`False`; the comparison is case-sensitive and does not apply :func:`os.path."
"normcase`."
msgstr ""

#: ../../library/fnmatch.rst:81
msgid ""
"Construct a list from those elements of the iterable *names* that match "
"*pattern*. It is the same as ``[n for n in names if fnmatch(n, pattern)]``, "
"but implemented more efficiently."
msgstr ""

#: ../../library/fnmatch.rst:87
msgid ""
"Return the shell-style *pattern* converted to a regular expression for using "
"with :func:`re.match`."
msgstr ""

#: ../../library/fnmatch.rst:90
msgid "Example:"
msgstr "範例："

#: ../../library/fnmatch.rst:104
msgid "Module :mod:`glob`"
msgstr ":mod:`glob` 模組"

#: ../../library/fnmatch.rst:105
msgid "Unix shell-style path expansion."
msgstr ""
