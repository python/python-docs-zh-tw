# Copyright (C) 2001-2024, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
# Matt Wang <mattwang44@gmail.com>, 2023-2024
msgid ""
msgstr ""
"Project-Id-Version: Python 3.12\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-09-03 11:11+0800\n"
"PO-Revision-Date: 2024-02-06 02:12+0000\n"
"Last-Translator: Matt Wang <mattwang44@gmail.com>\n"
"Language-Team: Chinese - TAIWAN (https://github.com/python/python-docs-zh-"
"tw)\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/__future__.rst:2
msgid ":mod:`!__future__` --- Future statement definitions"
msgstr ":mod:`!__future__` --- Future 陳述式定義"

#: ../../library/__future__.rst:7
msgid "**Source code:** :source:`Lib/__future__.py`"
msgstr "**原始碼：**\\ :source:`Lib/__future__.py`"

#: ../../library/__future__.rst:11
msgid ""
"Imports of the form ``from __future__ import feature`` are called :ref:"
"`future statements <future>`. These are special-cased by the Python compiler "
"to allow the use of new Python features in modules containing the future "
"statement before the release in which the feature becomes standard."
msgstr ""
"``from __future__ import feature`` 形式的引入被稱為 :ref:`future 陳述式 "
"<future>`。這些是 Python 編譯器的特殊情況，允許在該功能成為標準版本之前在包"
"含 future 陳述式的模組中使用新的 Python 功能。"

#: ../../library/__future__.rst:16
msgid ""
"While these future statements are given additional special meaning by the "
"Python compiler, they are still executed like any other import statement and "
"the :mod:`__future__` exists and is handled by the import system the same "
"way any other Python module would be. This design serves three purposes:"
msgstr ""
"雖然這些 future 陳述式被 Python 編譯器賦予了額外的特殊意義，但它們仍然像任何"
"其他 import 陳述式一樣執行，且 :mod:`__future__` 由引入系統以和任何其他 "
"Python 模組相同的方式處理。這個設計有三個目的："

#: ../../library/__future__.rst:21
msgid ""
"To avoid confusing existing tools that analyze import statements and expect "
"to find the modules they're importing."
msgstr "為了避免混淆分析引入陳述式並預期要找到它們正在引入之模組的現有工具。"

#: ../../library/__future__.rst:24
msgid ""
"To document when incompatible changes were introduced, and when they will be "
"--- or were --- made mandatory.  This is a form of executable documentation, "
"and can be inspected programmatically via importing :mod:`__future__` and "
"examining its contents."
msgstr ""
"記錄何時出現不相容的變更，以及何時開始強制執行這些變更。這是一種可執行文件的"
"形式，可以透過引入 :mod:`__future__` 並檢查其內容以程式化的方式進行檢查。"

#: ../../library/__future__.rst:29
msgid ""
"To ensure that :ref:`future statements <future>` run under releases prior to "
"Python 2.1 at least yield runtime exceptions (the import of :mod:"
"`__future__` will fail, because there was no module of that name prior to "
"2.1)."
msgstr ""
"確保 :ref:`future 陳述式 <future>`\\ 在 Python 2.1 之前的版本中運行至少會產"
"生 runtime 例外（\\ :mod:`__future__` 的引入將會失敗，因為 2.1 之前沒有該名稱"
"的模組）。"

#: ../../library/__future__.rst:34
msgid "Module Contents"
msgstr "模組內容"

#: ../../library/__future__.rst:36
msgid ""
"No feature description will ever be deleted from :mod:`__future__`. Since "
"its introduction in Python 2.1 the following features have found their way "
"into the language using this mechanism:"
msgstr ""
"不會從 :mod:`__future__` 中刪除任何功能描述。自從在 Python 2.1 中引入以來，以"
"下功能已透過這種機制引入到該語言中："

#: ../../library/__future__.rst:41
msgid "feature"
msgstr "功能"

#: ../../library/__future__.rst:41
msgid "optional in"
msgstr "可選的版本"

#: ../../library/__future__.rst:41
msgid "mandatory in"
msgstr "強制性的版本"

#: ../../library/__future__.rst:41
msgid "effect"
msgstr "影響"

#: ../../library/__future__.rst:43
msgid "nested_scopes"
msgstr "nested_scopes"

#: ../../library/__future__.rst:43
msgid "2.1.0b1"
msgstr "2.1.0b1"

#: ../../library/__future__.rst:43
msgid "2.2"
msgstr "2.2"

#: ../../library/__future__.rst:43
msgid ":pep:`227`: *Statically Nested Scopes*"
msgstr ":pep:`227`: *靜態巢狀作用域 (Statically Nested Scopes)*"

#: ../../library/__future__.rst:46
msgid "generators"
msgstr "generators"

#: ../../library/__future__.rst:46
msgid "2.2.0a1"
msgstr "2.2.0a1"

#: ../../library/__future__.rst:46
msgid "2.3"
msgstr "2.3"

#: ../../library/__future__.rst:46
msgid ":pep:`255`: *Simple Generators*"
msgstr ":pep:`255`: *簡單產生器 (Simple Generators)*"

#: ../../library/__future__.rst:49
msgid "division"
msgstr "division"

#: ../../library/__future__.rst:49
msgid "2.2.0a2"
msgstr "2.2.0a2"

#: ../../library/__future__.rst:49 ../../library/__future__.rst:52
#: ../../library/__future__.rst:58 ../../library/__future__.rst:61
msgid "3.0"
msgstr "3.0"

#: ../../library/__future__.rst:49
msgid ":pep:`238`: *Changing the Division Operator*"
msgstr ":pep:`238`: *更改除法運算子 (Changing the Division Operator)*"

#: ../../library/__future__.rst:52
msgid "absolute_import"
msgstr "absolute_import"

#: ../../library/__future__.rst:52 ../../library/__future__.rst:55
msgid "2.5.0a1"
msgstr "2.5.0a1"

#: ../../library/__future__.rst:52
msgid ":pep:`328`: *Imports: Multi-Line and Absolute/Relative*"
msgstr ""
":pep:`328`: *引入：多列與絕對/相對 (Imports: Multi-Line and Absolute/"
"Relative)*"

#: ../../library/__future__.rst:55
msgid "with_statement"
msgstr "with_statement"

#: ../../library/__future__.rst:55
msgid "2.6"
msgstr "2.6"

#: ../../library/__future__.rst:55
msgid ":pep:`343`: *The \"with\" Statement*"
msgstr ":pep:`343`: *\"with\" 陳述式 (The \"with\" Statement)*"

#: ../../library/__future__.rst:58
msgid "print_function"
msgstr "print_function"

#: ../../library/__future__.rst:58 ../../library/__future__.rst:61
msgid "2.6.0a2"
msgstr "2.6.0a2"

#: ../../library/__future__.rst:58
msgid ":pep:`3105`: *Make print a function*"
msgstr ":pep:`3105`: *使 print 成為一個函式 (Make print a function)*"

#: ../../library/__future__.rst:61
msgid "unicode_literals"
msgstr "unicode_literals"

#: ../../library/__future__.rst:61
msgid ":pep:`3112`: *Bytes literals in Python 3000*"
msgstr ""
":pep:`3112`: *Python 3000 中的位元組字面值 (Bytes literals in Python 3000)*"

#: ../../library/__future__.rst:64
msgid "generator_stop"
msgstr "generator_stop"

#: ../../library/__future__.rst:64
msgid "3.5.0b1"
msgstr "3.5.0b1"

#: ../../library/__future__.rst:64
msgid "3.7"
msgstr "3.7"

#: ../../library/__future__.rst:64
msgid ":pep:`479`: *StopIteration handling inside generators*"
msgstr ""
":pep:`479`: *產生器內部的 StopIteration 處理 (StopIteration handling inside "
"generators)*"

#: ../../library/__future__.rst:67
msgid "annotations"
msgstr "annotations"

#: ../../library/__future__.rst:67
msgid "3.7.0b1"
msgstr "3.7.0b1"

#: ../../library/__future__.rst:67
msgid "TBD [1]_"
msgstr "TBD [1]_"

#: ../../library/__future__.rst:67
msgid ":pep:`563`: *Postponed evaluation of annotations*"
msgstr ":pep:`563`: *推遲對註釋的求值 (Postponed evaluation of annotations)*"

#: ../../library/__future__.rst:77
msgid "Each statement in :file:`__future__.py` is of the form::"
msgstr ":file:`__future__.py` 中的每個陳述式的形式如下： ::"

#: ../../library/__future__.rst:79
msgid ""
"FeatureName = _Feature(OptionalRelease, MandatoryRelease,\n"
"                       CompilerFlag)"
msgstr ""
"FeatureName = _Feature(OptionalRelease, MandatoryRelease,\n"
"                       CompilerFlag)"

#: ../../library/__future__.rst:82
msgid ""
"where, normally, *OptionalRelease* is less than *MandatoryRelease*, and both "
"are 5-tuples of the same form as :data:`sys.version_info`::"
msgstr ""
"通常，*OptionalRelease* 會小於 *MandatoryRelease*，且兩者都是與 :data:`sys."
"version_info` 形式相同的 5 元組 (5-tuple)： ::"

#: ../../library/__future__.rst:85
msgid ""
"(PY_MAJOR_VERSION, # the 2 in 2.1.0a3; an int\n"
" PY_MINOR_VERSION, # the 1; an int\n"
" PY_MICRO_VERSION, # the 0; an int\n"
" PY_RELEASE_LEVEL, # \"alpha\", \"beta\", \"candidate\" or \"final\"; "
"string\n"
" PY_RELEASE_SERIAL # the 3; an int\n"
")"
msgstr ""

#: ../../library/__future__.rst:94
msgid ""
"*OptionalRelease* records the first release in which the feature was "
"accepted."
msgstr "*OptionalRelease* 記錄該功能首次發布時的 Python 版本。"

#: ../../library/__future__.rst:98
msgid ""
"In the case of a *MandatoryRelease* that has not yet occurred, "
"*MandatoryRelease* predicts the release in which the feature will become "
"part of the language."
msgstr ""
"如果 *MandatoryRelease* 尚未發布，*MandatoryRelease* 會預測該功能將成為該語言"
"一部分的版本。"

#: ../../library/__future__.rst:102
msgid ""
"Else *MandatoryRelease* records when the feature became part of the "
"language; in releases at or after that, modules no longer need a future "
"statement to use the feature in question, but may continue to use such "
"imports."
msgstr ""
"否則 *MandatoryRelease* 會記錄該功能是何時成為語言的一部分；在該版本或之後的"
"版本中，模組不再需要 future 聲明來使用相關功能，但可以繼續使用此種引入方式。"

#: ../../library/__future__.rst:106
msgid ""
"*MandatoryRelease* may also be ``None``, meaning that a planned feature got "
"dropped or that it is not yet decided."
msgstr ""
"*MandatoryRelease* 也可能是 ``None``，這意味著計劃中的功能被丟棄或者仍未決"
"定。"

#: ../../library/__future__.rst:111
msgid ""
"*CompilerFlag* is the (bitfield) flag that should be passed in the fourth "
"argument to the built-in function :func:`compile` to enable the feature in "
"dynamically compiled code.  This flag is stored in the :attr:`_Feature."
"compiler_flag` attribute on :class:`_Feature` instances."
msgstr ""
"*CompilerFlag* 是（位元欄位 (bitfield)）旗標，應在第四個引數中傳遞給內建函"
"式 :func:`compile` 以在動態編譯的程式碼中啟用該功能。此旗標存儲在 :class:"
"`_Feature` 實例上的 :attr:`_Feature.compiler_flag` 屬性中。"

#: ../../library/__future__.rst:117
msgid ""
"``from __future__ import annotations`` was previously scheduled to become "
"mandatory in Python 3.10, but the Python Steering Council twice decided to "
"delay the change (`announcement for Python 3.10 <https://mail.python.org/"
"archives/list/python-dev@python.org/message/CLVXXPQ2T2LQ5MP2Y53VVQFCXYWQJHKZ/"
">`__; `announcement for Python 3.11 <https://mail.python.org/archives/list/"
"python-dev@python.org/message/VIZEBX5EYMSYIJNDBF6DMUMZOCWHARSO/>`__). No "
"final decision has been made yet. See also :pep:`563` and :pep:`649`."
msgstr ""
"之前原本計劃在 Python 3.10 中強制使用 ``from __future__ import "
"annotations``，但 Python 指導委員會 (Python Steering Council) 兩次決議推遲這"
"一變動（`Python 3.10 的公告 <https://mail.python.org/archives/list/python-"
"dev@python.org/message/CLVXXPQ2T2LQ5MP2Y53VVQFCXYWQJHKZ/>`__；`Python 3.11 的"
"公告 <https://mail.python.org/archives/list/python-dev@python.org/message/"
"VIZEBX5EYMSYIJNDBF6DMUMZOCWHARSO/>`__）。目前還尚未做出決定。另請參閱 :pep:"
"`563` 和 :pep:`649`。"

#: ../../library/__future__.rst:127
msgid ":ref:`future`"
msgstr ":ref:`future`"

#: ../../library/__future__.rst:128
msgid "How the compiler treats future imports."
msgstr "編譯器如何處理 future 引入。"

#: ../../library/__future__.rst:130
msgid ":pep:`236` - Back to the __future__"
msgstr ":pep:`236` - 回到 __future__"

#: ../../library/__future__.rst:131
msgid "The original proposal for the __future__ mechanism."
msgstr "__future__ 機制的原始提案。"
