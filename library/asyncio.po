# Copyright (C) 2001-2022, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
# Adrian Liaw <adrianliaw2000@gmail.com>, 2018
# Matt Wang <mattwang44@gmail.com>, 2021
# Leo Wang <ascodeasice@gmail.com>, 2023
msgid ""
msgstr ""
"Project-Id-Version: Python 3.12\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-09-03 11:11+0800\n"
"PO-Revision-Date: 2021-11-23 12:40+0800\n"
"Last-Translator: Matt Wang <mattwang44@gmail.com>\n"
"Language-Team: Chinese - TAIWAN (https://github.com/python/python-docs-zh-"
"tw)\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Poedit 3.0\n"

#: ../../library/asyncio.rst:87
msgid "High-level APIs"
msgstr "高階 API"

#: ../../library/asyncio.rst:99
msgid "Low-level APIs"
msgstr "低階 API"

#: ../../library/asyncio.rst:110
msgid "Guides and Tutorials"
msgstr "指南與教學"

#: ../../library/asyncio.rst:2
msgid ":mod:`!asyncio` --- Asynchronous I/O"
msgstr ":mod:`!asyncio` --- 非同步 I/O"

#: ../../library/asyncio.rst:-1
msgid "Hello World!"
msgstr "Hello World!"

#: ../../library/asyncio.rst:13
msgid ""
"import asyncio\n"
"\n"
"async def main():\n"
"    print('Hello ...')\n"
"    await asyncio.sleep(1)\n"
"    print('... World!')\n"
"\n"
"asyncio.run(main())"
msgstr ""
"import asyncio\n"
"\n"
"async def main():\n"
"    print('Hello ...')\n"
"    await asyncio.sleep(1)\n"
"    print('... World!')\n"
"\n"
"asyncio.run(main())"

#: ../../library/asyncio.rst:22
msgid ""
"asyncio is a library to write **concurrent** code using the **async/await** "
"syntax."
msgstr ""
"asyncio 是讓使用者以 **async/await** 語法來編寫\\ *並行 (concurrent)* 程式碼"
"的函式庫 (library)。"

#: ../../library/asyncio.rst:25
msgid ""
"asyncio is used as a foundation for multiple Python asynchronous frameworks "
"that provide high-performance network and web-servers, database connection "
"libraries, distributed task queues, etc."
msgstr ""
"asyncio 作為多個 Python 非同步框架的基礎，在高效能網路與網頁伺服器、資料庫連"
"線函式庫、分散式任務佇列等服務都可以看得到它。"

#: ../../library/asyncio.rst:29
msgid ""
"asyncio is often a perfect fit for IO-bound and high-level **structured** "
"network code."
msgstr ""
"asyncio 往往是個建構 IO 密集型與高階層\\ **結構化**\\ 網路程式碼的完美選擇。"

#: ../../library/asyncio.rst:32
msgid "asyncio provides a set of **high-level** APIs to:"
msgstr "asyncio 提供了一系列\\ **高階** API："

#: ../../library/asyncio.rst:34
msgid ""
":ref:`run Python coroutines <coroutine>` concurrently and have full control "
"over their execution;"
msgstr ""
"並行地\\ :ref:`運行 Python 協程 (coroutine) <coroutine>` 並擁有完整控制權；"

#: ../../library/asyncio.rst:37
msgid "perform :ref:`network IO and IPC <asyncio-streams>`;"
msgstr "執行\\ :ref:`網路 IO 與 IPC <asyncio-streams>`；"

#: ../../library/asyncio.rst:39
msgid "control :ref:`subprocesses <asyncio-subprocess>`;"
msgstr "控制\\ :ref:`子行程 (subprocess) <asyncio-subprocess>`；"

#: ../../library/asyncio.rst:41
msgid "distribute tasks via :ref:`queues <asyncio-queues>`;"
msgstr "透過\\ :ref:`佇列 (queue) <asyncio-queues>` 分配任務；"

#: ../../library/asyncio.rst:43
msgid ":ref:`synchronize <asyncio-sync>` concurrent code;"
msgstr ":ref:`同步 <asyncio-sync>`\\ 並行程式碼；"

#: ../../library/asyncio.rst:45
msgid ""
"Additionally, there are **low-level** APIs for *library and framework "
"developers* to:"
msgstr ""
"此外，還有一些給\\ *函式庫與框架 (framework) 開發者*\\ 的\\ **低階** API："

#: ../../library/asyncio.rst:48
msgid ""
"create and manage :ref:`event loops <asyncio-event-loop>`, which provide "
"asynchronous APIs for :ref:`networking <loop_create_server>`, running :ref:"
"`subprocesses <loop_subprocess_exec>`, handling :ref:`OS signals "
"<loop_add_signal_handler>`, etc;"
msgstr ""
"建立與管理 :ref:`event loops（事件迴圈） <asyncio-event-loop>`，它提供了能被"
"用於\\ :ref:`網路 <loop_create_server>`、執行\\ :ref:`子行程 "
"<loop_subprocess_exec>`、處理\\ :ref:`作業系統訊號 "
"<loop_add_signal_handler>`\\ 等任務的非同步 API；"

#: ../../library/asyncio.rst:53
msgid ""
"implement efficient protocols using :ref:`transports <asyncio-transports-"
"protocols>`;"
msgstr ""
"使用 :ref:`transports（asyncio 底層傳輸相關類別） <asyncio-transports-"
"protocols>`\\ 來實作高效能協定；"

#: ../../library/asyncio.rst:56
msgid ""
":ref:`bridge <asyncio-futures>` callback-based libraries and code with async/"
"await syntax."
msgstr ""
"透過 async/await 語法來\\ :ref:`橋接 <asyncio-futures>`\\ 基於回呼 (callback-"
"based) 的函式庫與程式碼。"

#: ../../includes/wasm-notavail.rst:3
msgid ":ref:`Availability <availability>`: not Emscripten, not WASI."
msgstr ":ref:`適用 <availability>`：非 Emscripten、非 WASI。"

#: ../../includes/wasm-notavail.rst:5
msgid ""
"This module does not work or is not available on WebAssembly platforms "
"``wasm32-emscripten`` and ``wasm32-wasi``. See :ref:`wasm-availability` for "
"more information."
msgstr ""
"此模組在 WebAssembly 平台 ``wasm32-emscripten`` 和 ``wasm32-wasi`` 上不起作用"
"或無法使用。有關更多資訊，請參閱 :ref:`wasm-availability`。"

#: ../../library/asyncio.rst:64
msgid "asyncio REPL"
msgstr ""

#: ../../library/asyncio.rst:65
msgid "You can experiment with an ``asyncio`` concurrent context in the REPL:"
msgstr "你能在 REPL 中對一個 ``asyncio`` 的並行情境 (context) 進行實驗："

#: ../../library/asyncio.rst:67
msgid ""
"$ python -m asyncio\n"
"asyncio REPL ...\n"
"Use \"await\" directly instead of \"asyncio.run()\".\n"
"Type \"help\", \"copyright\", \"credits\" or \"license\" for more "
"information.\n"
">>> import asyncio\n"
">>> await asyncio.sleep(10, result='hello')\n"
"'hello'"
msgstr ""
"$ python -m asyncio\n"
"asyncio REPL ...\n"
"Use \"await\" directly instead of \"asyncio.run()\".\n"
"Type \"help\", \"copyright\", \"credits\" or \"license\" for more "
"information.\n"
">>> import asyncio\n"
">>> await asyncio.sleep(10, result='hello')\n"
"'hello'"

#: ../../library/asyncio.rst:77
msgid ""
"Raises an :ref:`auditing event <auditing>` ``cpython.run_stdin`` with no "
"arguments."
msgstr ""

#: ../../library/asyncio.rst:79
msgid "(also 3.11.10, 3.10.15, 3.9.20, and 3.8.20) Emits audit events."
msgstr ""

#: ../../library/asyncio.rst:86
msgid "Reference"
msgstr "參閱"

#: ../../library/asyncio.rst:119
msgid "The source code for asyncio can be found in :source:`Lib/asyncio/`."
msgstr "asyncio 的原始碼可以在 :source:`Lib/asyncio/` 中找到。"
