# Copyright (C) 2001-2024, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: Python 3.13\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-10-11 00:13+0000\n"
"PO-Revision-Date: 2023-07-13 14:06+0800\n"
"Last-Translator: Po-Chuan Chen <present90308@gmail.com>\n"
"Language-Team: Chinese - TAIWAN (https://github.com/python/python-docs-zh-"
"tw)\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Poedit 3.3.2\n"

#: ../../library/os.path.rst:2
msgid ":mod:`!os.path` --- Common pathname manipulations"
msgstr ":mod:`!os.path` --- 常見的路徑名操作"

#: ../../library/os.path.rst:7
msgid ""
"**Source code:** :source:`Lib/genericpath.py`, :source:`Lib/posixpath.py` "
"(for POSIX) and :source:`Lib/ntpath.py` (for Windows)."
msgstr ""
"**原始碼：** :source:`Lib/genericpath.py`、:source:`Lib/posixpath.py` (用於 "
"POSIX 系統) 和 :source:`Lib/ntpath.py` (用於 Windows)."

#: ../../library/os.path.rst:14
msgid ""
"This module implements some useful functions on pathnames. To read or write "
"files see :func:`open`, and for accessing the filesystem see the :mod:`os` "
"module. The path parameters can be passed as strings, or bytes, or any "
"object implementing the :class:`os.PathLike` protocol."
msgstr ""
"該模組實現了一些有用的路徑名操作函式。若要讀取或寫入檔案，請參閱 :func:"
"`open` 函數，要存取檔案系統，請參閱 :mod:`os` 模組。路徑參數可以以字串、位元"
"組或任何依照 :class:`os.PathLike` 協議實作的物件傳遞。"

#: ../../library/os.path.rst:19
msgid ""
"Unlike a Unix shell, Python does not do any *automatic* path expansions. "
"Functions such as :func:`expanduser` and :func:`expandvars` can be invoked "
"explicitly when an application desires shell-like path expansion.  (See also "
"the :mod:`glob` module.)"
msgstr ""
"與 Unix shell 不同，Python 不會\\ *自動*\\ 進行路徑展開 (path expansions)。當"
"應用程式需要進行類似 shell 的路徑展開時，可以明確地呼叫 :func:`expanduser` "
"和 :func:`expandvars` 等函式。（另請參閱 :mod:`glob` 模組。）"

#: ../../library/os.path.rst:26
msgid "The :mod:`pathlib` module offers high-level path objects."
msgstr ":mod:`pathlib` 模組提供了高階的路徑物件。"

#: ../../library/os.path.rst:31
msgid ""
"All of these functions accept either only bytes or only string objects as "
"their parameters.  The result is an object of the same type, if a path or "
"file name is returned."
msgstr ""
"所有這些函數都只接受位元組或字串物件作為參數。如果回傳的是路徑或檔案名稱，結"
"果將是相同型別的物件。"

#: ../../library/os.path.rst:37
msgid ""
"Since different operating systems have different path name conventions, "
"there are several versions of this module in the standard library.  The :mod:"
"`os.path` module is always the path module suitable for the operating system "
"Python is running on, and therefore usable for local paths.  However, you "
"can also import and use the individual modules if you want to manipulate a "
"path that is *always* in one of the different formats.  They all have the "
"same interface:"
msgstr ""
"由於不同的作業系統具有不同的路徑命名慣例，在標準函式庫中的路徑模組有數個版本"
"可供使用，而 :mod:`os.path` 模組都會是運行 Python 之作業系統所適用本地路徑。"
"然而，如果你想要操作\\ *始終*\\ 以某個不同於本機格式表示的路徑，你也可以引入"
"並使用對應的模組。它們都具有相同的介面："

#: ../../library/os.path.rst:45
msgid ":mod:`posixpath` for UNIX-style paths"
msgstr ":mod:`posixpath` 用於 UNIX 形式的路徑"

#: ../../library/os.path.rst:46
msgid ":mod:`ntpath` for Windows paths"
msgstr ":mod:`ntpath` 用於 Windows 的路徑"

#: ../../library/os.path.rst:51
msgid ""
":func:`exists`, :func:`lexists`, :func:`isdir`, :func:`isfile`, :func:"
"`islink`, and :func:`ismount` now return ``False`` instead of raising an "
"exception for paths that contain characters or bytes unrepresentable at the "
"OS level."
msgstr ""
"對於包含有作業系統層級無法表示之字元或位元組的路徑，:func:`exists`、:func:"
"`lexists`、:func:`isdir`、:func:`isfile`、:func:`islink` 和 :func:`ismount` "
"函式現在會回傳 ``False``，而不是引發例外。"

#: ../../library/os.path.rst:59
msgid ""
"Return a normalized absolutized version of the pathname *path*. On most "
"platforms, this is equivalent to calling the function :func:`normpath` as "
"follows: ``normpath(join(os.getcwd(), path))``."
msgstr ""
"回傳經正規化的絕對路徑名 *path* 。在大多數平台上，這等效於按照以下方式呼叫 :"
"func:`normpath` 函式：``normpath(join(os.getcwd(), path))``。"

#: ../../library/os.path.rst:63 ../../library/os.path.rst:76
#: ../../library/os.path.rst:117 ../../library/os.path.rst:126
#: ../../library/os.path.rst:142 ../../library/os.path.rst:152
#: ../../library/os.path.rst:178 ../../library/os.path.rst:198
#: ../../library/os.path.rst:215 ../../library/os.path.rst:227
#: ../../library/os.path.rst:236 ../../library/os.path.rst:246
#: ../../library/os.path.rst:260 ../../library/os.path.rst:270
#: ../../library/os.path.rst:289 ../../library/os.path.rst:308
#: ../../library/os.path.rst:380 ../../library/os.path.rst:400
#: ../../library/os.path.rst:423 ../../library/os.path.rst:443
#: ../../library/os.path.rst:459 ../../library/os.path.rst:470
#: ../../library/os.path.rst:484 ../../library/os.path.rst:500
#: ../../library/os.path.rst:525 ../../library/os.path.rst:589
msgid "Accepts a :term:`path-like object`."
msgstr "接受一個 :term:`path-like object`。"

#: ../../library/os.path.rst:69
msgid ""
"Return the base name of pathname *path*.  This is the second element of the "
"pair returned by passing *path* to the function :func:`split`.  Note that "
"the result of this function is different from the Unix :program:`basename` "
"program; where :program:`basename` for ``'/foo/bar/'`` returns ``'bar'``, "
"the :func:`basename` function returns an empty string (``''``)."
msgstr ""
"回傳路徑名 *path* 的基底名稱。這是將 *path* 傳遞給函式 :func:`split` 後回傳結"
"果中的第二個元素。請注意，此函式的結果與 Unix 的 :program:`basename` 程式不"
"同；對於 ``'/foo/bar/'``，:program:`basename` 回傳 ``'bar'``，而 :func:"
"`basename` 函式回傳空字串（``''``）。"

#: ../../library/os.path.rst:82
#, fuzzy
msgid ""
"Return the longest common sub-path of each pathname in the iterable "
"*paths*.  Raise :exc:`ValueError` if *paths* contain both absolute and "
"relative pathnames, if *paths* are on different drives, or if *paths* is "
"empty.  Unlike :func:`commonprefix`, this returns a valid path."
msgstr ""
"回傳序列 *paths* 中每個路徑名的最長共同子路徑。如果 *paths* 同時包含絕對路徑"
"和相對路徑、*paths* 位於不同的驅動機或 *paths* 為空，則引發 :exc:"
"`ValueError`。與 :func:`commonprefix` 不同，此函式回傳的是有效路徑。"

#: ../../library/os.path.rst:90
msgid "Accepts a sequence of :term:`path-like objects <path-like object>`."
msgstr "接受一個\\ :term:`類路徑物件 <path-like object>`\\ 的序列。"

#: ../../library/os.path.rst:93
msgid "Any iterable can now be passed, rather than just sequences."
msgstr ""

#: ../../library/os.path.rst:99
msgid ""
"Return the longest path prefix (taken character-by-character) that is a "
"prefix of all paths in  *list*.  If *list* is empty, return the empty string "
"(``''``)."
msgstr ""
"回傳 *list* 中所有路徑的最長路徑前綴（逐字元比較）。如果 *list* 為空，則回傳"
"空字串（``''``）。"

#: ../../library/os.path.rst:105
msgid ""
"This function may return invalid paths because it works a character at a "
"time.  To obtain a valid path, see :func:`commonpath`."
msgstr ""
"由於此函式是逐字元比較，因此可能會回傳無效的路徑。若要獲得有效的路徑，請參"
"考 :func:`commonpath` 函式。"

#: ../../library/os.path.rst:111
msgid ""
">>> os.path.commonprefix(['/usr/lib', '/usr/local/lib'])\n"
"'/usr/l'\n"
"\n"
">>> os.path.commonpath(['/usr/lib', '/usr/local/lib'])\n"
"'/usr'"
msgstr ""
">>> os.path.commonprefix(['/usr/lib', '/usr/local/lib'])\n"
"'/usr/l'\n"
"\n"
">>> os.path.commonpath(['/usr/lib', '/usr/local/lib'])\n"
"'/usr'"

#: ../../library/os.path.rst:123
msgid ""
"Return the directory name of pathname *path*.  This is the first element of "
"the pair returned by passing *path* to the function :func:`split`."
msgstr ""
"回傳路徑名 *path* 的目錄名稱。這是將 *path* 傳遞給函式 :func:`split` 後回傳之"
"成對結果中的第一個元素。"

#: ../../library/os.path.rst:132
msgid ""
"Return ``True`` if *path* refers to an existing path or an open file "
"descriptor.  Returns ``False`` for broken symbolic links.  On some "
"platforms, this function may return ``False`` if permission is not granted "
"to execute :func:`os.stat` on the requested file, even if the *path* "
"physically exists."
msgstr ""
"如果 *path* 是一個存在的路徑或一個開啟的檔案描述器則回傳 ``True``。對於已損壞"
"的符號連結則回傳 ``False``。在某些平台上，即使 *path* 實際存在，如果未被授予"
"執行 :func:`os.stat` 的權限，此函式仍可能回傳 ``False``。"

#: ../../library/os.path.rst:138
msgid ""
"*path* can now be an integer: ``True`` is returned if it is an  open file "
"descriptor, ``False`` otherwise."
msgstr ""
"現在 *path* 可以是一個整數：如果它是一個開啟的檔案描述器，則回傳 ``True``；否"
"則回傳 ``False``。"

#: ../../library/os.path.rst:148
msgid ""
"Return ``True`` if *path* refers to an existing path, including broken "
"symbolic links.   Equivalent to :func:`exists` on platforms lacking :func:"
"`os.lstat`."
msgstr ""
"如果 *path* 是一個存在的路徑則回傳 ``True``，對已損壞的符號連結也是。在缺乏 :"
"func:`os.lstat` 的平台上，與 :func:`exists` 函式等效。"

#: ../../library/os.path.rst:160
msgid ""
"On Unix and Windows, return the argument with an initial component of ``~`` "
"or ``~user`` replaced by that *user*'s home directory."
msgstr ""
"在 Unix 和 Windows 上，將引數中以 ``~`` 或 ``~user`` 開頭的部分替換為該 "
"*user* 的家目錄。"

#: ../../library/os.path.rst:165
msgid ""
"On Unix, an initial ``~`` is replaced by the environment variable :envvar:"
"`HOME` if it is set; otherwise the current user's home directory is looked "
"up in the password directory through the built-in module :mod:`pwd`. An "
"initial ``~user`` is looked up directly in the password directory."
msgstr ""
"在 Unix 上，如果環境變數 :envvar:`HOME` 有被設置，則將初始的 ``~`` 替換為該變"
"數的值；否則將使用內建模組 :mod:`pwd` 在密碼目錄中查找當前使用者的家目錄。對"
"於初始的 ``~user``，直接在密碼目錄中查找該使用者的家目錄。"

#: ../../library/os.path.rst:170
msgid ""
"On Windows, :envvar:`USERPROFILE` will be used if set, otherwise a "
"combination of :envvar:`HOMEPATH` and :envvar:`HOMEDRIVE` will be used.  An "
"initial ``~user`` is handled by checking that the last directory component "
"of the current user's home directory matches :envvar:`USERNAME`, and "
"replacing it if so."
msgstr ""
"在 Windows 上，如果 :envvar:`USERPROFILE` 有被設置，則使用該變數的值；否則將"
"結合 :envvar:`HOMEPATH` 和 :envvar:`HOMEDRIVE`。對於初始的 ``~user``，會檢查"
"當前使用者的家目錄的最後一個目錄元件是否與 :envvar:`USERNAME` 相符，如果相符"
"則替換它。"

#: ../../library/os.path.rst:175
msgid ""
"If the expansion fails or if the path does not begin with a tilde, the path "
"is returned unchanged."
msgstr ""
"如果展開失敗或路徑不以波浪符號 (tilde) 開頭，則回傳原始路徑，不做任何變更。"

#: ../../library/os.path.rst:181
msgid "No longer uses :envvar:`HOME` on Windows."
msgstr "在 Windows 上不再使用 :envvar:`HOME` 變數。"

#: ../../library/os.path.rst:190
msgid ""
"Return the argument with environment variables expanded.  Substrings of the "
"form ``$name`` or ``${name}`` are replaced by the value of environment "
"variable *name*.  Malformed variable names and references to non-existing "
"variables are left unchanged."
msgstr ""
"回傳已展開環境變數的引數。形如 ``$name`` 或 ``${name}`` 的子字串會被替換為環"
"境變數 *name* 的值。無效的變數名稱和對不存在變數的引用保持不變。"

#: ../../library/os.path.rst:195
msgid ""
"On Windows, ``%name%`` expansions are supported in addition to ``$name`` and "
"``${name}``."
msgstr ""
"在 Windows 上，除了支援 ``$name`` 和 ``${name}`` 形式的展開外，還支援 "
"``%name%`` 形式的展開。"

#: ../../library/os.path.rst:204
msgid ""
"Return the time of last access of *path*.  The return value is a floating-"
"point number giving the number of seconds since the epoch (see the  :mod:"
"`time` module).  Raise :exc:`OSError` if the file does not exist or is "
"inaccessible."
msgstr ""
"回傳 *path* 的最後存取時間。回傳值是一個浮點數，表示自紀元（參見 :mod:`time` "
"模組）以來的秒數。如果檔案不存在或無法存取，則引發 :exc:`OSError`。"

#: ../../library/os.path.rst:211
msgid ""
"Return the time of last modification of *path*.  The return value is a "
"floating-point number giving the number of seconds since the epoch (see "
"the  :mod:`time` module). Raise :exc:`OSError` if the file does not exist or "
"is inaccessible."
msgstr ""
"回傳 *path* 的最後修改時間。回傳值是一個浮點數，表示自紀元（參見 :mod:`time` "
"模組）以來的秒數。如果檔案不存在或無法存取，則引發 :exc:`OSError`。"

#: ../../library/os.path.rst:221
msgid ""
"Return the system's ctime which, on some systems (like Unix) is the time of "
"the last metadata change, and, on others (like Windows), is the creation "
"time for *path*. The return value is a number giving the number of seconds "
"since the epoch (see the  :mod:`time` module).  Raise :exc:`OSError` if the "
"file does not exist or is inaccessible."
msgstr ""
"回傳系統的 ctime。在某些系統（如 Unix）上，這是最後一次元數據 (metadata) 更改"
"的時間，在其他系統（如 Windows）上則是 *path* 的建立時間。回傳值是一個浮點"
"數，表示自紀元（參見 :mod:`time` 模組）以來的秒數。如果檔案不存在或無法存"
"取），則引發 :exc:`OSError`。"

#: ../../library/os.path.rst:233
msgid ""
"Return the size, in bytes, of *path*.  Raise :exc:`OSError` if the file does "
"not exist or is inaccessible."
msgstr ""
"回傳 *path* 的大小（以位元組為單位）。如果檔案不存在或無法存取，則引發 :exc:"
"`OSError`。"

#: ../../library/os.path.rst:242
#, fuzzy
msgid ""
"Return ``True`` if *path* is an absolute pathname.  On Unix, that means it "
"begins with a slash, on Windows that it begins with two (back)slashes, or a "
"drive letter, colon, and (back)slash together."
msgstr ""
"如果 *path* 是絕對路徑名，則回傳 ``True``。在 Unix 上，這表示它以斜線開頭；"
"在 Windows 上，表示在去除可能的驅動機字母後，以（反）斜線開頭。"

#: ../../library/os.path.rst:249
msgid ""
"On Windows, returns ``False`` if the given path starts with exactly one "
"(back)slash."
msgstr ""

#: ../../library/os.path.rst:256
msgid ""
"Return ``True`` if *path* is an :func:`existing <exists>` regular file. This "
"follows symbolic links, so both :func:`islink` and :func:`isfile` can be "
"true for the same path."
msgstr ""
"如果 *path* 是一個\\ :func:`已存在的 <exists>`\\ 常規檔案，則回傳 ``True``。"
"這將跟隨符號連結，因此同一個路徑可以同時回傳 :func:`islink` 和 :func:"
"`isfile` 的結果為真。"

#: ../../library/os.path.rst:266
msgid ""
"Return ``True`` if *path* is an :func:`existing <exists>` directory.  This "
"follows symbolic links, so both :func:`islink` and :func:`isdir` can be true "
"for the same path."
msgstr ""
"如果 *path* 是一個\\ :func:`已存在的 <exists>`\\ 目錄，則回傳 ``True``。這將"
"跟隨符號連結，因此同一個路徑可以同時回傳 :func:`islink` 和 :func:`isfile` 的"
"結果為真。"

#: ../../library/os.path.rst:276
msgid ""
"Return ``True`` if *path* refers to an :func:`existing <lexists>` directory "
"entry that is a junction.  Always return ``False`` if junctions are not "
"supported on the current platform."
msgstr ""
"如果 *path* 是指向\\ :func:`已存在的 <lexists>`\\ 目錄條目且為聯接點 "
"(junction)，則回傳 ``True``。如果目前平台不支援聯接點，則始終返回 ``False``。"

#: ../../library/os.path.rst:285
msgid ""
"Return ``True`` if *path* refers to an :func:`existing <exists>` directory "
"entry that is a symbolic link.  Always ``False`` if symbolic links are not "
"supported by the Python runtime."
msgstr ""
"如果 *path* 是指向\\ :func:`已存在的 <exists>`\\ 目錄項目且為符號連結，則回"
"傳 ``True``。如果 Python 執行時不支援符號連結，則始終回傳 ``False``。"

#: ../../library/os.path.rst:295
msgid ""
"Return ``True`` if pathname *path* is a :dfn:`mount point`: a point in a "
"file system where a different file system has been mounted.  On POSIX, the "
"function checks whether *path*'s parent, :file:`{path}/..`, is on a "
"different device than *path*, or whether :file:`{path}/..` and *path* point "
"to the same i-node on the same device --- this should detect mount points "
"for all Unix and POSIX variants.  It is not able to reliably detect bind "
"mounts on the same filesystem.  On Windows, a drive letter root and a share "
"UNC are always mount points, and for any other path ``GetVolumePathName`` is "
"called to see if it is different from the input path."
msgstr ""
"如果路徑名 *path* 是一個掛載點 (:dfn:`mount point`)，則回傳 ``True``：即在檔"
"案系統中掛載了不同的檔案系統。在 POSIX 系統上，該函式檢查 *path* 的父目錄 :"
"file:`{path}/..` 是否位於不同的設備上，或者 :file:`{path}/..` 和 *path* 是否"
"指向同一設備上的相同 i-node --- 這應該能夠檢測出所有 Unix 和 POSIX 變體的掛載"
"點。但無法可靠地檢測出相同檔案系統上的綁定掛載點 (bind mount)。在 Windows "
"上，以驅動機字母開頭的根目錄和 UNC 共享路徑始終是掛載點，對於任何其他路徑，會"
"呼叫 ``GetVolumePathName`` 函式來檢查它是否與輸入路徑不同。"

#: ../../library/os.path.rst:305
msgid "Added support for detecting non-root mount points on Windows."
msgstr "新增在 Windows 上檢測非根目錄掛載點的支援。"

#: ../../library/os.path.rst:314
msgid ""
"Return ``True`` if pathname *path* is located on a Windows Dev Drive. A Dev "
"Drive is optimized for developer scenarios, and offers faster performance "
"for reading and writing files. It is recommended for use for source code, "
"temporary build directories, package caches, and other IO-intensive "
"operations."
msgstr ""
"如果路徑名 *path* 位於 Windows Dev 驅動機上，則回傳 ``True``。Dev 驅動機針對"
"開發人員場景進行了優化，提供更快的讀寫檔案性能。建議將其用於原始程式碼、臨時"
"建置目錄、封包快取和其他 I/O 密集型操作。"

#: ../../library/os.path.rst:320
msgid ""
"May raise an error for an invalid path, for example, one without a "
"recognizable drive, but returns ``False`` on platforms that do not support "
"Dev Drives. See `the Windows documentation <https://learn.microsoft.com/"
"windows/dev-drive/>`_ for information on enabling and creating Dev Drives."
msgstr ""
"可能會對無效的路徑引發錯誤，例如，沒有可識別的驅動機的路徑，但在不支援 Dev 磁"
"碟機的平台上返回 ``False``。請參閱 `Windows 文件 <https://learn.microsoft."
"com/windows/dev-drive/>`_\\ 以了解有關啟用和建立 Dev 驅動機的資訊。"

#: ../../library/os.path.rst:327
msgid ""
"The function is now available on all platforms, and will always return "
"``False`` on those that have no support for Dev Drives"
msgstr ""

#: ../../library/os.path.rst:333
msgid "Return ``True`` if *path* is a reserved pathname on the current system."
msgstr ""

#: ../../library/os.path.rst:335
msgid ""
"On Windows, reserved filenames include those that end with a space or dot; "
"those that contain colons (i.e. file streams such as \"name:stream\"), "
"wildcard characters (i.e. ``'*?\"<>'``), pipe, or ASCII control characters; "
"as well as DOS device names such as \"NUL\", \"CON\", \"CONIN$\", \"CONOUT$"
"\", \"AUX\", \"PRN\", \"COM1\", and \"LPT1\"."
msgstr ""

#: ../../library/os.path.rst:343
msgid ""
"This function approximates rules for reserved paths on most Windows systems. "
"These rules change over time in various Windows releases. This function may "
"be updated in future Python releases as changes to the rules become broadly "
"available."
msgstr ""

#: ../../library/os.path.rst:348
msgid "Availability"
msgstr ""

#: ../../library/os.path.rst:355
msgid ""
"Join one or more path segments intelligently.  The return value is the "
"concatenation of *path* and all members of *\\*paths*, with exactly one "
"directory separator following each non-empty part, except the last. That is, "
"the result will only end in a separator if the last part is either empty or "
"ends in a separator. If a segment is an absolute path (which on Windows "
"requires both a drive and a root), then all previous segments are ignored "
"and joining continues from the absolute path segment."
msgstr ""
"聰明地連接一個或多個路徑段。回傳值是 *path* 和 *\\*paths* 的所有成員的串聯，"
"每個非空部分後面都有一個目錄分隔符號，除了最後一個部分。換句話說，如果最後一"
"個部分為空或以分隔符號結尾，結果只會以分隔符號結尾。如果一個段是絕對路徑（在 "
"Windows 上需要驅動機和根），則忽略所有之前的段，並從絕對路徑段繼續連接。"

#: ../../library/os.path.rst:363
msgid ""
"On Windows, the drive is not reset when a rooted path segment (e.g., "
"``r'\\foo'``) is encountered. If a segment is on a different drive or is an "
"absolute path, all previous segments are ignored and the drive is reset. "
"Note that since there is a current directory for each drive, ``os.path."
"join(\"c:\", \"foo\")`` represents a path relative to the current directory "
"on drive :file:`C:` (:file:`c:foo`), not :file:`c:\\\\foo`."
msgstr ""
"在 Windows 上，當遇到根路徑段（例如，``r'\\foo'``）時，驅動機不會被重置。如果"
"一個段位於不同的驅動機上，或者是絕對路徑，則將忽略所有之前的段並重置驅動機。"
"請注意，由於每個驅動機都有當前目錄，``os.path.join(\"c:\", \"foo\")`` 表示相"
"對於驅動機 :file:`C:` 的當前目錄的路徑（即 :file:`c:foo`），而不是 :file:`c:"
"\\\\foo`。"

#: ../../library/os.path.rst:370
msgid "Accepts a :term:`path-like object` for *path* and *paths*."
msgstr "*path* 和 *paths* 接受 :term:`path-like object` 作為參數。"

#: ../../library/os.path.rst:376
msgid ""
"Normalize the case of a pathname.  On Windows, convert all characters in the "
"pathname to lowercase, and also convert forward slashes to backward slashes. "
"On other operating systems, return the path unchanged."
msgstr ""
"將路徑名的大小寫規範化。在 Windows 上，將路徑名中的所有字元轉換為小寫，並將正"
"斜線轉換為反斜線。在其他作業系統上，回傳原始路徑。"

#: ../../library/os.path.rst:386
msgid ""
"Normalize a pathname by collapsing redundant separators and up-level "
"references so that ``A//B``, ``A/B/``, ``A/./B`` and ``A/foo/../B`` all "
"become ``A/B``.  This string manipulation may change the meaning of a path "
"that contains symbolic links.  On Windows, it converts forward slashes to "
"backward slashes. To normalize case, use :func:`normcase`."
msgstr ""
"通過合併多餘的分隔符號和上層引用來標準化路徑名，使得 ``A//B``、``A/B/``、"
"``A/./B`` 和 ``A/foo/../B`` 都變成 ``A/B``。這種字串操作可能會改變包含符號連"
"結的路徑的含義。在 Windows 上，它將正斜線轉換為反斜線。要標準化大小寫，請使"
"用 :func:`normcase`。"

#: ../../library/os.path.rst:393
msgid ""
"On POSIX systems, in accordance with `IEEE Std 1003.1 2013 Edition; 4.13 "
"Pathname Resolution <https://pubs.opengroup.org/onlinepubs/9699919799/"
"basedefs/V1_chap04.html#tag_04_13>`_, if a pathname begins with exactly two "
"slashes, the first component following the leading characters may be "
"interpreted in an implementation-defined manner, although more than two "
"leading characters shall be treated as a single character."
msgstr ""
"在 POSIX 系統中，根據 `IEEE Std 1003.1 2013 版; 4.13 Pathname Resolution "
"<https://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap04."
"html#tag_04_13>`_ 標準，如果一個路徑名恰好以兩個斜線開頭，則在前導字元後的第"
"一個部分可能會以由實作品自行定義的方式解釋，雖然多於兩個前導字元應該被視為單"
"個字元。"

#: ../../library/os.path.rst:406
#, fuzzy
msgid ""
"Return the canonical path of the specified filename, eliminating any "
"symbolic links encountered in the path (if they are supported by the "
"operating system). On Windows, this function will also resolve MS-DOS (also "
"called 8.3) style names such as ``C:\\\\PROGRA~1`` to ``C:\\\\Program "
"Files``."
msgstr ""
"回傳指定檔案名稱的規範路徑，消除路徑中遇到的所有符號連結（如果作業系統支"
"援）。"

#: ../../library/os.path.rst:411
#, fuzzy
msgid ""
"If a path doesn't exist or a symlink loop is encountered, and *strict* is "
"``True``, :exc:`OSError` is raised. If *strict* is ``False`` these errors "
"are ignored, and so the result might be missing or otherwise inaccessible."
msgstr ""
"如果路徑不存在或遇到符號連結迴圈，且 *strict* 為 ``True``，則引發 :exc:"
"`OSError`。如果 *strict* 為 ``False``，則將路徑盡可能解析，並將任何剩餘部分附"
"加在後面，而不檢查其是否存在。"

#: ../../library/os.path.rst:416
msgid ""
"This function emulates the operating system's procedure for making a path "
"canonical, which differs slightly between Windows and UNIX with respect to "
"how links and subsequent path components interact."
msgstr ""
"此函式模擬作業系統使路徑成為規範的過程，Windows 和 UNIX 之間在鏈接和後續路徑"
"部份交互方式方面略有不同。"

#: ../../library/os.path.rst:420
msgid ""
"Operating system APIs make paths canonical as needed, so it's not normally "
"necessary to call this function."
msgstr "作業系統的 API 會根據需要自動使路徑正則，因此通常不需要呼叫此函式。"

#: ../../library/os.path.rst:426
msgid "Symbolic links and junctions are now resolved on Windows."
msgstr "在 Windows 上，現在會解析符號連結和連接點。"

#: ../../library/os.path.rst:429
msgid "The *strict* parameter was added."
msgstr "新增 *strict* 參數。"

#: ../../library/os.path.rst:435
msgid ""
"Return a relative filepath to *path* either from the current directory or "
"from an optional *start* directory.  This is a path computation:  the "
"filesystem is not accessed to confirm the existence or nature of *path* or "
"*start*.  On Windows, :exc:`ValueError` is raised when *path* and *start* "
"are on different drives."
msgstr ""
"從當前目錄或可選的 *start* 目錄回傳到 *path* 的相對檔案路徑。這是一個路徑計"
"算：不會訪問檔案系統來確認 *path* 或 *start* 的存在或屬性。在 Windows 上，當 "
"*path* 和 *start* 在不同的驅動機上時，會引發 :exc:`ValueError`。"

#: ../../library/os.path.rst:441
msgid "*start* defaults to :data:`os.curdir`."
msgstr "*start* 的預設值為 :data:`os.curdir`。"

#: ../../library/os.path.rst:449
msgid ""
"Return ``True`` if both pathname arguments refer to the same file or "
"directory. This is determined by the device number and i-node number and "
"raises an exception if an :func:`os.stat` call on either pathname fails."
msgstr ""
"如果兩個路徑名引數指向同一個檔案或目錄，則回傳 ``True``。這是通過設備編號和 "
"i-node 編號來確定的，如果對任一路徑名的 :func:`os.stat` 呼叫失敗，則會引發異"
"常。"

#: ../../library/os.path.rst:453 ../../library/os.path.rst:467
#: ../../library/os.path.rst:481
msgid "Added Windows support."
msgstr "新增對 Windows 的支援。"

#: ../../library/os.path.rst:456
msgid "Windows now uses the same implementation as all other platforms."
msgstr "現在在 Windows 上使用與其他所有平台相同的實作方式。"

#: ../../library/os.path.rst:465
msgid ""
"Return ``True`` if the file descriptors *fp1* and *fp2* refer to the same "
"file."
msgstr "如果文件描述符 *fp1* 和 *fp2* 指向同一個檔案，則回傳 ``True``。"

#: ../../library/os.path.rst:476
msgid ""
"Return ``True`` if the stat tuples *stat1* and *stat2* refer to the same "
"file. These structures may have been returned by :func:`os.fstat`, :func:`os."
"lstat`, or :func:`os.stat`.  This function implements the underlying "
"comparison used by :func:`samefile` and :func:`sameopenfile`."
msgstr ""
"如果 stat 值組 *stat1* 和 *stat2* 指向同一個檔案，則回傳 ``True``。這些結構可"
"能由 :func:`os.fstat`、:func:`os.lstat` 或 :func:`os.stat` 回傳。此函式使用 :"
"func:`samefile` 和 :func:`sameopenfile` 實現了底層比較。"

#: ../../library/os.path.rst:490
msgid ""
"Split the pathname *path* into a pair, ``(head, tail)`` where *tail* is the "
"last pathname component and *head* is everything leading up to that.  The "
"*tail* part will never contain a slash; if *path* ends in a slash, *tail* "
"will be empty.  If there is no slash in *path*, *head* will be empty.  If "
"*path* is empty, both *head* and *tail* are empty.  Trailing slashes are "
"stripped from *head* unless it is the root (one or more slashes only).  In "
"all cases, ``join(head, tail)`` returns a path to the same location as "
"*path* (but the strings may differ).  Also see the functions :func:`dirname` "
"and :func:`basename`."
msgstr ""
"將路徑名 *path* 拆分為 ``(head, tail)`` 一對，其中 *tail* 是最後一個路徑名部"
"份，*head* 是在它之前的所有部分。*tail* 部分不會包含斜線；如果 *path* 以斜線"
"結尾，則 *tail* 將為空。如果 *path* 中沒有斜線，則 *head* 將為空。如果 "
"*path* 為空，則 *head* 和 *tail* 都為空。除非 *head* 是根目錄（僅有一個或多個"
"斜線），否則從 *head* 中刪除尾部的斜線。在所有情況下，``join(head, tail)`` 回"
"傳指向與 *path* 相同位置的路徑（但字串可能不同）。還可以參考函式 :func:"
"`dirname` 和 :func:`basename`。"

#: ../../library/os.path.rst:506
msgid ""
"Split the pathname *path* into a pair ``(drive, tail)`` where *drive* is "
"either a mount point or the empty string.  On systems which do not use drive "
"specifications, *drive* will always be the empty string.  In all cases, "
"``drive + tail`` will be the same as *path*."
msgstr ""
"將路徑名 *path* 拆分為 ``(drive, tail)`` 一對，其中 *drive* 是掛載點或空字"
"串。在不使用驅動機規範的系統上，*drive* 將始終為空字串。在所有情況下，"
"``drive + tail`` 將與 *path* 相同。"

#: ../../library/os.path.rst:511
msgid ""
"On Windows, splits a pathname into drive/UNC sharepoint and relative path."
msgstr "在 Windows 上，將路徑名拆分為驅動機或 UNC 共享點以及相對路徑。"

#: ../../library/os.path.rst:513
msgid ""
"If the path contains a drive letter, drive will contain everything up to and "
"including the colon::"
msgstr ""
"如果路徑包含驅動機字母，則 *drive* 將包含從頭到冒號（包括冒號）的所有內"
"容： ::"

#: ../../library/os.path.rst:516
msgid ""
">>> splitdrive(\"c:/dir\")\n"
"(\"c:\", \"/dir\")"
msgstr ""
">>> splitdrive(\"c:/dir\")\n"
"(\"c:\", \"/dir\")"

#: ../../library/os.path.rst:519
msgid ""
"If the path contains a UNC path, drive will contain the host name and share::"
msgstr "如果路徑包含 UNC 路徑，則驅動機將包含主機名和共享名： ::"

#: ../../library/os.path.rst:522
msgid ""
">>> splitdrive(\"//host/computer/dir\")\n"
"(\"//host/computer\", \"/dir\")"
msgstr ""
">>> splitdrive(\"//host/computer/dir\")\n"
"(\"//host/computer\", \"/dir\")"

#: ../../library/os.path.rst:531
msgid ""
"Split the pathname *path* into a 3-item tuple ``(drive, root, tail)`` where "
"*drive* is a device name or mount point, *root* is a string of separators "
"after the drive, and *tail* is everything after the root. Any of these items "
"may be the empty string. In all cases, ``drive + root + tail`` will be the "
"same as *path*."
msgstr ""
"將路徑名 *path* 拆分為一個 3 項值組 ``(drive, root, tail)``，其中 *drive* 是"
"設備名稱或掛載點，*root* 是驅動機後的分隔符字串，*tail* 是在根後的所有內容。"
"這些項目中的任何一個都可能是空字串。在所有情況下，``drive + root + tail`` 將"
"與 *path* 相同。"

#: ../../library/os.path.rst:537
msgid ""
"On POSIX systems, *drive* is always empty. The *root* may be empty (if "
"*path* is relative), a single forward slash (if *path* is absolute), or two "
"forward slashes (implementation-defined per `IEEE Std 1003.1-2017; 4.13 "
"Pathname Resolution <https://pubs.opengroup.org/onlinepubs/9699919799/"
"basedefs/V1_chap04.html#tag_04_13>`_.) For example::"
msgstr ""
"在 POSIX 系統上，*drive* 始終為空。*root* 可能為空（如果 *path* 是相對路"
"徑），一個斜線（如果 *path* 是絕對路徑），或者兩個斜線（根據 `IEEE Std "
"1003.1-2017; 4.13 Pathname Resolution <https://pubs.opengroup.org/"
"onlinepubs/9699919799/basedefs/V1_chap04.html#tag_04_13>`_ 的實作定義）。例"
"如： ::"

#: ../../library/os.path.rst:543
msgid ""
">>> splitroot('/home/sam')\n"
"('', '/', 'home/sam')\n"
">>> splitroot('//home/sam')\n"
"('', '//', 'home/sam')\n"
">>> splitroot('///home/sam')\n"
"('', '/', '//home/sam')"
msgstr ""
">>> splitroot('/home/sam')\n"
"('', '/', 'home/sam')\n"
">>> splitroot('//home/sam')\n"
"('', '//', 'home/sam')\n"
">>> splitroot('///home/sam')\n"
"('', '/', '//home/sam')"

#: ../../library/os.path.rst:550
msgid ""
"On Windows, *drive* may be empty, a drive-letter name, a UNC share, or a "
"device name. The *root* may be empty, a forward slash, or a backward slash. "
"For example::"
msgstr ""
"在 Windows 上，*drive* 可能為空、驅動機名稱、UNC 共享或設備名稱。*root* 可能"
"為空，斜線或反斜線。例如： ::"

#: ../../library/os.path.rst:554
msgid ""
">>> splitroot('C:/Users/Sam')\n"
"('C:', '/', 'Users/Sam')\n"
">>> splitroot('//Server/Share/Users/Sam')\n"
"('//Server/Share', '/', 'Users/Sam')"
msgstr ""
">>> splitroot('C:/Users/Sam')\n"
"('C:', '/', 'Users/Sam')\n"
">>> splitroot('//Server/Share/Users/Sam')\n"
"('//Server/Share', '/', 'Users/Sam')"

#: ../../library/os.path.rst:564
msgid ""
"Split the pathname *path* into a pair ``(root, ext)``  such that ``root + "
"ext == path``, and the extension, *ext*, is empty or begins with a period "
"and contains at most one period."
msgstr ""
"將路徑名 *path* 拆分為一對 ``(root, ext)``，使得 ``root + ext == path``，且副"
"檔名 *ext* 為空或以點開頭且最多包含一個點 (period)。"

#: ../../library/os.path.rst:568
msgid "If the path contains no extension, *ext* will be ``''``::"
msgstr "如果路徑不包含副檔名，則 *ext* 將為 ``''``： ::"

#: ../../library/os.path.rst:570
msgid ""
">>> splitext('bar')\n"
"('bar', '')"
msgstr ""
">>> splitext('bar')\n"
"('bar', '')"

#: ../../library/os.path.rst:573
msgid ""
"If the path contains an extension, then *ext* will be set to this extension, "
"including the leading period. Note that previous periods will be ignored::"
msgstr ""
"如果路徑包含副檔名，則 *ext* 將設置為該副檔名，包括前導的點。請注意，前面的點"
"將被忽略： ::"

#: ../../library/os.path.rst:576
msgid ""
">>> splitext('foo.bar.exe')\n"
"('foo.bar', '.exe')\n"
">>> splitext('/foo/bar.exe')\n"
"('/foo/bar', '.exe')"
msgstr ""
">>> splitext('foo.bar.exe')\n"
"('foo.bar', '.exe')\n"
">>> splitext('/foo/bar.exe')\n"
"('/foo/bar', '.exe')"

#: ../../library/os.path.rst:581
msgid ""
"Leading periods of the last component of the path are considered to be part "
"of the root::"
msgstr "路徑的最後一個部份的前導點被認為是根的一部分： ::"

#: ../../library/os.path.rst:584
msgid ""
">>> splitext('.cshrc')\n"
"('.cshrc', '')\n"
">>> splitext('/foo/....jpg')\n"
"('/foo/....jpg', '')"
msgstr ""
">>> splitext('.cshrc')\n"
"('.cshrc', '')\n"
">>> splitext('/foo/....jpg')\n"
"('/foo/....jpg', '')"

#: ../../library/os.path.rst:595
msgid ""
"``True`` if arbitrary Unicode strings can be used as file names (within "
"limitations imposed by the file system)."
msgstr ""
"如果可以使用任意的 Unicode 字串作為檔案名（在檔案系統所施加的限制範圍內），則"
"回傳 ``True``。"

#: ../../library/os.path.rst:10
msgid "path"
msgstr "path（路徑）"

#: ../../library/os.path.rst:10
msgid "operations"
msgstr "operations（操作）"

#: ../../library/os.path.rst:156
msgid "~ (tilde)"
msgstr "~ （波浪號）"

#: ../../library/os.path.rst:156
msgid "home directory expansion"
msgstr "home directory expansion（家目錄展開）"

#: ../../library/os.path.rst:163
msgid "module"
msgstr "module（模組）"

#: ../../library/os.path.rst:163
msgid "pwd"
msgstr "pwd"

#: ../../library/os.path.rst:184
msgid "$ (dollar)"
msgstr "$ （金錢符號）"

#: ../../library/os.path.rst:184
msgid "environment variables expansion"
msgstr "environment variables expansion（環境變數展開）"

#: ../../library/os.path.rst:184
msgid "% (percent)"
msgstr "% （百分號）"

#: ../../library/os.path.rst:184
msgid "environment variables expansion (Windows)"
msgstr "environment variables expansion (Windows)（環境變數展開 (Windows)）"
