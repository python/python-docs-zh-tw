# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2022, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
# Liang-Bo Wang <me@liang2.tw>, 2016
# eopXD <yueh.ting.chen@gmail.com>, 2018
# Matt Wang <mattwang44@gmail.com>, 2021
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-10-26 08:56+0000\n"
"PO-Revision-Date: 2021-10-26 17:01+0800\n"
"Last-Translator: Matt Wang <mattwang44@gmail.com>\n"
"Language-Team: Chinese - TAIWAN (https://github.com/python/python-docs-zh-"
"tw)\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Poedit 3.0\n"

#: ../../library/intro.rst:5
msgid "Introduction"
msgstr "簡介"

#: ../../library/intro.rst:7
msgid "The \"Python library\" contains several different kinds of components."
msgstr "「Python 函式庫」包含了許多不同的部分。"

#: ../../library/intro.rst:9
msgid ""
"It contains data types that would normally be considered part of the \"core"
"\" of a language, such as numbers and lists.  For these types, the Python "
"language core defines the form of literals and places some constraints on "
"their semantics, but does not fully define the semantics.  (On the other "
"hand, the language core does define syntactic properties like the spelling "
"and priorities of operators.)"
msgstr ""
"函式庫中包括被視為程式語言「核心」部分的資料型態，像是數字 (number) 或是串列 "
"(list)。對於這些型別，Python 核心對這些字面值 (literal) 的形式做定義，並對它"
"們的語意制定了一些限制，但在此同時卻不把文字對應的語意完全定義。（另一方面，"
"Python 在語法面上有確實的定義，例如拼字或是運算元次序）"

#: ../../library/intro.rst:15
msgid ""
"The library also contains built-in functions and exceptions --- objects that "
"can be used by all Python code without the need of an :keyword:`import` "
"statement. Some of these are defined by the core language, but many are not "
"essential for the core semantics and are only described here."
msgstr ""
"Python 函式庫也囊括了內建函數與例外處理——這些物件都可以不用透過 :keyword:"
"`import` 陳述式來引入 Python 程式中就能使用。函式庫中有部份是被 Python 核心所"
"定義的，但在這裡僅解釋最核心的語意部分。"

#: ../../library/intro.rst:20
msgid ""
"The bulk of the library, however, consists of a collection of modules. There "
"are many ways to dissect this collection.  Some modules are written in C and "
"built in to the Python interpreter; others are written in Python and "
"imported in source form.  Some modules provide interfaces that are highly "
"specific to Python, like printing a stack trace; some provide interfaces "
"that are specific to particular operating systems, such as access to "
"specific hardware; others provide interfaces that are specific to a "
"particular application domain, like the World Wide Web. Some modules are "
"available in all versions and ports of Python; others are only available "
"when the underlying system supports or requires them; yet others are "
"available only when a particular configuration option was chosen at the time "
"when Python was compiled and installed."
msgstr ""
"整個函式庫中包含了許多模組，有許多方法可以從函式庫中取用這些模組。有些模組是"
"以 C 語言撰寫並建置於 Python 編譯器之中，其他的是由 Python 撰寫並以源碼的方"
"式 (source form) 引入。有些模組提供的功能是專屬於 Python 的，像是把 stack "
"trace 印出來；有些則是針對特定作業系統，去試著存取特定硬體；還有些提供對特定"
"應用的功能與操作介面，像是 World Wide Web。模組的使用情況會因機器與 Python 的"
"版本而不同，部分模組是開放所有版本以及 Port 的 Python 來使用的，但有些會因系"
"統支援或需求在某些版本或系統下無法使用，甚至有些僅限在特定的設定環境下才能使"
"用。"

#: ../../library/intro.rst:32
msgid ""
"This manual is organized \"from the inside out:\" it first describes the "
"built-in functions, data types and exceptions, and finally the modules, "
"grouped in chapters of related modules."
msgstr ""
"這個手冊會「深入淺出」地介紹 Python 函式庫。它會先介紹一些內建函式、資料型"
"態、和一些例外處理，再來一章章的主題式介紹相關模組。"

#: ../../library/intro.rst:36
msgid ""
"This means that if you start reading this manual from the start, and skip to "
"the next chapter when you get bored, you will get a reasonable overview of "
"the available modules and application areas that are supported by the Python "
"library.  Of course, you don't *have* to read it like a novel --- you can "
"also browse the table of contents (in front of the manual), or look for a "
"specific function, module or term in the index (in the back).  And finally, "
"if you enjoy learning about random subjects, you choose a random page number "
"(see module :mod:`random`) and read a section or two.  Regardless of the "
"order in which you read the sections of this manual, it helps to start with "
"chapter :ref:`built-in-funcs`, as the remainder of the manual assumes "
"familiarity with this material."
msgstr ""
"這代表如果你從這個手冊的最開始讀起，並在感到無聊時跳到下一個章節，你仍然可以"
"得到一個對 Python 函式庫所支援的模組與其合理應用的概觀。當然，你\\ *沒有必要*"
"\\ 像是在讀一本小說一樣讀這本手冊——你可以快速瀏覽目錄（在手冊的最前頭）、或是"
"你可以利用最後面的索引來查詢特定的函式或模組。最後，如果你享受閱讀一些隨機的"
"主題，你可以選擇一個隨機的數字並開始閱讀（見 :mod:`random` 模組) 。不管你想要"
"以什麼順序來閱讀這個手冊，\\ :ref:`built-in-funcs`\\ 會是一個很好的入門，因為"
"手冊中其他章節都預設你已經對這個章節有一定的熟悉程度。"

#: ../../library/intro.rst:48
msgid "Let the show begin!"
msgstr "讓我們開始吧！"

#: ../../library/intro.rst:54
msgid "Notes on availability"
msgstr "可用性之註釋"

#: ../../library/intro.rst:56
msgid ""
"An \"Availability: Unix\" note means that this function is commonly found on "
"Unix systems.  It does not make any claims about its existence on a specific "
"operating system."
msgstr ""
"如果出現「適用：Unix」註釋，則代表該函數普遍存在於 Unix 系統中，但這並不保證"
"其存在於某特定作業系統。"

#: ../../library/intro.rst:60
msgid ""
"If not separately noted, all functions that claim \"Availability: Unix\" are "
"supported on macOS, which builds on a Unix core."
msgstr ""
"如果沒有分別註釋的話，有標明「適用：Unix」註釋的所有函式也都於 macOS 上支援，"
"因其建於 Unix 核心之上。"
