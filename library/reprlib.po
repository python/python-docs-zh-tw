# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2022, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: Python 3.12\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-05-09 00:03+0000\n"
"PO-Revision-Date: 2015-12-09 17:51+0000\n"
"Last-Translator: Liang-Bo Wang <me@liang2.tw>\n"
"Language-Team: Chinese - TAIWAN (https://github.com/python/python-docs-zh-"
"tw)\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/reprlib.rst:2
msgid ":mod:`!reprlib` --- Alternate :func:`repr` implementation"
msgstr ":mod:`!reprlib` --- :func:`repr` 的替代實作"

#: ../../library/reprlib.rst:9
msgid "**Source code:** :source:`Lib/reprlib.py`"
msgstr "**原始碼：**\\ :source:`Lib/reprlib.py`"

#: ../../library/reprlib.rst:13
msgid ""
"The :mod:`!reprlib` module provides a means for producing object "
"representations with limits on the size of the resulting strings. This is "
"used in the Python debugger and may be useful in other contexts as well."
msgstr ""

#: ../../library/reprlib.rst:17
msgid "This module provides a class, an instance, and a function:"
msgstr ""

#: ../../library/reprlib.rst:24
msgid ""
"Class which provides formatting services useful in implementing functions "
"similar to the built-in :func:`repr`; size limits for  different object "
"types are added to avoid the generation of representations which are "
"excessively long."
msgstr ""

#: ../../library/reprlib.rst:28
msgid ""
"The keyword arguments of the constructor can be used as a shortcut to set "
"the attributes of the :class:`Repr` instance. Which means that the following "
"initialization::"
msgstr ""

#: ../../library/reprlib.rst:34
msgid "Is equivalent to::"
msgstr ""

#: ../../library/reprlib.rst:39
msgid ""
"See section `Repr Objects`_ for more information about :class:`Repr` "
"attributes."
msgstr ""

#: ../../library/reprlib.rst:42
msgid "Allow attributes to be set via keyword arguments."
msgstr ""

#: ../../library/reprlib.rst:48
msgid ""
"This is an instance of :class:`Repr` which is used to provide the :func:`."
"repr` function described below.  Changing the attributes of this object will "
"affect the size limits used by :func:`.repr` and the Python debugger."
msgstr ""

#: ../../library/reprlib.rst:56
msgid ""
"This is the :meth:`~Repr.repr` method of ``aRepr``.  It returns a string "
"similar to that returned by the built-in function of the same name, but with "
"limits on most sizes."
msgstr ""

#: ../../library/reprlib.rst:60
msgid ""
"In addition to size-limiting tools, the module also provides a decorator for "
"detecting recursive calls to :meth:`~object.__repr__` and substituting a "
"placeholder string instead."
msgstr ""

#: ../../library/reprlib.rst:69
msgid ""
"Decorator for :meth:`~object.__repr__` methods to detect recursive calls "
"within the same thread.  If a recursive call is made, the *fillvalue* is "
"returned, otherwise, the usual :meth:`!__repr__` call is made.  For example:"
msgstr ""

#: ../../library/reprlib.rst:93
msgid "Repr Objects"
msgstr "Repr 物件"

#: ../../library/reprlib.rst:95
msgid ""
":class:`Repr` instances provide several attributes which can be used to "
"provide size limits for the representations of different object types,  and "
"methods which format specific object types."
msgstr ""

#: ../../library/reprlib.rst:102
msgid ""
"This string is displayed for recursive references. It defaults to ``...``."
msgstr ""

#: ../../library/reprlib.rst:110
msgid ""
"Depth limit on the creation of recursive representations.  The default is "
"``6``."
msgstr ""

#: ../../library/reprlib.rst:121
msgid ""
"Limits on the number of entries represented for the named object type.  The "
"default is ``4`` for :attr:`maxdict`, ``5`` for :attr:`maxarray`, and  ``6`` "
"for the others."
msgstr ""

#: ../../library/reprlib.rst:128
msgid ""
"Maximum number of characters in the representation for an integer.  Digits "
"are dropped from the middle.  The default is ``40``."
msgstr ""

#: ../../library/reprlib.rst:134
msgid ""
"Limit on the number of characters in the representation of the string.  Note "
"that the \"normal\" representation of the string is used as the character "
"source: if escape sequences are needed in the representation, these may be "
"mangled when the representation is shortened.  The default is ``30``."
msgstr ""

#: ../../library/reprlib.rst:142
msgid ""
"This limit is used to control the size of object types for which no specific "
"formatting method is available on the :class:`Repr` object. It is applied in "
"a similar manner as :attr:`maxstring`.  The default is ``20``."
msgstr ""

#: ../../library/reprlib.rst:149
msgid ""
"If this attribute is set to ``None`` (the default), the output is formatted "
"with no line breaks or indentation, like the standard :func:`repr`. For "
"example:"
msgstr ""

#: ../../library/reprlib.rst:162
msgid ""
"If :attr:`~Repr.indent` is set to a string, each recursion level is placed "
"on its own line, indented by that string:"
msgstr ""

#: ../../library/reprlib.rst:183
msgid ""
"Setting :attr:`~Repr.indent` to a positive integer value behaves as if it "
"was set to a string with that number of spaces:"
msgstr ""

#: ../../library/reprlib.rst:209
msgid ""
"The equivalent to the built-in :func:`repr` that uses the formatting imposed "
"by the instance."
msgstr ""

#: ../../library/reprlib.rst:215
msgid ""
"Recursive implementation used by :meth:`.repr`.  This uses the type of *obj* "
"to determine which formatting method to call, passing it *obj* and *level*.  "
"The type-specific methods should call :meth:`repr1` to perform recursive "
"formatting, with ``level - 1`` for the value of *level* in the recursive  "
"call."
msgstr ""

#: ../../library/reprlib.rst:224
msgid ""
"Formatting methods for specific types are implemented as methods with a name "
"based on the type name.  In the method name, **TYPE** is replaced by ``'_'."
"join(type(obj).__name__.split())``. Dispatch to these methods is handled by :"
"meth:`repr1`. Type-specific methods which need to recursively format a value "
"should call ``self.repr1(subobj, level - 1)``."
msgstr ""

#: ../../library/reprlib.rst:234
msgid "Subclassing Repr Objects"
msgstr ""

#: ../../library/reprlib.rst:236
msgid ""
"The use of dynamic dispatching by :meth:`Repr.repr1` allows subclasses of :"
"class:`Repr` to add support for additional built-in object types or to "
"modify the handling of types already supported. This example shows how "
"special support for file objects could be added:"
msgstr ""

#: ../../library/reprlib.rst:65
msgid "..."
msgstr "..."

#: ../../library/reprlib.rst:65
msgid "placeholder"
msgstr "placeholder（佔位符號）"
