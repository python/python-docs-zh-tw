# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2022, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
# Adrian Liaw <adrianliaw2000@gmail.com>, 2018
# Matt Wang <mattwang44@gmail.com>, 2021-2022
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-10-31 08:13+0000\n"
"PO-Revision-Date: 2022-06-12 15:17+0800\n"
"Last-Translator: Matt Wang <mattwang44@gmail.com>\n"
"Language-Team: Chinese - TAIWAN (https://github.com/python/python-docs-zh-"
"tw)\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Poedit 3.1\n"

#: ../../library/tempfile.rst:2
msgid ":mod:`tempfile` --- Generate temporary files and directories"
msgstr ":mod:`tempfile` --- 生成臨時檔案和目錄"

#: ../../library/tempfile.rst:9
msgid "**Source code:** :source:`Lib/tempfile.py`"
msgstr "**原始碼：**\\ :source:`Lib/tempfile.py`"

#: ../../library/tempfile.rst:17
msgid ""
"This module creates temporary files and directories.  It works on all "
"supported platforms. :class:`TemporaryFile`, :class:`NamedTemporaryFile`, :"
"class:`TemporaryDirectory`, and :class:`SpooledTemporaryFile` are high-level "
"interfaces which provide automatic cleanup and can be used as context "
"managers. :func:`mkstemp` and :func:`mkdtemp` are lower-level functions "
"which require manual cleanup."
msgstr ""
"該 module（模組）用於建立臨時檔案和目錄，它可以在所有有支援的平臺上使用。:"
"class:`TemporaryFile`、:class:`NamedTemporaryFile`、:class:"
"`TemporaryDirectory` 和 :class:`SpooledTemporaryFile` 是有自動清除功能的高階"
"介面，可作為情境管理器 (context manager) 使用。:func:`mkstemp` 和 :func:"
"`mkdtemp` 是低階函式，使用完畢後需手動清理。"

#: ../../library/tempfile.rst:24
msgid ""
"All the user-callable functions and constructors take additional arguments "
"which allow direct control over the location and name of temporary files and "
"directories. Files names used by this module include a string of random "
"characters which allows those files to be securely created in shared "
"temporary directories. To maintain backward compatibility, the argument "
"order is somewhat odd; it is recommended to use keyword arguments for "
"clarity."
msgstr ""
"所有可被使用者呼叫的函式和建構函式都帶有可以設定臨時檔案和臨時目錄的路徑和名"
"稱的引數。此 module 所使用的檔名為一個隨機字元組成的字串，這讓檔案可以更安全"
"地在共享的臨時目錄中被建立。為了維持向後相容性，引數的順序會稍微奇怪，所以為"
"了讓程式更容易被理解，建議使用關鍵字引數。"

#: ../../library/tempfile.rst:32
msgid "The module defines the following user-callable items:"
msgstr "這個 module 定義了以下可供使用者呼叫的項目："

#: ../../library/tempfile.rst:36
msgid ""
"Return a :term:`file-like object` that can be used as a temporary storage "
"area. The file is created securely, using the same rules as :func:`mkstemp`. "
"It will be destroyed as soon as it is closed (including an implicit close "
"when the object is garbage collected).  Under Unix, the directory entry for "
"the file is either not created at all or is removed immediately after the "
"file is created.  Other platforms do not support this; your code should not "
"rely on a temporary file created using this function having or not having a "
"visible name in the file system."
msgstr ""
"回傳一個可當作臨時儲存區域的 :term:`file-like object`。建立該檔案使用了與 :"
"func:`mkstemp` 相同的安全規則。它將在關閉（包括當物件被垃圾回收 (garbage "
"collect) 時的隱式關閉）後立即銷毀。在 Unix 下，該檔案所在的目錄可能根本不被建"
"立、或者在建立檔案後立即就被刪除，其他平臺不支援此功能；你的程式不應依賴使用"
"此功能建立的臨時檔案名稱，因為它在檔案系統中的名稱有可能是不可見的。"

#: ../../library/tempfile.rst:44
msgid ""
"The resulting object can be used as a context manager (see :ref:`tempfile-"
"examples`).  On completion of the context or destruction of the file object "
"the temporary file will be removed from the filesystem."
msgstr ""
"生成的物件可以作為情境管理器使用（參見 :ref:`tempfile-examples`）。完成情境或"
"銷毀臨時檔案物件後，臨時檔案將從檔案系統中刪除。"

#: ../../library/tempfile.rst:49
msgid ""
"The *mode* parameter defaults to ``'w+b'`` so that the file created can be "
"read and written without being closed.  Binary mode is used so that it "
"behaves consistently on all platforms without regard for the data that is "
"stored.  *buffering*, *encoding*, *errors* and *newline* are interpreted as "
"for :func:`open`."
msgstr ""
"*mode* 參數預設為 ``'w+b'``，所以建立的檔案不用關閉就可以讀取或寫入。因為用的"
"是二進位制模式，所以無論存的是什麼資料，它在所有平臺上的行為都一致。"
"*buffering*、*encoding*、*errors* 和 *newline* 的含義與 :func:`open` 中的相"
"同。"

#: ../../library/tempfile.rst:55
msgid ""
"The *dir*, *prefix* and *suffix* parameters have the same meaning and "
"defaults as with :func:`mkstemp`."
msgstr ""
"參數 *dir*、*prefix* 和 *suffix* 的含義和預設值都與它們在 :func:`mkstemp` 中"
"的相同。"

#: ../../library/tempfile.rst:58
msgid ""
"The returned object is a true file object on POSIX platforms.  On other "
"platforms, it is a file-like object whose :attr:`!file` attribute is the "
"underlying true file object."
msgstr ""
"在 POSIX 平臺上，回傳物件是真實的檔案物件。在其他平臺上，它是一個 file-like "
"object，它的 :attr:`!file` 屬性為底層的真實檔案物件。"

#: ../../library/tempfile.rst:62
msgid ""
"The :py:data:`os.O_TMPFILE` flag is used if it is available and works (Linux-"
"specific, requires Linux kernel 3.11 or later)."
msgstr ""
"如果可用且可運作，則使用 :py:data:`os.O_TMPFILE` 旗標（僅限於 Linux，需要 "
"3.11 版本以上的核心）。"

#: ../../library/tempfile.rst:65
msgid ""
"On platforms that are neither Posix nor Cygwin, TemporaryFile is an alias "
"for NamedTemporaryFile."
msgstr ""
"在不是 Posix 或 Cygwin 的平臺上，TemporaryFile 是 NamedTemporaryFile 的別名。"

#: ../../library/tempfile.rst:17 ../../library/tempfile.rst:33
#: ../../library/tempfile.rst:42
msgid ""
"Raises an :ref:`auditing event <auditing>` ``tempfile.mkstemp`` with "
"argument ``fullpath``."
msgstr ""
"引發一個附帶引數 ``fullpath`` 的 ``tempfile.mkstemp`` :ref:`稽核事件 "
"<auditing>`。"

#: ../../library/tempfile.rst:72
msgid "The :py:data:`os.O_TMPFILE` flag is now used if available."
msgstr "如果可用，自此開始使用 :py:data:`os.O_TMPFILE` 旗標。"

#: ../../library/tempfile.rst:74 ../../library/tempfile.rst:98
#: ../../library/tempfile.rst:123
msgid "Added *errors* parameter."
msgstr "新增 *errors* 參數。"

#: ../../library/tempfile.rst:80
msgid ""
"This function operates exactly as :func:`TemporaryFile` does, except that "
"the file is guaranteed to have a visible name in the file system (on Unix, "
"the directory entry is not unlinked).  That name can be retrieved from the :"
"attr:`name` attribute of the returned file-like object.  Whether the name "
"can be used to open the file a second time, while the named temporary file "
"is still open, varies across platforms (it can be so used on Unix; it cannot "
"on Windows).  If *delete* is true (the default), the file is deleted as soon "
"as it is closed. The returned object is always a file-like object whose :"
"attr:`!file` attribute is the underlying true file object. This file-like "
"object can be used in a :keyword:`with` statement, just like a normal file."
msgstr ""
"此函式執行的操作與 :func:`TemporaryFile` 幾乎相同，不同之處為確保該臨時檔案在"
"檔案系統中具有可見的名稱（在 Unix 上目錄條目不會被 unlink）。檔名可以由回傳 "
"file-like object 的 :attr:`name` 屬性取得。在臨時檔案仍開啟時，是否允許用檔名"
"第二次開啟檔案，在各個平臺上是不同的（在 Unix 上可以；在 Windows NT 版本以上"
"不行）。如果 *delete* 為 true（預設值），則檔案會在關閉後立即被刪除。該函式回"
"傳的物件始終是 file-like object，它的 :attr:`!file` 屬性是底層的真實檔案物"
"件。file-like object 可以像普通檔案一樣在 :keyword:`with` 陳述句中使用。"

#: ../../library/tempfile.rst:93
msgid ""
"On POSIX (only), a process that is terminated abruptly with SIGKILL cannot "
"automatically delete any NamedTemporaryFiles it created."
msgstr ""

#: ../../library/tempfile.rst:104
msgid ""
"This class operates exactly as :func:`TemporaryFile` does, except that data "
"is spooled in memory until the file size exceeds *max_size*, or until the "
"file's :func:`fileno` method is called, at which point the contents are "
"written to disk and operation proceeds as with :func:`TemporaryFile`."
msgstr ""
"此類別執行的操作與 :func:`TemporaryFile` 完全相同，但會將資料排存 (spool) 於"
"在記憶體中，直到檔案大小超過 *max_size*，或檔案的 :func:`fileno` 方法被呼叫為"
"止，此時資料會被寫入磁碟，並且之後的操作與 :func:`TemporaryFile` 相同。"

#: ../../library/tempfile.rst:110
msgid ""
"The resulting file has one additional method, :func:`rollover`, which causes "
"the file to roll over to an on-disk file regardless of its size."
msgstr ""
"生成的檔案物件有一個額外的方法 :func:`rollover`，忽略檔案大小並立即將其寫入磁"
"碟。"

#: ../../library/tempfile.rst:113
msgid ""
"The returned object is a file-like object whose :attr:`_file` attribute is "
"either an :class:`io.BytesIO` or :class:`io.TextIOWrapper` object (depending "
"on whether binary or text *mode* was specified) or a true file object, "
"depending on whether :func:`rollover` has been called.  This file-like "
"object can be used in a :keyword:`with` statement, just like a normal file."
msgstr ""
"回傳的物件是 file-like object，它的 :attr:`_file` 屬性是 :class:`io.BytesIO` "
"或 :class:`io.TextIOWrapper` 物件（取決於指定的是二進位制模式還是文字模式）或"
"真實的檔案物件（取決於是否已呼叫 :func:`rollover`）。file-like object 可以像"
"普通檔案一樣在 :keyword:`with` 陳述式中使用。"

#: ../../library/tempfile.rst:120
msgid "the truncate method now accepts a ``size`` argument."
msgstr "現在，檔案的截斷方法 (truncate method) 可接受一個 ``size`` 引數。"

#: ../../library/tempfile.rst:126
msgid ""
"Fully implements the :class:`io.BufferedIOBase` and :class:`io.TextIOBase` "
"abstract base classes (depending on whether binary or text *mode* was "
"specified)."
msgstr ""

#: ../../library/tempfile.rst:134
msgid ""
"This class securely creates a temporary directory using the same rules as :"
"func:`mkdtemp`. The resulting object can be used as a context manager (see :"
"ref:`tempfile-examples`).  On completion of the context or destruction of "
"the temporary directory object, the newly created temporary directory and "
"all its contents are removed from the filesystem."
msgstr ""
"此類別會使用與 :func:`mkdtemp` 相同安全規則來建立一個臨時目錄。回傳物件可當作"
"情境管理器使用（參見\\ :ref:`tempfile-examples`）。在完成情境或銷毀臨時目錄物"
"件時，新建立的臨時目錄及其所有內容會從檔案系統中被移除。"

#: ../../library/tempfile.rst:140
msgid ""
"The directory name can be retrieved from the :attr:`name` attribute of the "
"returned object.  When the returned object is used as a context manager, "
"the :attr:`name` will be assigned to the target of the :keyword:`!as` clause "
"in the :keyword:`with` statement, if there is one."
msgstr ""
"可以從回傳物件的 :attr:`name` 屬性中找到的臨時目錄名稱。當回傳的物件用作情境"
"管理器時，這個 :attr:`name` 會作為 :keyword:`with` 陳述句中 :keyword:`!as` 子"
"句的目標（如果有 as 的話）。"

#: ../../library/tempfile.rst:145
msgid ""
"The directory can be explicitly cleaned up by calling the :func:`cleanup` "
"method. If *ignore_cleanup_errors* is true, any unhandled exceptions during "
"explicit or implicit cleanup (such as a :exc:`PermissionError` removing open "
"files on Windows) will be ignored, and the remaining removable items deleted "
"on a \"best-effort\" basis. Otherwise, errors will be raised in whatever "
"context cleanup occurs (the :func:`cleanup` call, exiting the context "
"manager, when the object is garbage-collected or during interpreter "
"shutdown)."
msgstr ""
"此目錄可透過呼叫 :func:`cleanup` 方法來顯式地清理。如果 "
"*ignore_cleanup_errors* 為 true，則在顯式或隱式清理期間出現的未處理例外（例如"
"在 Windows 上移除開啟的檔案而引發的 :exc:`PermissionError`）將被忽略，並且剩"
"餘的可移除條目會「儘可能」地被刪除。在其他情況下，錯誤將在任何情境清理發生時"
"被引發（:func:`cleanup` 呼叫、退出情境管理器、物件被作為垃圾回收或直譯器關閉"
"等）。"

#: ../../library/tempfile.rst:13 ../../library/tempfile.rst:21
msgid ""
"Raises an :ref:`auditing event <auditing>` ``tempfile.mkdtemp`` with "
"argument ``fullpath``."
msgstr ""
"引發一個附帶引數 ``fullpath`` 的 ``tempfile.mkdtemp`` :ref:`稽核事件 "
"<auditing>`。"

#: ../../library/tempfile.rst:158
msgid "Added *ignore_cleanup_errors* parameter."
msgstr "新增 *ignore_cleanup_errors* 參數。"

#: ../../library/tempfile.rst:164
msgid ""
"Creates a temporary file in the most secure manner possible.  There are no "
"race conditions in the file's creation, assuming that the platform properly "
"implements the :const:`os.O_EXCL` flag for :func:`os.open`.  The file is "
"readable and writable only by the creating user ID.  If the platform uses "
"permission bits to indicate whether a file is executable, the file is "
"executable by no one.  The file descriptor is not inherited by child "
"processes."
msgstr ""
"盡可能以最安全的方式建立一個臨時檔案。假設所在平臺正確實作了 :func:`os.open` "
"的 :const:`os.O_EXCL` 旗標，則建立檔案時不會有 race condition（競爭條件）的情"
"況。該檔案只能由建立者讀寫，如果所在平臺用 permission bit（許可權位元）來表示"
"檔案是否可執行，則沒有人有執行權。檔案描述器不會被子行程繼承。"

#: ../../library/tempfile.rst:172
msgid ""
"Unlike :func:`TemporaryFile`, the user of :func:`mkstemp` is responsible for "
"deleting the temporary file when done with it."
msgstr ""
"與 :func:`TemporaryFile` 不同，:func:`mkstemp` 使用者用完臨時檔案後需要自行將"
"其刪除。"

#: ../../library/tempfile.rst:175
msgid ""
"If *suffix* is not ``None``, the file name will end with that suffix, "
"otherwise there will be no suffix.  :func:`mkstemp` does not put a dot "
"between the file name and the suffix; if you need one, put it at the "
"beginning of *suffix*."
msgstr ""
"如果 *suffix* 不是 ``None`` 則檔名將以該後綴結尾，若為 ``None`` 則沒有後綴。:"
"func:`mkstemp` 不會在檔名和後綴之間加點 (dot)，如果需要加一個點號，請將其放"
"在 *suffix* 的開頭。"

#: ../../library/tempfile.rst:180
msgid ""
"If *prefix* is not ``None``, the file name will begin with that prefix; "
"otherwise, a default prefix is used.  The default is the return value of :"
"func:`gettempprefix` or :func:`gettempprefixb`, as appropriate."
msgstr ""
"如果 *prefix* 不是 ``None`` 則檔名將以該字首開頭，若為 ``None`` 則使用預設前"
"綴。預設前綴是 :func:`gettempprefix` 或 :func:`gettempprefixb` 函式的回傳值"
"（自動呼叫合適的函式）。"

#: ../../library/tempfile.rst:184
msgid ""
"If *dir* is not ``None``, the file will be created in that directory; "
"otherwise, a default directory is used.  The default directory is chosen "
"from a platform-dependent list, but the user of the application can control "
"the directory location by setting the *TMPDIR*, *TEMP* or *TMP* environment "
"variables.  There is thus no guarantee that the generated filename will have "
"any nice properties, such as not requiring quoting when passed to external "
"commands via ``os.popen()``."
msgstr ""
"如果 *dir* 不為 ``None`` 則在指定的目錄建立檔案，若為 ``None`` 則使用預設目"
"錄。預設目錄是從一個相依於平臺的列表中選擇出來的，但是使用者可以設定 "
"*TMPDIR*、*TEMP* 或 *TMP* 環境變數來設定目錄的位置。因此，不能保證生成的臨時"
"檔案路徑是使用者友善的，比如透過 ``os.popen()`` 將路徑傳遞給外部命令時仍需要"
"加引號 (quoting)。"

#: ../../library/tempfile.rst:192
msgid ""
"If any of *suffix*, *prefix*, and *dir* are not ``None``, they must be the "
"same type. If they are bytes, the returned name will be bytes instead of "
"str. If you want to force a bytes return value with otherwise default "
"behavior, pass ``suffix=b''``."
msgstr ""
"如果 *suffix*、*prefix* 和 *dir* 中的任何一個不是 ``None``，就要保證它們資料"
"型別相同。如果它們是位元組串，則回傳名稱的型別就是位元組串而非字串。如果不想"
"遵循預設行為但又想要回傳值是位元組串型別，請傳入 ``suffix=b''``。"

#: ../../library/tempfile.rst:198
msgid ""
"If *text* is specified and true, the file is opened in text mode. Otherwise, "
"(the default) the file is opened in binary mode."
msgstr ""
"如果指定了 *text* 且為真值，檔案會以文字模式開啟。否則，檔案（預設）以二進位"
"制模式開啟。"

#: ../../library/tempfile.rst:201
msgid ""
":func:`mkstemp` returns a tuple containing an OS-level handle to an open "
"file (as would be returned by :func:`os.open`) and the absolute pathname of "
"that file, in that order."
msgstr ""
":func:`mkstemp` 回傳一個 tuple，tuple 中，第一個元素是一個作業系統層級 (OS-"
"level) 控制代碼，指向一個開啟的檔案（如同 :func:`os.open` 的回傳值），第二元"
"素是該檔案的絕對路徑。"

#: ../../library/tempfile.rst:207 ../../library/tempfile.rst:233
msgid ""
"*suffix*, *prefix*, and *dir* may now be supplied in bytes in order to "
"obtain a bytes return value.  Prior to this, only str was allowed. *suffix* "
"and *prefix* now accept and default to ``None`` to cause an appropriate "
"default value to be used."
msgstr ""
"現在，*suffix*、*prefix* 和 *dir* 可以以位元組串型別按順序提供，以獲得位元組"
"串型別的回傳值。在之前只允許使用字串。*suffix* 和 *prefix* 現在可以接受 "
"``None``，並且預設為 ``None`` 以使用合適的預設值。"

#: ../../library/tempfile.rst:213 ../../library/tempfile.rst:239
msgid "The *dir* parameter now accepts a :term:`path-like object`."
msgstr "*dir* 參數現在可接受一個類路徑物件 (:term:`path-like object`)。"

#: ../../library/tempfile.rst:219
msgid ""
"Creates a temporary directory in the most secure manner possible. There are "
"no race conditions in the directory's creation.  The directory is readable, "
"writable, and searchable only by the creating user ID."
msgstr ""
"盡可能以最安全的方式建立一個臨時目錄，建立該目錄時不會有 race condition 的情"
"況，該目錄只能由建立者讀取、寫入和搜尋。"

#: ../../library/tempfile.rst:223
msgid ""
"The user of :func:`mkdtemp` is responsible for deleting the temporary "
"directory and its contents when done with it."
msgstr ":func:`mkdtemp` 的使用者用完臨時目錄後需要自行將其刪除。"

#: ../../library/tempfile.rst:226
msgid ""
"The *prefix*, *suffix*, and *dir* arguments are the same as for :func:"
"`mkstemp`."
msgstr ""
"引數 *prefix*、*suffix* 和 *dir* 的含義與它們在 :func:`mkstemp` 中相同。"

#: ../../library/tempfile.rst:229
msgid ":func:`mkdtemp` returns the absolute pathname of the new directory."
msgstr ":func:`mkdtemp` 回傳新目錄的絕對路徑。"

#: ../../library/tempfile.rst:245
msgid ""
"Return the name of the directory used for temporary files. This defines the "
"default value for the *dir* argument to all functions in this module."
msgstr ""
"回傳儲存臨時檔案的目錄名稱。這設定了此 module 所有函式 *dir* 引數的預設值。"

#: ../../library/tempfile.rst:249
msgid ""
"Python searches a standard list of directories to find one which the calling "
"user can create files in.  The list is:"
msgstr ""
"Python 搜尋標準目錄列表來找到呼叫者可以在其中建立檔案的目錄。這個列表是："

#: ../../library/tempfile.rst:252
msgid "The directory named by the :envvar:`TMPDIR` environment variable."
msgstr ":envvar:`TMPDIR` 環境變數指向的目錄。"

#: ../../library/tempfile.rst:254
msgid "The directory named by the :envvar:`TEMP` environment variable."
msgstr ":envvar:`TEMP` 環境變數指向的目錄。"

#: ../../library/tempfile.rst:256
msgid "The directory named by the :envvar:`TMP` environment variable."
msgstr ":envvar:`TMP` 環境變數指向的目錄。"

#: ../../library/tempfile.rst:258
msgid "A platform-specific location:"
msgstr "與平臺相關的位置："

#: ../../library/tempfile.rst:260
msgid ""
"On Windows, the directories :file:`C:\\\\TEMP`, :file:`C:\\\\TMP`, :file:`\\"
"\\TEMP`, and :file:`\\\\TMP`, in that order."
msgstr ""
"在 Windows 上，目錄依次為 :file:`C:\\\\TEMP`、:file:`C:\\\\TMP`、:file:`\\"
"\\TEMP` 和 :file:`\\\\TMP`。"

#: ../../library/tempfile.rst:263
msgid ""
"On all other platforms, the directories :file:`/tmp`, :file:`/var/tmp`, and :"
"file:`/usr/tmp`, in that order."
msgstr ""
"在所有其他平臺上，目錄依次為 :file:`/tmp`、:file:`/var/tmp` 和 :file:`/usr/"
"tmp`。"

#: ../../library/tempfile.rst:266
msgid "As a last resort, the current working directory."
msgstr "不得已時，使用當前工作目錄。"

#: ../../library/tempfile.rst:268
msgid ""
"The result of this search is cached, see the description of :data:`tempdir` "
"below."
msgstr "搜尋的結果會被 cache（快取）起來，請見下面 :data:`tempdir` 的描述。"

#: ../../library/tempfile.rst:273
msgid ""
"Always returns a str.  Previously it would return any :data:`tempdir` value "
"regardless of type so long as it was not ``None``."
msgstr ""
"回傳一個字串。在之前的版本中它會回傳任意 :data:`tempdir` 的值而不考慮它的型"
"別，只要它不為 ``None``。"

#: ../../library/tempfile.rst:278
msgid "Same as :func:`gettempdir` but the return value is in bytes."
msgstr "與 :func:`gettempdir` 相同，但回傳值為位元組串型別。"

#: ../../library/tempfile.rst:284
msgid ""
"Return the filename prefix used to create temporary files.  This does not "
"contain the directory component."
msgstr "回傳用於建立臨時檔案的檔名前綴，它不包含目錄部分。"

#: ../../library/tempfile.rst:289
msgid "Same as :func:`gettempprefix` but the return value is in bytes."
msgstr "與 :func:`gettempprefix` 相同，但回傳值為位元組串型別。"

#: ../../library/tempfile.rst:293
msgid ""
"The module uses a global variable to store the name of the directory used "
"for temporary files returned by :func:`gettempdir`.  It can be set directly "
"to override the selection process, but this is discouraged. All functions in "
"this module take a *dir* argument which can be used to specify the "
"directory. This is the recommended approach that does not surprise other "
"unsuspecting code by changing global API behavior."
msgstr ""
"此 module 使用一個全域性變數來儲存由 :func:`gettempdir` 回傳的臨時檔案使用的"
"目錄路徑。它可被直接設定以覆蓋選擇過程，但不建議這樣做。此 module 中的所有函"
"式都接受一個 *dir* 引數，它可被用於指定目錄。這是個推薦的做法，它不會透過改變"
"全域性 API 行為而對其他不預期此行為的程式造成影響。"

#: ../../library/tempfile.rst:302
msgid ""
"When set to a value other than ``None``, this variable defines the default "
"value for the *dir* argument to the functions defined in this module, "
"including its type, bytes or str.  It cannot be a :term:`path-like object`."
msgstr ""
"當被設為 ``None`` 以外的值時，此變數會為此 module 所定義函式的引數 *dir* 定義"
"預設值，包括確定其型別為位元組串還是字串。它不可以為 :term:`path-like "
"object`。"

#: ../../library/tempfile.rst:307
msgid ""
"If ``tempdir`` is ``None`` (the default) at any call to any of the above "
"functions except :func:`gettempprefix` it is initialized following the "
"algorithm described in :func:`gettempdir`."
msgstr ""
"如果在呼叫除 :func:`gettempprefix` 外的上述任何函式時 ``tempdir`` 為 "
"``None`` (預設值) 則它會按照 :func:`gettempdir` 中所描述的演算法來初始化。"

#: ../../library/tempfile.rst:313
msgid ""
"Beware that if you set ``tempdir`` to a bytes value, there is a nasty side "
"effect: The global default return type of :func:`mkstemp` and :func:"
"`mkdtemp` changes to bytes when no explicit ``prefix``, ``suffix``, or "
"``dir`` arguments of type str are supplied. Please do not write code "
"expecting or depending on this. This awkward behavior is maintained for "
"compatibility with the historical implementation."
msgstr ""
"請注意如果你將 ``tempdir`` 設為位元組串值，會有一個麻煩的副作用：:func:"
"`mkstemp` 和 :func:`mkdtemp` 的全域性預設回傳型別會在沒有提供明顯字串型別的 "
"``prefix``、``suffix`` 或 ``dir`` 時被改為位元組串。請不要編寫預期此行為或依"
"賴於此行為的程式。這個奇怪的行為是為了維持與以往實作版本的相容性。"

#: ../../library/tempfile.rst:324
msgid "Examples"
msgstr "範例"

#: ../../library/tempfile.rst:326
msgid "Here are some examples of typical usage of the :mod:`tempfile` module::"
msgstr ""
"以下是 :mod:`tempfile` module 的一些常見用法範例：\n"
"\n"
"::"

#: ../../library/tempfile.rst:358
msgid "Deprecated functions and variables"
msgstr "已棄用的函式和變數"

#: ../../library/tempfile.rst:360
msgid ""
"A historical way to create temporary files was to first generate a file name "
"with the :func:`mktemp` function and then create a file using this name. "
"Unfortunately this is not secure, because a different process may create a "
"file with this name in the time between the call to :func:`mktemp` and the "
"subsequent attempt to create the file by the first process. The solution is "
"to combine the two steps and create the file immediately. This approach is "
"used by :func:`mkstemp` and the other functions described above."
msgstr ""
"在過去，建立臨時檔案首先使用 :func:`mktemp` 函式生成一個檔名，然後使用該檔名"
"建立檔案。不幸的是這並不安全的，因為在呼叫 :func:`mktemp` 與隨後嘗試建立檔案"
"之間的時間裡，其他程式可能會使用該名稱建立檔案。解決方案是將兩個步驟結合起"
"來，並立即建立檔案。這個方案目前被 :func:`mkstemp` 和上述其他函式所採用。"

#: ../../library/tempfile.rst:371
msgid "Use :func:`mkstemp` instead."
msgstr "使用 :func:`mkstemp` 代替。"

#: ../../library/tempfile.rst:374
msgid ""
"Return an absolute pathname of a file that did not exist at the time the "
"call is made.  The *prefix*, *suffix*, and *dir* arguments are similar to "
"those of :func:`mkstemp`, except that bytes file names, ``suffix=None`` and "
"``prefix=None`` are not supported."
msgstr ""
"回傳一個在呼叫本方法時不存在檔案的絕對路徑。引數 *prefix*、*suffix* 和 *dir* "
"與 :func:`mkstemp` 中所用的類似，除了在於不支援位元組串型別的檔名且不支援 "
"``suffix=None`` 和 ``prefix=None``。"

#: ../../library/tempfile.rst:381
msgid ""
"Use of this function may introduce a security hole in your program.  By the "
"time you get around to doing anything with the file name it returns, someone "
"else may have beaten you to the punch.  :func:`mktemp` usage can be replaced "
"easily with :func:`NamedTemporaryFile`, passing it the ``delete=False`` "
"parameter::"
msgstr ""
"使用此功能可能會在程式中引入安全漏洞。當你開始使用本方法回傳的檔案執行任何操"
"作時，可能有人已經捷足先登了。:func:`mktemp` 的功能可以很輕鬆地用帶有 "
"``delete=False`` 參數的 :func:`NamedTemporaryFile` 代替：\n"
"\n"
"::"
