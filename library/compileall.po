# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2022, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-02-13 00:17+0000\n"
"PO-Revision-Date: 2018-05-23 14:41+0000\n"
"Last-Translator: Adrian Liaw <adrianliaw2000@gmail.com>\n"
"Language-Team: Chinese - TAIWAN (https://github.com/python/python-docs-zh-"
"tw)\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/compileall.rst:2
msgid ":mod:`compileall` --- Byte-compile Python libraries"
msgstr ""

#: ../../library/compileall.rst:7
msgid "**Source code:** :source:`Lib/compileall.py`"
msgstr "**原始碼：**\\ :source:`Lib/compileall.py`"

#: ../../library/compileall.rst:11
msgid ""
"This module provides some utility functions to support installing Python "
"libraries.  These functions compile Python source files in a directory tree. "
"This module can be used to create the cached byte-code files at library "
"installation time, which makes them available for use even by users who "
"don't have write permission to the library directories."
msgstr ""

#: ../../includes/wasm-notavail.rst:3
msgid ":ref:`Availability <availability>`: not Emscripten, not WASI."
msgstr ""

#: ../../includes/wasm-notavail.rst:5
msgid ""
"This module does not work or is not available on WebAssembly platforms "
"``wasm32-emscripten`` and ``wasm32-wasi``. See :ref:`wasm-availability` for "
"more information."
msgstr ""

#: ../../library/compileall.rst:20
msgid "Command-line use"
msgstr ""

#: ../../library/compileall.rst:22
msgid ""
"This module can work as a script (using :program:`python -m compileall`) to "
"compile Python sources."
msgstr ""

#: ../../library/compileall.rst:30
msgid ""
"Positional arguments are files to compile or directories that contain source "
"files, traversed recursively.  If no argument is given, behave as if the "
"command line was ``-l <directories from sys.path>``."
msgstr ""

#: ../../library/compileall.rst:36
msgid ""
"Do not recurse into subdirectories, only compile source code files directly "
"contained in the named or implied directories."
msgstr ""

#: ../../library/compileall.rst:41
msgid "Force rebuild even if timestamps are up-to-date."
msgstr ""

#: ../../library/compileall.rst:45
msgid ""
"Do not print the list of files compiled. If passed once, error messages will "
"still be printed. If passed twice (``-qq``), all output is suppressed."
msgstr ""

#: ../../library/compileall.rst:50
msgid ""
"Directory prepended to the path to each file being compiled.  This will "
"appear in compilation time tracebacks, and is also compiled in to the byte-"
"code file, where it will be used in tracebacks and other messages in cases "
"where the source file does not exist at the time the byte-code file is "
"executed."
msgstr ""

#: ../../library/compileall.rst:59
msgid ""
"Remove (``-s``) or append (``-p``) the given prefix of paths recorded in the "
"``.pyc`` files. Cannot be combined with ``-d``."
msgstr ""

#: ../../library/compileall.rst:65
msgid ""
"regex is used to search the full path to each file considered for "
"compilation, and if the regex produces a match, the file is skipped."
msgstr ""

#: ../../library/compileall.rst:70
msgid ""
"Read the file ``list`` and add each line that it contains to the list of "
"files and directories to compile.  If ``list`` is ``-``, read lines from "
"``stdin``."
msgstr ""

#: ../../library/compileall.rst:76
msgid ""
"Write the byte-code files to their legacy locations and names, which may "
"overwrite byte-code files created by another version of Python.  The default "
"is to write files to their :pep:`3147` locations and names, which allows "
"byte-code files from multiple versions of Python to coexist."
msgstr ""

#: ../../library/compileall.rst:83
msgid ""
"Control the maximum recursion level for subdirectories. If this is given, "
"then ``-l`` option will not be taken into account. :program:`python -m "
"compileall <directory> -r 0` is equivalent to :program:`python -m compileall "
"<directory> -l`."
msgstr ""

#: ../../library/compileall.rst:90
msgid ""
"Use *N* workers to compile the files within the given directory. If ``0`` is "
"used, then the result of :func:`os.cpu_count()` will be used."
msgstr ""

#: ../../library/compileall.rst:96
msgid ""
"Control how the generated byte-code files are invalidated at runtime. The "
"``timestamp`` value, means that ``.pyc`` files with the source timestamp and "
"size embedded will be generated. The ``checked-hash`` and ``unchecked-hash`` "
"values cause hash-based pycs to be generated. Hash-based pycs embed a hash "
"of the source file contents rather than a timestamp. See :ref:`pyc-"
"invalidation` for more information on how Python validates bytecode cache "
"files at runtime. The default is ``timestamp`` if the :envvar:"
"`SOURCE_DATE_EPOCH` environment variable is not set, and ``checked-hash`` if "
"the ``SOURCE_DATE_EPOCH`` environment variable is set."
msgstr ""

#: ../../library/compileall.rst:109
msgid ""
"Compile with the given optimization level. May be used multiple times to "
"compile for multiple levels at a time (for example, ``compileall -o 1 -o "
"2``)."
msgstr ""

#: ../../library/compileall.rst:115
msgid "Ignore symlinks pointing outside the given directory."
msgstr ""

#: ../../library/compileall.rst:119
msgid ""
"If two ``.pyc`` files with different optimization level have the same "
"content, use hard links to consolidate duplicate files."
msgstr ""

#: ../../library/compileall.rst:122
msgid "Added the ``-i``, ``-b`` and ``-h`` options."
msgstr "新增選項 ``-i``\\ 、\\ ``-b`` 與 ``-h``\\ 。"

#: ../../library/compileall.rst:125
msgid ""
"Added the  ``-j``, ``-r``, and ``-qq`` options.  ``-q`` option was changed "
"to a multilevel value.  ``-b`` will always produce a byte-code file ending "
"in ``.pyc``, never ``.pyo``."
msgstr ""

#: ../../library/compileall.rst:130
msgid "Added the ``--invalidation-mode`` option."
msgstr "新增選項 ``--invalidation-mode``\\ 。"

#: ../../library/compileall.rst:133
msgid ""
"Added the ``-s``, ``-p``, ``-e`` and ``--hardlink-dupes`` options. Raised "
"the default recursion limit from 10 to :py:func:`sys.getrecursionlimit()`. "
"Added the possibility to specify the ``-o`` option multiple times."
msgstr ""

#: ../../library/compileall.rst:140
msgid ""
"There is no command-line option to control the optimization level used by "
"the :func:`compile` function, because the Python interpreter itself already "
"provides the option: :program:`python -O -m compileall`."
msgstr ""

#: ../../library/compileall.rst:144
msgid ""
"Similarly, the :func:`compile` function respects the :attr:`sys."
"pycache_prefix` setting. The generated bytecode cache will only be useful "
"if :func:`compile` is run with the same :attr:`sys.pycache_prefix` (if any) "
"that will be used at runtime."
msgstr ""

#: ../../library/compileall.rst:150
msgid "Public functions"
msgstr ""

#: ../../library/compileall.rst:154
msgid ""
"Recursively descend the directory tree named by *dir*, compiling all :file:`."
"py` files along the way. Return a true value if all the files compiled "
"successfully, and a false value otherwise."
msgstr ""

#: ../../library/compileall.rst:158
msgid ""
"The *maxlevels* parameter is used to limit the depth of the recursion; it "
"defaults to ``sys.getrecursionlimit()``."
msgstr ""

#: ../../library/compileall.rst:161
msgid ""
"If *ddir* is given, it is prepended to the path to each file being compiled "
"for use in compilation time tracebacks, and is also compiled in to the byte-"
"code file, where it will be used in tracebacks and other messages in cases "
"where the source file does not exist at the time the byte-code file is "
"executed."
msgstr ""

#: ../../library/compileall.rst:167
msgid ""
"If *force* is true, modules are re-compiled even if the timestamps are up to "
"date."
msgstr ""

#: ../../library/compileall.rst:170
msgid ""
"If *rx* is given, its ``search`` method is called on the complete path to "
"each file considered for compilation, and if it returns a true value, the "
"file is skipped. This can be used to exclude files matching a regular "
"expression, given as a :ref:`re.Pattern <re-objects>` object."
msgstr ""

#: ../../library/compileall.rst:175 ../../library/compileall.rst:252
msgid ""
"If *quiet* is ``False`` or ``0`` (the default), the filenames and other "
"information are printed to standard out. Set to ``1``, only errors are "
"printed. Set to ``2``, all output is suppressed."
msgstr ""

#: ../../library/compileall.rst:179 ../../library/compileall.rst:256
msgid ""
"If *legacy* is true, byte-code files are written to their legacy locations "
"and names, which may overwrite byte-code files created by another version of "
"Python.  The default is to write files to their :pep:`3147` locations and "
"names, which allows byte-code files from multiple versions of Python to "
"coexist."
msgstr ""

#: ../../library/compileall.rst:185 ../../library/compileall.rst:262
msgid ""
"*optimize* specifies the optimization level for the compiler.  It is passed "
"to the built-in :func:`compile` function. Accepts also a sequence of "
"optimization levels which lead to multiple compilations of one :file:`.py` "
"file in one call."
msgstr ""

#: ../../library/compileall.rst:189
msgid ""
"The argument *workers* specifies how many workers are used to compile files "
"in parallel. The default is to not use multiple workers. If the platform "
"can't use multiple workers and *workers* argument is given, then sequential "
"compilation will be used as a fallback.  If *workers* is 0, the number of "
"cores in the system is used.  If *workers* is lower than ``0``, a :exc:"
"`ValueError` will be raised."
msgstr ""

#: ../../library/compileall.rst:196 ../../library/compileall.rst:266
msgid ""
"*invalidation_mode* should be a member of the :class:`py_compile."
"PycInvalidationMode` enum and controls how the generated pycs are "
"invalidated at runtime."
msgstr ""

#: ../../library/compileall.rst:200 ../../library/compileall.rst:270
msgid ""
"The *stripdir*, *prependdir* and *limit_sl_dest* arguments correspond to the "
"``-s``, ``-p`` and ``-e`` options described above. They may be specified as "
"``str`` or :py:class:`os.PathLike`."
msgstr ""

#: ../../library/compileall.rst:204 ../../library/compileall.rst:274
msgid ""
"If *hardlink_dupes* is true and two ``.pyc`` files with different "
"optimization level have the same content, use hard links to consolidate "
"duplicate files."
msgstr ""

#: ../../library/compileall.rst:207 ../../library/compileall.rst:305
msgid "Added the *legacy* and *optimize* parameter."
msgstr "新增 *legacy* 與 *optimize* 參數。"

#: ../../library/compileall.rst:210
msgid "Added the *workers* parameter."
msgstr "新增 *workers* 參數。"

#: ../../library/compileall.rst:213 ../../library/compileall.rst:279
#: ../../library/compileall.rst:308
msgid "*quiet* parameter was changed to a multilevel value."
msgstr ""

#: ../../library/compileall.rst:216 ../../library/compileall.rst:282
#: ../../library/compileall.rst:311
msgid ""
"The *legacy* parameter only writes out ``.pyc`` files, not ``.pyo`` files no "
"matter what the value of *optimize* is."
msgstr ""

#: ../../library/compileall.rst:220
msgid "Accepts a :term:`path-like object`."
msgstr ""

#: ../../library/compileall.rst:223 ../../library/compileall.rst:286
#: ../../library/compileall.rst:315
msgid "The *invalidation_mode* parameter was added."
msgstr "新增 *invalidation_mode* 參數。"

#: ../../library/compileall.rst:226 ../../library/compileall.rst:289
#: ../../library/compileall.rst:318
msgid "The *invalidation_mode* parameter's default value is updated to None."
msgstr ""

#: ../../library/compileall.rst:229
msgid "Setting *workers* to 0 now chooses the optimal number of cores."
msgstr ""

#: ../../library/compileall.rst:232
msgid ""
"Added *stripdir*, *prependdir*, *limit_sl_dest* and *hardlink_dupes* "
"arguments. Default value of *maxlevels* was changed from ``10`` to ``sys."
"getrecursionlimit()``"
msgstr ""

#: ../../library/compileall.rst:238
msgid ""
"Compile the file with path *fullname*. Return a true value if the file "
"compiled successfully, and a false value otherwise."
msgstr ""

#: ../../library/compileall.rst:241
msgid ""
"If *ddir* is given, it is prepended to the path to the file being compiled "
"for use in compilation time tracebacks, and is also compiled in to the byte-"
"code file, where it will be used in tracebacks and other messages in cases "
"where the source file does not exist at the time the byte-code file is "
"executed."
msgstr ""

#: ../../library/compileall.rst:247
msgid ""
"If *rx* is given, its ``search`` method is passed the full path name to the "
"file being compiled, and if it returns a true value, the file is not "
"compiled and ``True`` is returned. This can be used to exclude files "
"matching a regular expression, given as a :ref:`re.Pattern <re-objects>` "
"object."
msgstr ""

#: ../../library/compileall.rst:292
msgid ""
"Added *stripdir*, *prependdir*, *limit_sl_dest* and *hardlink_dupes* "
"arguments."
msgstr ""

#: ../../library/compileall.rst:297
msgid ""
"Byte-compile all the :file:`.py` files found along ``sys.path``. Return a "
"true value if all the files compiled successfully, and a false value "
"otherwise."
msgstr ""

#: ../../library/compileall.rst:300
msgid ""
"If *skip_curdir* is true (the default), the current directory is not "
"included in the search.  All other parameters are passed to the :func:"
"`compile_dir` function.  Note that unlike the other compile functions, "
"``maxlevels`` defaults to ``0``."
msgstr ""

#: ../../library/compileall.rst:321
msgid ""
"To force a recompile of all the :file:`.py` files in the :file:`Lib/` "
"subdirectory and all its subdirectories::"
msgstr ""

#: ../../library/compileall.rst:338
msgid "Module :mod:`py_compile`"
msgstr ":mod:`py_compile` 模組"

#: ../../library/compileall.rst:339
msgid "Byte-compile a single source file."
msgstr ""
