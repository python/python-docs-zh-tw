# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2022, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
# Liang-Bo Wang <me@liang2.tw>, 2016
# 周 忠毅 <rilakcrc35@gmail.com>, 2016
# Adrian Liaw <adrianliaw2000@gmail.com>, 2018
# Benson Chen <bc842017@gmail.com>, 2021
msgid ""
msgstr ""
"Project-Id-Version: Python 3.12\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-05-09 00:03+0000\n"
"PO-Revision-Date: 2021-11-23 18:40+0800\n"
"Last-Translator: Benson Chen <bc842017@gmail.com>\n"
"Language-Team: Chinese - TAIWAN (https://github.com/python/python-docs-zh-"
"tw)\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Poedit 3.0\n"

#: ../../library/array.rst:2
msgid ":mod:`!array` --- Efficient arrays of numeric values"
msgstr ":mod:`!array` --- 高效率的數值型陣列"

#: ../../library/array.rst:11
msgid ""
"This module defines an object type which can compactly represent an array of "
"basic values: characters, integers, floating point numbers.  Arrays are "
"sequence types and behave very much like lists, except that the type of "
"objects stored in them is constrained.  The type is specified at object "
"creation time by using a :dfn:`type code`, which is a single character.  The "
"following type codes are defined:"
msgstr ""
"這個模組定義了一個物件型別，可以簡潔的表達一個包含基本數值的陣列：字元、整"
"數、浮點數。陣列是一個非常類似 list（串列）的序列型別，除了陣列會限制儲存的物"
"件型別。在建立陣列時可以使用一個字元的 :dfn:`type code` 來指定儲存的資料型"
"別。以下為有被定義的 type codes："

#: ../../library/array.rst:19
msgid "Type code"
msgstr "Type code"

#: ../../library/array.rst:19
msgid "C Type"
msgstr "C Type"

#: ../../library/array.rst:19
msgid "Python Type"
msgstr "Python Type"

#: ../../library/array.rst:19
msgid "Minimum size in bytes"
msgstr "所需的最小位元組 (bytes)"

#: ../../library/array.rst:19
msgid "Notes"
msgstr "註解"

#: ../../library/array.rst:21
msgid "``'b'``"
msgstr "``'b'``"

#: ../../library/array.rst:21
msgid "signed char"
msgstr "signed char"

#: ../../library/array.rst:21 ../../library/array.rst:23
#: ../../library/array.rst:27 ../../library/array.rst:29
#: ../../library/array.rst:31 ../../library/array.rst:33
#: ../../library/array.rst:35 ../../library/array.rst:37
#: ../../library/array.rst:39 ../../library/array.rst:41
msgid "int"
msgstr "int"

#: ../../library/array.rst:21 ../../library/array.rst:23
msgid "1"
msgstr "1"

#: ../../library/array.rst:23
msgid "``'B'``"
msgstr "``'B'``"

#: ../../library/array.rst:23
msgid "unsigned char"
msgstr "unsigned char"

#: ../../library/array.rst:25
msgid "``'u'``"
msgstr "``'u'``"

#: ../../library/array.rst:25
msgid "wchar_t"
msgstr "wchar_t"

#: ../../library/array.rst:25
msgid "Unicode character"
msgstr "Unicode character"

#: ../../library/array.rst:25 ../../library/array.rst:27
#: ../../library/array.rst:29 ../../library/array.rst:31
#: ../../library/array.rst:33
msgid "2"
msgstr "2"

#: ../../library/array.rst:25
msgid "\\(1)"
msgstr "\\(1)"

#: ../../library/array.rst:27
msgid "``'h'``"
msgstr "``'h'``"

#: ../../library/array.rst:27
msgid "signed short"
msgstr "signed short"

#: ../../library/array.rst:29
msgid "``'H'``"
msgstr "``'H'``"

#: ../../library/array.rst:29
msgid "unsigned short"
msgstr "unsigned short"

#: ../../library/array.rst:31
msgid "``'i'``"
msgstr "``'i'``"

#: ../../library/array.rst:31
msgid "signed int"
msgstr "signed int"

#: ../../library/array.rst:33
msgid "``'I'``"
msgstr "``'I'``"

#: ../../library/array.rst:33
msgid "unsigned int"
msgstr "unsigned int"

#: ../../library/array.rst:35
msgid "``'l'``"
msgstr "``'l'``"

#: ../../library/array.rst:35
msgid "signed long"
msgstr "signed long"

#: ../../library/array.rst:35 ../../library/array.rst:37
#: ../../library/array.rst:43
msgid "4"
msgstr "4"

#: ../../library/array.rst:37
msgid "``'L'``"
msgstr "``'L'``"

#: ../../library/array.rst:37
msgid "unsigned long"
msgstr "unsigned long"

#: ../../library/array.rst:39
msgid "``'q'``"
msgstr "``'q'``"

#: ../../library/array.rst:39
msgid "signed long long"
msgstr "signed long long"

#: ../../library/array.rst:39 ../../library/array.rst:41
#: ../../library/array.rst:45
msgid "8"
msgstr "8"

#: ../../library/array.rst:41
msgid "``'Q'``"
msgstr "``'Q'``"

#: ../../library/array.rst:41
msgid "unsigned long long"
msgstr "unsigned long long"

#: ../../library/array.rst:43
msgid "``'f'``"
msgstr "``'f'``"

#: ../../library/array.rst:43 ../../library/array.rst:45
msgid "float"
msgstr "float"

#: ../../library/array.rst:45
msgid "``'d'``"
msgstr "``'d'``"

#: ../../library/array.rst:45
msgid "double"
msgstr "double"

#: ../../library/array.rst:48
msgid "Notes:"
msgstr "註解："

#: ../../library/array.rst:51
msgid "It can be 16 bits or 32 bits depending on the platform."
msgstr "根據平台的不同，它有可能是 16 位元或者 32 位元。"

#: ../../library/array.rst:53
msgid ""
"``array('u')`` now uses :c:type:`wchar_t` as C type instead of deprecated "
"``Py_UNICODE``. This change doesn't affect its behavior because "
"``Py_UNICODE`` is alias of :c:type:`wchar_t` since Python 3.3."
msgstr ""
"目前 ``array('u')`` 使用 :c:type:`wchar_t` 取代已棄用的 ``Py_UNICODE`` 作為 "
"C type。這個異動並沒有影響到它的作用，因爲自從 Python 3.3 開始 "
"``Py_UNICODE`` 即為 :c:type:`wchar_t` 的別名。"

#: ../../library/array.rst:61
msgid ""
"The actual representation of values is determined by the machine "
"architecture (strictly speaking, by the C implementation).  The actual size "
"can be accessed through the :attr:`array.itemsize` attribute."
msgstr ""
"實際上數值的表示方法是被機器的架構所決定（更精準地說，被 C 的實作方法決定）。"
"實際的大小可以透過 :attr:`array.itemsize` 屬性存取。"

#: ../../library/array.rst:65
msgid "The module defines the following item:"
msgstr "這個模組定義了以下項目："

#: ../../library/array.rst:70
msgid "A string with all available type codes."
msgstr "一個包含所有可用的 type codes 的字串。"

#: ../../library/array.rst:73
msgid "The module defines the following type:"
msgstr "這個模組定義了下方的型別："

#: ../../library/array.rst:78
msgid ""
"A new array whose items are restricted by *typecode*, and initialized from "
"the optional *initializer* value, which must be a :class:`bytes` or :class:"
"`bytearray` object, a Unicode string, or iterable over elements of the "
"appropriate type."
msgstr ""
"一個新的陣列中的元素被 *typecode* 限制，並由選用的 *initializer* 參數初始化，"
"*initializer* 必須是一個 :class:`bytes` 或 :class:`bytearray` 物件、一個 "
"Unicode 字串或包含適當型別元素的可疊代物件 (iterable)。"

#: ../../library/array.rst:83
msgid ""
"If given a :class:`bytes` or :class:`bytearray` object, the initializer is "
"passed to the new array's :meth:`frombytes` method; if given a Unicode "
"string, the initializer is passed to the :meth:`fromunicode` method; "
"otherwise, the initializer's iterator is passed to the :meth:`extend` method "
"to add initial items to the array."
msgstr ""
"如果給定的是一個 :class:`bytes` 或 :class:`bytearray` 物件，新的陣列初始化時"
"會傳入 :meth:`frombytes` 方法；如為 Unicode 字串則會傳入 :meth:`fromunicode` "
"方法；其他情況時， 一個 initializer 的可疊代物件將被傳入 :meth:`extend` 方法"
"之中來將初始項目新增至陣列。"

#: ../../library/array.rst:90
msgid ""
"Array objects support the ordinary sequence operations of indexing, slicing, "
"concatenation, and multiplication.  When using slice assignment, the "
"assigned value must be an array object with the same type code; in all other "
"cases, :exc:`TypeError` is raised. Array objects also implement the buffer "
"interface, and may be used wherever :term:`bytes-like objects <bytes-like "
"object>` are supported."
msgstr ""
"陣列支援常見的序列操作，包含索引 (indexing)、切片 (slicing)、串接 "
"(concatenation)、相乘 (multiplication) 等。當使用切片進行賦值時，賦值的陣列必"
"須具備相同的 type code，其他型別的數值將導致 :exc:`TypeError`。陣列同時也實作"
"了緩衝區介面，可以在任何支援 :term:`bytes-like objects <bytes-like object>` "
"的地方使用。"

#: ../../library/array.rst:96
msgid ""
"Raises an :ref:`auditing event <auditing>` ``array.__new__`` with arguments "
"``typecode``, ``initializer``."
msgstr ""
"引發\\ :ref:`稽核事件 (auditing event) <auditing>` ``array.__new__`` 並帶入引"
"數 ``typecode``、``initializer``。"

#: ../../library/array.rst:101
msgid "The typecode character used to create the array."
msgstr "typecode 字元被用在建立陣列時。"

#: ../../library/array.rst:106
msgid "The length in bytes of one array item in the internal representation."
msgstr "陣列當中的一個元素在內部需要的位元組長度。"

#: ../../library/array.rst:111
msgid "Append a new item with value *x* to the end of the array."
msgstr "新增一個元素 *x* 到陣列的最尾端。"

#: ../../library/array.rst:116
msgid ""
"Return a tuple ``(address, length)`` giving the current memory address and "
"the length in elements of the buffer used to hold array's contents.  The "
"size of the memory buffer in bytes can be computed as ``array.buffer_info()"
"[1] * array.itemsize``.  This is occasionally useful when working with low-"
"level (and inherently unsafe) I/O interfaces that require memory addresses, "
"such as certain :c:func:`!ioctl` operations.  The returned numbers are valid "
"as long as the array exists and no length-changing operations are applied to "
"it."
msgstr ""
"回傳一個 tuple ``(address, length)`` 表示當前的記憶體位置和陣列儲存元素的緩衝"
"區記憶體長度。緩衝區的長度單位是位元組，並可以用 ``array.buffer_info()[1] * "
"array.itemsize`` 計算得到。這偶爾會在底層操作需要記憶體位置的輸出輸入時很有"
"用，例如 :c:func:`!ioctl` 指令。只要陣列存在且沒有使用任何更改長度的操作時，"
"回傳的數值就有效。"

#: ../../library/array.rst:126
msgid ""
"When using array objects from code written in C or C++ (the only way to "
"effectively make use of this information), it makes more sense to use the "
"buffer interface supported by array objects.  This method is maintained for "
"backward compatibility and should be avoided in new code.  The buffer "
"interface is documented in :ref:`bufferobjects`."
msgstr ""
"當使用來自 C 或 C++ 程式碼（這是唯一使得這個資訊有效的途徑）的陣列物件時，更"
"適當的做法是使用陣列物件支援的緩衝區介面。這個方法維護了向後兼容性，並應該在"
"新的程式碼中避免。關於緩衝區介面的文件在\\ :ref:`bufferobjects`。"

#: ../../library/array.rst:135
msgid ""
"\"Byteswap\" all items of the array.  This is only supported for values "
"which are 1, 2, 4, or 8 bytes in size; for other types of values, :exc:"
"`RuntimeError` is raised.  It is useful when reading data from a file "
"written on a machine with a different byte order."
msgstr ""
"\"Byteswap\" 所有陣列中的物件。這只有支援物件長度為 1、2、4 或 8 位元組的陣"
"列，其他型別的值會導致 :exc:`RuntimeError`。這在從機器讀取位元順序不同的檔案"
"時很有用。"

#: ../../library/array.rst:143
msgid "Return the number of occurrences of *x* in the array."
msgstr "回傳 *x* 在陣列中出現了幾次。"

#: ../../library/array.rst:148
msgid ""
"Append items from *iterable* to the end of the array.  If *iterable* is "
"another array, it must have *exactly* the same type code; if not, :exc:"
"`TypeError` will be raised.  If *iterable* is not an array, it must be "
"iterable and its elements must be the right type to be appended to the array."
msgstr ""
"從 *iterable* 中新增元素到陣列的尾端，如果 *iterable* 是另一個陣列，它必須有"
"完全相同的 type code，如果不同會導致 :exc:`TypeError`。如果 *iterable* 不是一"
"個陣列，它必須可以被疊代 (iterable) 且其中的元素必須是可以被加入陣列中的正確"
"型別。"

#: ../../library/array.rst:156
msgid ""
"Appends items from the :term:`bytes-like object`, interpreting its content "
"as an array of machine values (as if it had been read from a file using the :"
"meth:`fromfile` method)."
msgstr ""
"從 :term:`bytes-like object` 中新增元素。讀取時會將其內容當作一個機器數值組成"
"的陣列（就像從檔案中使用 :meth:`fromfile` 方法讀出的資料）。"

#: ../../library/array.rst:160
msgid ":meth:`!fromstring` is renamed to :meth:`frombytes` for clarity."
msgstr "將 :meth:`!fromstring` 更名為 :meth:`frombytes`，使其更加清晰易懂。"

#: ../../library/array.rst:166
msgid ""
"Read *n* items (as machine values) from the :term:`file object` *f* and "
"append them to the end of the array.  If less than *n* items are available, :"
"exc:`EOFError` is raised, but the items that were available are still "
"inserted into the array."
msgstr ""
"從 :term:`file object` *f* 讀取 *n* 個元素（作為機器數值），接著將這些元素加"
"入陣列的最尾端。如果只有少於 *n* 個有效的元素會導致 :exc:`EOFError`，但有效的"
"元素仍然會被加入陣列中。"

#: ../../library/array.rst:174
msgid ""
"Append items from the list.  This is equivalent to ``for x in list: a."
"append(x)`` except that if there is a type error, the array is unchanged."
msgstr ""
"從 list 中新增元素。這等價於 ``for x in list: a.append(x)``，除了有型別錯誤產"
"生時，陣列會保持原狀不會被更改。"

#: ../../library/array.rst:180
msgid ""
"Extends this array with data from the given Unicode string. The array must "
"have type code ``'u'``; otherwise a :exc:`ValueError` is raised. Use ``array."
"frombytes(unicodestring.encode(enc))`` to append Unicode data to an array of "
"some other type."
msgstr ""
"用給定的 Unicode 字串擴展這個陣列。陣列的 type code 必須是 ``u``；其他的型別"
"會導致 :exc:`ValueError` 被引發。使用 ``array.frombytes(unicodestring."
"encode(enc))`` 來新增 Unicode 資料到一個其他型別的陣列。"

#: ../../library/array.rst:188
msgid ""
"Return the smallest *i* such that *i* is the index of the first occurrence "
"of *x* in the array.  The optional arguments *start* and *stop* can be "
"specified to search for *x* within a subsection of the array.  Raise :exc:"
"`ValueError` if *x* is not found."
msgstr ""
"回傳 *i* 的最小數值，使得 *i* 成為陣列之中第一次出現 *x* 的索引。選擇性的引"
"數 *start* 及 *stop* 則可以被用來在指定的陣列空間中搜尋 *x*。如果 *x* 不存在"
"將導致 :exc:`ValueError`。"

#: ../../library/array.rst:193
msgid "Added optional *start* and *stop* parameters."
msgstr "新增選擇性的參數 *start* 及 *stop*。"

#: ../../library/array.rst:199
msgid ""
"Insert a new item with value *x* in the array before position *i*. Negative "
"values are treated as being relative to the end of the array."
msgstr "在位置 *i* 之前插入一個元素 *x*。負數的索引值會從陣列尾端開始數。"

#: ../../library/array.rst:205
msgid ""
"Removes the item with the index *i* from the array and returns it. The "
"optional argument defaults to ``-1``, so that by default the last item is "
"removed and returned."
msgstr ""
"移除並回傳陣列索引值 *i* 的元素。選擇性的引數 *i* 預設為 ``-1``，所以預設會刪"
"除並回傳最後一個元素。"

#: ../../library/array.rst:212
msgid "Remove the first occurrence of *x* from the array."
msgstr "從陣列中刪除第一個出現的 *x*。"

#: ../../library/array.rst:217
msgid "Reverse the order of the items in the array."
msgstr "反轉陣列中元素的順序。"

#: ../../library/array.rst:222
msgid ""
"Convert the array to an array of machine values and return the bytes "
"representation (the same sequence of bytes that would be written to a file "
"by the :meth:`tofile` method.)"
msgstr ""
"將陣列轉為另一個機器數值組成的陣列並回傳它的位元組表示（跟用 :meth:`tofile` "
"方法寫入檔案時的位元序列相同）。"

#: ../../library/array.rst:226
msgid ":meth:`!tostring` is renamed to :meth:`tobytes` for clarity."
msgstr "為了明確性，過去的 :meth:`!tostring` 已更名為 :meth:`tobytes`。"

#: ../../library/array.rst:232
msgid "Write all items (as machine values) to the :term:`file object` *f*."
msgstr "將所有元素（作為機器數值）寫入 :term:`file object` *f*。"

#: ../../library/array.rst:237
msgid "Convert the array to an ordinary list with the same items."
msgstr "不更改元素，將陣列轉為一般的 list。"

#: ../../library/array.rst:242
msgid ""
"Convert the array to a Unicode string.  The array must have a type ``'u'``; "
"otherwise a :exc:`ValueError` is raised. Use ``array.tobytes().decode(enc)`` "
"to obtain a Unicode string from an array of some other type."
msgstr ""
"將陣列轉為一個 Unicode 字串。陣列的型別必須為 ``u``。其他型別的陣列會導致 :"
"exc:`ValueError` 錯誤。請使用 ``array.tobytes().decode(enc)`` 來為其他型別的"
"陣列轉為 Unicode 字串。"

#: ../../library/array.rst:247
msgid ""
"The string representation of array objects has the form ``array(typecode, "
"initializer)``. The *initializer* is omitted if the array is empty, "
"otherwise it is a Unicode string if the *typecode* is ``'u'``, otherwise it "
"is a list of numbers. The string representation is guaranteed to be able to "
"be converted back to an array with the same type and value using :func:"
"`eval`, so long as the :class:`~array.array` class has been imported using "
"``from array import array``. Variables ``inf`` and ``nan`` must also be "
"defined if it contains corresponding floating point values. Examples::"
msgstr ""
"陣列物件的字串表示形式為 ``array(typecode, initializer)``。若為空陣列則參數 "
"*initializer* 被省略，若 *typecode* 是 ``'u'`` 將被表示為 Unicode 字串，其他"
"情況則被表示為由數字組成的 list。只要 :class:`~array.array` class（類別）透"
"過 ``from array import array`` 的方式引入，便能確保該字串表示能透過 :func:"
"`eval` 轉換回一個擁有相同型別及數值的陣列。範例： ::"

#: ../../library/array.rst:267
msgid "Module :mod:`struct`"
msgstr ":mod:`struct` 模組"

#: ../../library/array.rst:268
msgid "Packing and unpacking of heterogeneous binary data."
msgstr "將包含不同資料類型的二進位資料包裝與解開包裝。"

#: ../../library/array.rst:270
msgid "Module :mod:`xdrlib`"
msgstr ":mod:`xdrlib` 模組"

#: ../../library/array.rst:271
msgid ""
"Packing and unpacking of External Data Representation (XDR) data as used in "
"some remote procedure call systems."
msgstr ""
"將 External Data Representation (XDR) 的資料包裝與解開包裝，這用在一些遠端操"
"作的系統 (remote procedure call systems)。"

#: ../../library/array.rst:274
msgid "`NumPy <https://numpy.org/>`_"
msgstr "`NumPy <https://numpy.org/>`_"

#: ../../library/array.rst:275
msgid "The NumPy package defines another array type."
msgstr "NumPy 套件定義了另一個陣列型別"

#: ../../library/array.rst:7
msgid "arrays"
msgstr "arrays（陣列）"
