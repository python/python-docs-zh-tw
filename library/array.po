# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2021, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
# Liang-Bo Wang <me@liang2.tw>, 2016
# 周 忠毅 <rilakcrc35@gmail.com>, 2016
msgid ""
msgstr ""
"Project-Id-Version: Python 3.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-10-07 00:10+0000\n"
"PO-Revision-Date: 2018-05-23 14:38+0000\n"
"Last-Translator: Adrian Liaw <adrianliaw2000@gmail.com>\n"
"Language-Team: Chinese - TAIWAN (https://github.com/python/python-docs-zh-"
"tw)\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/array.rst:2
msgid ":mod:`array` --- Efficient arrays of numeric values"
msgstr ":mod:`array` --- 高效率的數值型態陣列"

#: ../../library/array.rst:11
msgid ""
"This module defines an object type which can compactly represent an array of "
"basic values: characters, integers, floating point numbers.  Arrays are "
"sequence types and behave very much like lists, except that the type of "
"objects stored in them is constrained.  The type is specified at object "
"creation time by using a :dfn:`type code`, which is a single character.  The "
"following type codes are defined:"
msgstr ""
"這個模組定義了一個物件型別，可以簡潔的表達一個包含基本數值的陣列：字元、整"
"數、浮點數。陣列是一個非常類似 list 的序列型態，除了陣列會限制儲存的物件型"
"別。在建立陣列時可以使用一個字元的  :dfn:`type code` 來指定儲存的資料型別。下"
"面是 type codes 的定義。"

#: ../../library/array.rst:19
msgid "Type code"
msgstr "Type code"

#: ../../library/array.rst:19
msgid "C Type"
msgstr "C Type"

#: ../../library/array.rst:19
msgid "Python Type"
msgstr "Python Type"

#: ../../library/array.rst:19
msgid "Minimum size in bytes"
msgstr "最小所需的位元組"

#: ../../library/array.rst:19
msgid "Notes"
msgstr "註解"

#: ../../library/array.rst:21
msgid "``'b'``"
msgstr "``'b'``"

#: ../../library/array.rst:21
msgid "signed char"
msgstr "signed char"

#: ../../library/array.rst:21 ../../library/array.rst:23
#: ../../library/array.rst:27 ../../library/array.rst:29
#: ../../library/array.rst:31 ../../library/array.rst:33
#: ../../library/array.rst:35 ../../library/array.rst:37
#: ../../library/array.rst:39 ../../library/array.rst:41
msgid "int"
msgstr "int"

#: ../../library/array.rst:21 ../../library/array.rst:23
msgid "1"
msgstr "1"

#: ../../library/array.rst:23
msgid "``'B'``"
msgstr "``'B'``"

#: ../../library/array.rst:23
msgid "unsigned char"
msgstr "unsigned char"

#: ../../library/array.rst:25
msgid "``'u'``"
msgstr "``'u'``"

#: ../../library/array.rst:25
msgid "wchar_t"
msgstr ""

#: ../../library/array.rst:25
msgid "Unicode character"
msgstr "Unicode character"

#: ../../library/array.rst:25 ../../library/array.rst:27
#: ../../library/array.rst:29 ../../library/array.rst:31
#: ../../library/array.rst:33
msgid "2"
msgstr "2"

#: ../../library/array.rst:25
msgid "\\(1)"
msgstr "\\(1)"

#: ../../library/array.rst:27
msgid "``'h'``"
msgstr "``'h'``"

#: ../../library/array.rst:27
msgid "signed short"
msgstr "signed short"

#: ../../library/array.rst:29
msgid "``'H'``"
msgstr "``'H'``"

#: ../../library/array.rst:29
msgid "unsigned short"
msgstr "unsigned short"

#: ../../library/array.rst:31
msgid "``'i'``"
msgstr "``'i'``"

#: ../../library/array.rst:31
msgid "signed int"
msgstr "signed int"

#: ../../library/array.rst:33
msgid "``'I'``"
msgstr "``'I'``"

#: ../../library/array.rst:33
msgid "unsigned int"
msgstr "unsigned int"

#: ../../library/array.rst:35
msgid "``'l'``"
msgstr "``'l'``"

#: ../../library/array.rst:35
msgid "signed long"
msgstr "signed long"

#: ../../library/array.rst:35 ../../library/array.rst:37
#: ../../library/array.rst:43
msgid "4"
msgstr "4"

#: ../../library/array.rst:37
msgid "``'L'``"
msgstr "``'L'``"

#: ../../library/array.rst:37
msgid "unsigned long"
msgstr "unsigned long"

#: ../../library/array.rst:39
msgid "``'q'``"
msgstr "``'q'``"

#: ../../library/array.rst:39
msgid "signed long long"
msgstr "signed long long"

#: ../../library/array.rst:39 ../../library/array.rst:41
#: ../../library/array.rst:45
msgid "8"
msgstr "8"

#: ../../library/array.rst:41
msgid "``'Q'``"
msgstr "``'Q'``"

#: ../../library/array.rst:41
msgid "unsigned long long"
msgstr "unsigned long long"

#: ../../library/array.rst:43
msgid "``'f'``"
msgstr "``'f'``"

#: ../../library/array.rst:43 ../../library/array.rst:45
msgid "float"
msgstr "float"

#: ../../library/array.rst:45
msgid "``'d'``"
msgstr "``'d'``"

#: ../../library/array.rst:45
msgid "double"
msgstr "double"

#: ../../library/array.rst:48
msgid "Notes:"
msgstr "註解："

#: ../../library/array.rst:51
msgid "It can be 16 bits or 32 bits depending on the platform."
msgstr ""

#: ../../library/array.rst:53
msgid ""
"``array('u')`` now uses ``wchar_t`` as C type instead of deprecated "
"``Py_UNICODE``. This change doesn't affect to its behavior because "
"``Py_UNICODE`` is alias of ``wchar_t`` since Python 3.3."
msgstr ""

#: ../../library/array.rst:61
msgid ""
"The actual representation of values is determined by the machine "
"architecture (strictly speaking, by the C implementation).  The actual size "
"can be accessed through the :attr:`itemsize` attribute."
msgstr ""
"實際上數值的表示方法是被機器的架構所決定（更精準地說，被 C 的實作方法決定）。"
"實際的大小可以透過 :attr:`itemsize` 屬性存取。"

#: ../../library/array.rst:65
msgid "The module defines the following type:"
msgstr "這個模組定義了下方的型別："

#: ../../library/array.rst:70
msgid ""
"A new array whose items are restricted by *typecode*, and initialized from "
"the optional *initializer* value, which must be a list, a :term:`bytes-like "
"object`, or iterable over elements of the appropriate type."
msgstr ""
"一個新的陣列中的元素被 *typecode* 限制，並由選用的 *initializer* 參數初始"
"化， *initializer* 必須是一個 list、 :term:`bytes-like object` 或包含適當型別"
"變數的 iterable 。"

#: ../../library/array.rst:75
msgid ""
"If given a list or string, the initializer is passed to the new array's :"
"meth:`fromlist`, :meth:`frombytes`, or :meth:`fromunicode` method (see "
"below) to add initial items to the array.  Otherwise, the iterable "
"initializer is passed to the :meth:`extend` method."
msgstr ""
"如果指定一個 list 或 string ，新的陣列初始化時會傳入 :meth:`fromlist` 、 :"
"meth:`frombytes` 或 :meth:`fromunicode` 方法（參照下方）將元素新增到其中。其"
"他型態的變數則會傳入 :meth:`extend` 方法初始化。"

#: ../../library/array.rst:80
msgid ""
"Raises an :ref:`auditing event <auditing>` ``array.__new__`` with arguments "
"``typecode``, ``initializer``."
msgstr ""

#: ../../library/array.rst:84
msgid "A string with all available type codes."
msgstr "一個包含所有可用的 type code 的字串。"

#: ../../library/array.rst:86
msgid ""
"Array objects support the ordinary sequence operations of indexing, slicing, "
"concatenation, and multiplication.  When using slice assignment, the "
"assigned value must be an array object with the same type code; in all other "
"cases, :exc:`TypeError` is raised. Array objects also implement the buffer "
"interface, and may be used wherever :term:`bytes-like objects <bytes-like "
"object>` are supported."
msgstr ""

#: ../../library/array.rst:92
msgid "The following data items and methods are also supported:"
msgstr "提供下方的資料物件與方法。"

#: ../../library/array.rst:96
msgid "The typecode character used to create the array."
msgstr "typecode 字元被用在建立陣列時。"

#: ../../library/array.rst:101
msgid "The length in bytes of one array item in the internal representation."
msgstr "陣列當中的一個元素在內部需要的位元組 (bytes) 長度。"

#: ../../library/array.rst:106
msgid "Append a new item with value *x* to the end of the array."
msgstr "新增一個元素 *x* 到陣列的最尾端。"

#: ../../library/array.rst:111
msgid ""
"Return a tuple ``(address, length)`` giving the current memory address and "
"the length in elements of the buffer used to hold array's contents.  The "
"size of the memory buffer in bytes can be computed as ``array.buffer_info()"
"[1] * array.itemsize``.  This is occasionally useful when working with low-"
"level (and inherently unsafe) I/O interfaces that require memory addresses, "
"such as certain :c:func:`ioctl` operations.  The returned numbers are valid "
"as long as the array exists and no length-changing operations are applied to "
"it."
msgstr ""
"回傳一個 tuple ``(address, length)`` 表示當前的記憶體位置和陣列儲存元素的緩衝"
"區記憶體長度。緩衝區的長度單位是 bytes ，並可以用 ``array.buffer_info()[1] * "
"array.itemsize`` 計算得到。這偶爾會在底層操作需要記憶體位置的輸出輸入時很有"
"用，例如 :c:func:`ioctl` 指令。只要陣列存在且沒有使用任何更改長度的操作時，回"
"傳的數值就有效。"

#: ../../library/array.rst:121
msgid ""
"When using array objects from code written in C or C++ (the only way to "
"effectively make use of this information), it makes more sense to use the "
"buffer interface supported by array objects.  This method is maintained for "
"backward compatibility and should be avoided in new code.  The buffer "
"interface is documented in :ref:`bufferobjects`."
msgstr ""
"當使用來自 C 或 C++ 程式碼（這是唯一使得這個資訊有效的途徑） 的陣列物件時，更"
"適當的做法是使用陣列物件支援的緩衝區介面。這個方法維護了向後兼容性，並應該在"
"新的程式碼中避免。關於緩衝區介面的文件在 :ref:`bufferobjects` 。"

#: ../../library/array.rst:130
msgid ""
"\"Byteswap\" all items of the array.  This is only supported for values "
"which are 1, 2, 4, or 8 bytes in size; for other types of values, :exc:"
"`RuntimeError` is raised.  It is useful when reading data from a file "
"written on a machine with a different byte order."
msgstr ""
"\"Byteswap\" 所有陣列中的物件。這只有支援物件長度為 1、2、4 或 8 位元組的陣"
"列，其他型別的值會導致 :exc:`RuntimeError` 。這在從機器讀取位元順序不同的檔案"
"時很有用。"

#: ../../library/array.rst:138
msgid "Return the number of occurrences of *x* in the array."
msgstr "回傳 *x* 在陣列中出現了幾次。"

#: ../../library/array.rst:143
msgid ""
"Append items from *iterable* to the end of the array.  If *iterable* is "
"another array, it must have *exactly* the same type code; if not, :exc:"
"`TypeError` will be raised.  If *iterable* is not an array, it must be "
"iterable and its elements must be the right type to be appended to the array."
msgstr ""
"從 *iterable* 中新增元素到陣列的尾端，如果 *iterable* 是另一個陣列，他必須有"
"完全相同的 type code ，如果不同會產生 :exc:`TypeError` 。如果 *iterable* 不是"
"一個陣列，他必須可以被迭代 (iterable) 且其中的元素必須是可以被加入陣列中的正"
"確型態。"

#: ../../library/array.rst:151
msgid ""
"Appends items from the string, interpreting the string as an array of "
"machine values (as if it had been read from a file using the :meth:"
"`fromfile` method)."
msgstr ""
"從字串中新增元素。讀取時會將字串當作一個陣列，裡面包含了 machine value（就像"
"從檔案中使用 :meth:`fromfile` 方法讀出的資料）。"

#: ../../library/array.rst:154
msgid ":meth:`fromstring` is renamed to :meth:`frombytes` for clarity."
msgstr "為了更明確，之前的 :meth:`fromstring` 被更名為 :meth:`frombytes` 。"

#: ../../library/array.rst:160
msgid ""
"Read *n* items (as machine values) from the :term:`file object` *f* and "
"append them to the end of the array.  If less than *n* items are available, :"
"exc:`EOFError` is raised, but the items that were available are still "
"inserted into the array."
msgstr ""
"從 :term:`file object` *f* 讀取 *n* 個 machine value 類型的元素，接著將這些元"
"素加入陣列的最尾端。如果只有少於 *n* 個有效的元素會產生 :exc:`EOFError` 錯"
"誤，但有效的元素仍然會被加入陣列中。"

#: ../../library/array.rst:168
msgid ""
"Append items from the list.  This is equivalent to ``for x in list: a."
"append(x)`` except that if there is a type error, the array is unchanged."
msgstr ""
"從 list 中新增元素。這等價於 ``for x in list: a.append(x)`` ，除了有型態錯誤"
"產生時，陣列會保持原狀不會被更改。"

#: ../../library/array.rst:174
msgid ""
"Extends this array with data from the given unicode string.  The array must "
"be a type ``'u'`` array; otherwise a :exc:`ValueError` is raised.  Use "
"``array.frombytes(unicodestring.encode(enc))`` to append Unicode data to an "
"array of some other type."
msgstr ""
"用給定的 unicode 字串擴展這個陣列。陣列必須是型態 ``u`` 的陣列；其他的型態會"
"產生 :exc:`ValueError` 錯誤。使用 ``array.frombytes(unicodestring."
"encode(enc))`` 來新增 Unicode 資料到一個其他型態的陣列。"

#: ../../library/array.rst:182
msgid ""
"Return the smallest *i* such that *i* is the index of the first occurrence "
"of *x* in the array."
msgstr "回傳最小的 *i* ，使得 *i* 是陣列中第一個 *x* 出現的索引值。"

#: ../../library/array.rst:188
msgid ""
"Insert a new item with value *x* in the array before position *i*. Negative "
"values are treated as being relative to the end of the array."
msgstr "在位置 *i* 之前插入一個元素 *x* 。負數的索引值會從陣列尾端開始數。"

#: ../../library/array.rst:194
msgid ""
"Removes the item with the index *i* from the array and returns it. The "
"optional argument defaults to ``-1``, so that by default the last item is "
"removed and returned."
msgstr ""
"移除並回傳陣列索引值 *i* 的元素。選擇性的參數 *i* 預設為 ``-1`` ，所以預設會"
"刪除並回傳最後一個元素。"

#: ../../library/array.rst:201
msgid "Remove the first occurrence of *x* from the array."
msgstr "從陣列中刪除第一個出現的 *x* 。"

#: ../../library/array.rst:206
msgid "Reverse the order of the items in the array."
msgstr "將整個陣列的元素按照順序逆轉。"

#: ../../library/array.rst:211
msgid ""
"Convert the array to an array of machine values and return the bytes "
"representation (the same sequence of bytes that would be written to a file "
"by the :meth:`tofile` method.)"
msgstr ""
"將陣列轉為另一個 machine values 的陣列並回傳他的位元組表示（跟用 :meth:"
"`tofile` 方法寫入檔案時的位元序列相同）。"

#: ../../library/array.rst:215
msgid ":meth:`tostring` is renamed to :meth:`tobytes` for clarity."
msgstr "為了明確性，過去的 :meth:`tostring` 已更名為 :meth:`tobytes` 。"

#: ../../library/array.rst:221
msgid "Write all items (as machine values) to the :term:`file object` *f*."
msgstr "將所有元素 （以 machine code 的形式）寫入 :term:`file object` *f* 。"

#: ../../library/array.rst:226
msgid "Convert the array to an ordinary list with the same items."
msgstr "不更改元素，將陣列轉為一般的 list 。"

#: ../../library/array.rst:231
msgid ""
"Convert the array to a unicode string.  The array must be a type ``'u'`` "
"array; otherwise a :exc:`ValueError` is raised. Use ``array.tobytes()."
"decode(enc)`` to obtain a unicode string from an array of some other type."
msgstr ""
"將陣列轉為一個字串。陣列的型態必須為 ``u`` 。其他型態的陣列會產生 :exc:"
"`ValueError` 錯誤。使用 ``array.tobytes().decode(enc)`` 將其他型態的陣列轉為"
"字串。"

#: ../../library/array.rst:236
msgid ""
"When an array object is printed or converted to a string, it is represented "
"as ``array(typecode, initializer)``.  The *initializer* is omitted if the "
"array is empty, otherwise it is a string if the *typecode* is ``'u'``, "
"otherwise it is a list of numbers.  The string is guaranteed to be able to "
"be converted back to an array with the same type and value using :func:"
"`eval`, so long as the :class:`~array.array` class has been imported using "
"``from array import array``. Examples::"
msgstr ""

#: ../../library/array.rst:253
msgid "Module :mod:`struct`"
msgstr "模組 :mod:`struct`"

#: ../../library/array.rst:253
msgid "Packing and unpacking of heterogeneous binary data."
msgstr "將包含不同資料類型的二進位資料包裝與解開包裝。"

#: ../../library/array.rst:257
msgid "Module :mod:`xdrlib`"
msgstr "模組 :mod:`xdrlib`"

#: ../../library/array.rst:256
msgid ""
"Packing and unpacking of External Data Representation (XDR) data as used in "
"some remote procedure call systems."
msgstr ""
"將 External Data Representation (XDR)  的資料包裝與解開包裝，這用在一些遠端操"
"作的系統 ( remote procedure call systems ) 。"

#: ../../library/array.rst:259
msgid "`NumPy <https://numpy.org/>`_"
msgstr "`NumPy <https://numpy.org/>`_"

#: ../../library/array.rst:260
msgid "The NumPy package defines another array type."
msgstr "NumPy 套件定義了另一個陣列型態"

#~ msgid ""
#~ "The Numeric Python extension (NumPy) defines another array type; see "
#~ "http://www.numpy.org/ for further information about Numerical Python."
#~ msgstr ""
#~ "Python 數值運算的擴充 (The Numeric Python extension, NumPy) 定義了另一個陣"
#~ "列型態，更多關於 Python 的數值運算參考 http://www.numpy.org/ 。"

#~ msgid "Py_UNICODE"
#~ msgstr "Py_UNICODE"

#~ msgid "\\(2)"
#~ msgstr "\\(2)"

#~ msgid ""
#~ "The ``'u'`` type code corresponds to Python's obsolete unicode character "
#~ "(:c:type:`Py_UNICODE` which is :c:type:`wchar_t`). Depending on the "
#~ "platform, it can be 16 bits or 32 bits."
#~ msgstr ""
#~ "``u`` type code 對應到的是 Python 過去的 unicode 字母（ :c:type:"
#~ "`Py_UNICODE` 是 :c:type:`wchar_t` ）。根據平台不同，他有可能是 16 bits 或 "
#~ "32 bits。"

#~ msgid ""
#~ "``'u'`` will be removed together with the rest of the :c:type:"
#~ "`Py_UNICODE` API."
#~ msgstr "``'u'`` 會跟著 :c:type:`Py_UNICODE` API 的停用一起被移除。"

#~ msgid ""
#~ "The ``'q'`` and ``'Q'`` type codes are available only if the platform C "
#~ "compiler used to build Python supports C :c:type:`long long`, or, on "
#~ "Windows, :c:type:`__int64`."
#~ msgstr ""
#~ " ``'q'`` 和 ``'Q'`` type codes 只有在平台上建立 Python 的 C 編譯器時支援 "
#~ "C 的 long long 型別或支援 Windows 上的 :c:type:`__int64` 型別時有效。"

#~ msgid "Deprecated alias for :meth:`frombytes`."
#~ msgstr ":meth:`frombytes` 方法的另一個（已經過時的）名字。"

#~ msgid "Deprecated alias for :meth:`tobytes`."
#~ msgstr ":meth:`tobytes` 方法的另一個（已經過時的）名字。"
