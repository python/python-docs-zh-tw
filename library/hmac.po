# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2022, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
# Adrian Liaw <adrianliaw2000@gmail.com>, 2018
# Phil Lin <linooohon@gmail.com>, 2022
msgid ""
msgstr ""
"Project-Id-Version: Python 3.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-07-06 00:17+0000\n"
"PO-Revision-Date: 2022-03-30 00:16+0800\n"
"Last-Translator: Phil Lin <linooohon@gmail.com>\n"
"Language-Team: Chinese - TAIWAN (https://github.com/python/python-docs-zh-"
"tw)\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Poedit 3.0.1\n"

#: ../../library/hmac.rst:2
msgid ":mod:`hmac` --- Keyed-Hashing for Message Authentication"
msgstr ":mod:`hmac` --- 基於金鑰雜湊的訊息驗證"

#: ../../library/hmac.rst:10
msgid "**Source code:** :source:`Lib/hmac.py`"
msgstr "**原始碼：**\\ :source:`Lib/hmac.py`"

#: ../../library/hmac.rst:14
msgid "This module implements the HMAC algorithm as described by :rfc:`2104`."
msgstr "此模組 (module) 實現了 :rfc:`2014` 所描述的 HMAC 演算法。"

#: ../../library/hmac.rst:19
msgid ""
"Return a new hmac object.  *key* is a bytes or bytearray object giving the "
"secret key.  If *msg* is present, the method call ``update(msg)`` is made. "
"*digestmod* is the digest name, digest constructor or module for the HMAC "
"object to use.  It may be any name suitable to :func:`hashlib.new`. Despite "
"its argument position, it is required."
msgstr ""
"回傳一個新的 hmac 物件。*key* 是一個指定密鑰的 bytes（位元組）或 bytearray 物"
"件。如果提供了 *msg*，將會呼叫 ``update(msg)`` 方法。*digestmod* 為 HMAC 物件"
"所用的摘要名稱、摘要建構函式 (constructor) 或模組。它可以是適用於 :func:"
"`hashlib.new` 的任何名稱。儘管該引數的位置在後，但它卻是必須的。"

#: ../../library/hmac.rst:25
msgid ""
"Parameter *key* can be a bytes or bytearray object. Parameter *msg* can be "
"of any type supported by :mod:`hashlib`. Parameter *digestmod* can be the "
"name of a hash algorithm."
msgstr ""
"參數 *key* 可以為 bytes 或 bytearray 物件。參數 *msg* 可以為 :mod:`hashlib` "
"所支援的任意型別。參數 *digestmod* 可以為雜湊演算法的名稱。"

#: ../../library/hmac.rst:33
msgid ""
"MD5 as implicit default digest for *digestmod* is deprecated. The digestmod "
"parameter is now required.  Pass it as a keyword argument to avoid "
"awkwardness when you do not have an initial msg."
msgstr ""
"MD5 作為 *digestmod* 的隱式預設摘要已被棄用。digestmod 參數現在是必須的。請將"
"其作為關鍵字引數傳入以避免當你沒有初始 msg 時導致的麻煩。"

#: ../../library/hmac.rst:38
msgid ""
"Return digest of *msg* for given secret *key* and *digest*. The function is "
"equivalent to ``HMAC(key, msg, digest).digest()``, but uses an optimized C "
"or inline implementation, which is faster for messages that fit into memory. "
"The parameters *key*, *msg*, and *digest* have the same meaning as in :func:"
"`~hmac.new`."
msgstr ""
"基於給定密鑰 *key* 和 *digest* 回傳 *msg* 的摘要。此函式等價於 ``HMAC(key, "
"msg, digest).digest()``\\ ，但使用了優化的 C 或 行內實作（inline "
"implementation），對放入記憶體的訊息能處理得更快。參數 *key*、*msg* 和 "
"*digest* 在 :func:`~hmac.new` 中具有相同含義。"

#: ../../library/hmac.rst:44
msgid ""
"CPython implementation detail, the optimized C implementation is only used "
"when *digest* is a string and name of a digest algorithm, which is supported "
"by OpenSSL."
msgstr ""
"作為 CPython 的實現細節，C 的優化實作只有當 *digest* 為字串並且是一個 "
"OpenSSL 所支持的摘要演算法的名稱時才會被使用。"

#: ../../library/hmac.rst:51
msgid "An HMAC object has the following methods:"
msgstr "HMAC 物件具有下列方法 (method)："

#: ../../library/hmac.rst:55
msgid ""
"Update the hmac object with *msg*.  Repeated calls are equivalent to a "
"single call with the concatenation of all the arguments: ``m.update(a); m."
"update(b)`` is equivalent to ``m.update(a + b)``."
msgstr ""
"用 *msg* 來更新 hmac 物件。重複呼叫相當於單次呼叫並傳入所有引數的拼接結果："
"``m.update(a); m.update(b)`` 等價於 ``m.update(a + b)``\\ 。"

#: ../../library/hmac.rst:59
msgid "Parameter *msg* can be of any type supported by :mod:`hashlib`."
msgstr "參數 *msg* 可以是 :mod:`hashlib` 所支援的任何型別。"

#: ../../library/hmac.rst:65
msgid ""
"Return the digest of the bytes passed to the :meth:`update` method so far. "
"This bytes object will be the same length as the *digest_size* of the digest "
"given to the constructor.  It may contain non-ASCII bytes, including NUL "
"bytes."
msgstr ""
"回傳當前已傳給 :meth:`update` 方法的 bytes 摘要。這個 bytes 物件的長度會與傳"
"給建構函式的摘要 *digest_size* 的長度相同。它可以包含 NUL bytes 以及 non-"
"ASCII bytes。"

#: ../../library/hmac.rst:72
msgid ""
"When comparing the output of :meth:`digest` to an externally supplied digest "
"during a verification routine, it is recommended to use the :func:"
"`compare_digest` function instead of the ``==`` operator to reduce the "
"vulnerability to timing attacks."
msgstr ""
"在一個例行的驗證事務運行期間，將 :meth:`digest` 的輸出與外部提供的摘要進行比"
"較時，建議使用 :func:`compare_digest` 函式而不是 ``==`` 運算子以減少被定時攻"
"擊時的漏洞。"

#: ../../library/hmac.rst:80
msgid ""
"Like :meth:`digest` except the digest is returned as a string twice the "
"length containing only hexadecimal digits.  This may be used to exchange the "
"value safely in email or other non-binary environments."
msgstr ""
"像是 :meth:`digest` 但摘要的回傳形式為兩倍長度的字串，且此字串只包含十六進位"
"數位。這可以被用於在電子郵件或其他非二進位制環境中安全地交換數據。"

#: ../../library/hmac.rst:86
msgid ""
"When comparing the output of :meth:`hexdigest` to an externally supplied "
"digest during a verification routine, it is recommended to use the :func:"
"`compare_digest` function instead of the ``==`` operator to reduce the "
"vulnerability to timing attacks."
msgstr ""
"在一個例行的驗證事務運行期間，將 :meth:`hexdigest` 的輸出與外部提供的摘要進行"
"比較時，建議使用 :func:`compare_digest` 函式而不是 ``==`` 運算子以減少被定時"
"攻擊時的漏洞。"

#: ../../library/hmac.rst:94
msgid ""
"Return a copy (\"clone\") of the hmac object.  This can be used to "
"efficiently compute the digests of strings that share a common initial "
"substring."
msgstr ""
"回傳 hmac 物件的拷貝 (\"clone\")。這可以被用來有效率地計算那些共享相同初始子"
"字串的字串的摘要。"

#: ../../library/hmac.rst:98
msgid "A hash object has the following attributes:"
msgstr "一個 hash 物件具有以下屬性："

#: ../../library/hmac.rst:102
msgid "The size of the resulting HMAC digest in bytes."
msgstr "以 bytes 表示最終 HMAC 摘要的大小。"

#: ../../library/hmac.rst:106
msgid "The internal block size of the hash algorithm in bytes."
msgstr "以 bytes 表示雜湊演算法的內部區塊大小。"

#: ../../library/hmac.rst:112
msgid "The canonical name of this HMAC, always lowercase, e.g. ``hmac-md5``."
msgstr "HMAC 的正準名稱總是為小寫形式，例如 ``hmac-md5``\\ 。"

#: ../../library/hmac.rst:119
msgid ""
"The undocumented attributes ``HMAC.digest_cons``, ``HMAC.inner``, and ``HMAC."
"outer`` are internal implementation details and will be removed in Python "
"3.10."
msgstr ""
"未寫入文件的屬性 ``HMAC.digest_cons``\\ ，``HMAC.inner`` 和 ``HMAC.outer`` 屬"
"於內部實現細節，將在 Python 3.10 中被移除。"

#: ../../library/hmac.rst:123
msgid "This module also provides the following helper function:"
msgstr "這個模組還提供了下列輔助函式："

#: ../../library/hmac.rst:127
msgid ""
"Return ``a == b``.  This function uses an approach designed to prevent "
"timing analysis by avoiding content-based short circuiting behaviour, making "
"it appropriate for cryptography.  *a* and *b* must both be of the same type: "
"either :class:`str` (ASCII only, as e.g. returned by :meth:`HMAC."
"hexdigest`), or a :term:`bytes-like object`."
msgstr ""
"回傳 ``a == b``\\ 。此函式使用一種經專門設計的方式通過避免基於內容的短路行為"
"來防止定時分析，使得它適合處理密碼學。*a* 和 *b* 必須為相同的型別：可以是 :"
"class:`str`\\ （僅限 ASCII，如 :meth:`HMAC.hexdigest` 的回傳值），或者是 :"
"term:`bytes-like object`\\ 。"

#: ../../library/hmac.rst:135
msgid ""
"If *a* and *b* are of different lengths, or if an error occurs, a timing "
"attack could theoretically reveal information about the types and lengths of "
"*a* and *b*—but not their values."
msgstr ""
"如果 *a* 和 *b* 具有不同的長度，或者如果發生了錯誤，定時攻擊在理論上可以獲取"
"有關 *a* 和 *b* 的型別和長度的訊息 — 但不能獲取他們的值。"

#: ../../library/hmac.rst:143
msgid ""
"The function uses OpenSSL's ``CRYPTO_memcmp()`` internally when available."
msgstr "此函式在可能的情況下會在內部使用 OpenSSL 的 ``CRYPTO_memcmp()``\\ 。"

#: ../../library/hmac.rst:149
msgid "Module :mod:`hashlib`"
msgstr ":mod:`hashlib` 模組"

#: ../../library/hmac.rst:150
msgid "The Python module providing secure hash functions."
msgstr "Python 模組提供安全的雜湊函式。"
