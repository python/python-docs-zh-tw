# Copyright (C) 2001-2022, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
# Adrian Liaw <adrianliaw2000@gmail.com>, 2018
# Matt Wang <mattwang44@gmail.com>, 2022
msgid ""
msgstr ""
"Project-Id-Version: Python 3.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-06-10 00:16+0000\n"
"PO-Revision-Date: 2022-06-11 14:03+0800\n"
"Last-Translator: Matt Wang <mattwang44@gmail.com>\n"
"Language-Team: Chinese - TAIWAN (https://github.com/python/python-docs-zh-"
"tw)\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Poedit 3.1\n"

#: ../../library/platform.rst:2
msgid ":mod:`platform` ---  Access to underlying platform's identifying data"
msgstr ":mod:`platform` ---  獲取底層平臺的標識資料"

#: ../../library/platform.rst:10
msgid "**Source code:** :source:`Lib/platform.py`"
msgstr "**原始碼：**\\ :source:`Lib/platform.py`"

#: ../../library/platform.rst:16
msgid ""
"Specific platforms listed alphabetically, with Linux included in the Unix "
"section."
msgstr "特定平臺清單為按字母順序排列，Linux 包括在 Unix 小節之中。"

#: ../../library/platform.rst:21
msgid "Cross Platform"
msgstr "跨平台"

#: ../../library/platform.rst:26
msgid ""
"Queries the given executable (defaults to the Python interpreter binary) for "
"various architecture information."
msgstr ""
"查詢給定的可執行檔案（預設為 Python 直譯器二進位制檔案）來獲取各種架構資訊。"

#: ../../library/platform.rst:29
msgid ""
"Returns a tuple ``(bits, linkage)`` which contain information about the bit "
"architecture and the linkage format used for the executable. Both values are "
"returned as strings."
msgstr ""
"回傳一個 tuple（元組） ``(bits, linkage)``\\ ，其中包含可執行檔案所使用的位元"
"架構和連結格式資訊。這兩個值均以字串形式回傳。"

#: ../../library/platform.rst:33
msgid ""
"Values that cannot be determined are returned as given by the parameter "
"presets. If bits is given as ``''``, the ``sizeof(pointer)`` (or "
"``sizeof(long)`` on Python version < 1.5.2) is used as indicator for the "
"supported pointer size."
msgstr ""
"無法確定的值將回傳參數所給定之預先設置值。如果給定的位元為 ``''``\\ ，則會使"
"用 ``sizeof(pointer)``\\ （或者當 Python 版本 < 1.5.2 時為 ``sizeof(long)``"
"\\ ）作為所支援指標大小的指示器 (indicator)。"

#: ../../library/platform.rst:38
msgid ""
"The function relies on the system's :file:`file` command to do the actual "
"work. This is available on most if not all Unix  platforms and some non-Unix "
"platforms and then only if the executable points to the Python interpreter.  "
"Reasonable defaults are used when the above needs are not met."
msgstr ""
"此函式依賴於系統的 :file:`file` 命令來執行實際的操作。這在幾乎所有 Unix 平臺"
"和某些非 Unix 平臺上，只有當可執行檔案指向 Python 直譯器時才可使用。當以上要"
"求不滿足時將會使用合理的預設值。"

#: ../../library/platform.rst:45
msgid ""
"On macOS (and perhaps other platforms), executable files may be universal "
"files containing multiple architectures."
msgstr ""
"在 macOS（也許還有其他平臺）上，可執行檔案可能是包含多種架構的通用檔案。"

#: ../../library/platform.rst:48
msgid ""
"To get at the \"64-bitness\" of the current interpreter, it is more reliable "
"to query the :attr:`sys.maxsize` attribute::"
msgstr ""
"要獲取當前直譯器的 \"64 位元性 (64-bitness)\"，更可靠的做法是查詢 :attr:`sys."
"maxsize` 屬性：\n"
"\n"
"::"

#: ../../library/platform.rst:56
msgid ""
"Returns the machine type, e.g. ``'AMD64'``. An empty string is returned if "
"the value cannot be determined."
msgstr "回傳機器種類，例如 ``'AMD64'``。如果該值無法確定則會回傳一個空字串。"

#: ../../library/platform.rst:62
msgid ""
"Returns the computer's network name (may not be fully qualified!). An empty "
"string is returned if the value cannot be determined."
msgstr ""
"回傳電腦的網路名稱（可能不是完整名稱！）。如果該值無法確定則會回傳一個空字"
"串。"

#: ../../library/platform.rst:68
msgid ""
"Returns a single string identifying the underlying platform with as much "
"useful information as possible."
msgstr "會儘可能附帶有用資訊地回傳一個標識底層平臺的字串。"

#: ../../library/platform.rst:71
msgid ""
"The output is intended to be *human readable* rather than machine parseable. "
"It may look different on different platforms and this is intended."
msgstr ""
"輸出應為\\ *人類易讀的 (human readable)*\\ ，而非機器易剖析的 (machine "
"parseable)。它在不同平臺上看起來可能不一致，這是有意為之的。"

#: ../../library/platform.rst:74
msgid ""
"If *aliased* is true, the function will use aliases for various platforms "
"that report system names which differ from their common names, for example "
"SunOS will be reported as Solaris.  The :func:`system_alias` function is "
"used to implement this."
msgstr ""
"如果 *aliased* 為真值，此函式將使用各種不同於平臺通用名稱的別名來回報系統名"
"稱，例如 SunOS 將被回報為 Solaris。\\ :func:`system_alias` 函式被用於實作此功"
"能。"

#: ../../library/platform.rst:79
msgid ""
"Setting *terse* to true causes the function to return only the absolute "
"minimum information needed to identify the platform."
msgstr "將 *terse* 設為真值將導致此函式只回傳標識平臺所需的最小量資訊。"

#: ../../library/platform.rst:82
msgid ""
"On macOS, the function now uses :func:`mac_ver`, if it returns a non-empty "
"release string, to get the macOS version rather than the darwin version."
msgstr ""
"在 macOS 上，如果 :func:`mac_ver` 回傳的釋出版字串非空字串，此函式現在會使用"
"它以獲取 macOS 版本而非 darwin 版本。"

#: ../../library/platform.rst:90
msgid "Returns the (real) processor name, e.g. ``'amdk6'``."
msgstr "回傳（真實的）處理器名稱，例如 ``'amdk6'``\\ 。"

#: ../../library/platform.rst:92
msgid ""
"An empty string is returned if the value cannot be determined. Note that "
"many platforms do not provide this information or simply return the same "
"value as for :func:`machine`.  NetBSD does this."
msgstr ""
"如果該值無法確定則將回傳空字串。請注意，許多平臺都不提供此資訊或是簡單地回傳"
"與 :func:`machine` 相同的值。NetBSD 則會提供此資訊。"

#: ../../library/platform.rst:99
msgid ""
"Returns a tuple ``(buildno, builddate)`` stating the Python build number and "
"date as strings."
msgstr ""
"回傳一個 tuple ``(buildno, builddate)``\\ ，表示字串形式的 Python 建置編號和"
"日期。"

#: ../../library/platform.rst:105
msgid "Returns a string identifying the compiler used for compiling Python."
msgstr "回傳一個標識用於編譯 Python 的編譯器的字串。"

#: ../../library/platform.rst:110
msgid "Returns a string identifying the Python implementation SCM branch."
msgstr "回傳一個標識 Python 實作 SCM 分支的字串。"

#: ../../library/platform.rst:115
msgid ""
"Returns a string identifying the Python implementation. Possible return "
"values are: 'CPython', 'IronPython', 'Jython', 'PyPy'."
msgstr ""
"回傳一個標識 Python 實作的字串。可能的回傳值"
"有：'CPython'、'IronPython'、'Jython'、'PyPy'。"

#: ../../library/platform.rst:121
msgid "Returns a string identifying the Python implementation SCM revision."
msgstr "回傳一個標識 Python 實作 SCM 修訂版的字串。"

#: ../../library/platform.rst:126
msgid "Returns the Python version as string ``'major.minor.patchlevel'``."
msgstr "將 Python 版本以字串 ``'major.minor.patchlevel'`` 形式回傳。"

#: ../../library/platform.rst:128
msgid ""
"Note that unlike the Python ``sys.version``, the returned value will always "
"include the patchlevel (it defaults to 0)."
msgstr ""
"請注意此回傳值不同於 Python ``sys.version``\\ ，它總是會包括 patchlevel（預設"
"為 ``'0'``\\ ）。"

#: ../../library/platform.rst:134
msgid ""
"Returns the Python version as tuple ``(major, minor, patchlevel)`` of "
"strings."
msgstr "將 Python 版本以字串 tuple ``(major, minor, patchlevel)`` 形式回傳。"

#: ../../library/platform.rst:136
msgid ""
"Note that unlike the Python ``sys.version``, the returned value will always "
"include the patchlevel (it defaults to ``'0'``)."
msgstr ""
"請注意此回傳值不同於 Python ``sys.version``\\ ，它總是會包括 patchlevel（預設"
"為 ``'0'``\\ ）。"

#: ../../library/platform.rst:142
msgid ""
"Returns the system's release, e.g. ``'2.2.0'`` or ``'NT'``. An empty string "
"is returned if the value cannot be determined."
msgstr ""
"回傳系統的釋出版本，例如 ``'2.2.0'`` 或 ``'NT'``\\ ，如果該值無法確定則將回傳"
"一個空字串。"

#: ../../library/platform.rst:148
msgid ""
"Returns the system/OS name, such as ``'Linux'``, ``'Darwin'``, ``'Java'``, "
"``'Windows'``. An empty string is returned if the value cannot be determined."
msgstr ""
"回傳系統/OS 的名稱，例如 ``'Linux'``\\ 、\\ ``'Darwin'``\\ 、\\ ``'Java'``"
"\\ 、\\ ``'Windows'``\\ 。如果該值無法確定則回傳一個空字串。"

#: ../../library/platform.rst:154
msgid ""
"Returns ``(system, release, version)`` aliased to common marketing names "
"used for some systems.  It also does some reordering of the information in "
"some cases where it would otherwise cause confusion."
msgstr ""
"回傳做為某些系統所使用的常見行銷名稱之別名的 ``(system, release, version)``"
"\\ 。它還會在可能導致混淆的情況下對資訊進行一些重新排序。"

#: ../../library/platform.rst:161
msgid ""
"Returns the system's release version, e.g. ``'#3 on degas'``. An empty "
"string is returned if the value cannot be determined."
msgstr ""
"回傳系統的釋出版本資訊，例如 ``'#3 on degas'``\\ 。如果該值無法確定則將回傳一"
"個空字串。"

#: ../../library/platform.rst:167
msgid ""
"Fairly portable uname interface. Returns a :func:`~collections.namedtuple` "
"containing six attributes: :attr:`system`, :attr:`node`, :attr:`release`, :"
"attr:`version`, :attr:`machine`, and :attr:`processor`."
msgstr ""
"具有高可攜性 (portable) 的 uname 介面。回傳包含六個屬性的 :func:"
"`~collections.namedtuple`\\ ：\\ :attr:`system`\\ 、\\ :attr:`node`\\ 、\\ :"
"attr:`release`\\ 、\\ :attr:`version`\\ 、\\ :attr:`machine` 和 :attr:"
"`processor`\\ 。"

#: ../../library/platform.rst:171
msgid ""
"Note that this adds a sixth attribute (:attr:`processor`) not present in "
"the :func:`os.uname` result.  Also, the attribute names are different for "
"the first two attributes; :func:`os.uname` names them :attr:`sysname` and :"
"attr:`nodename`."
msgstr ""
"請注意此函式新增的第六個屬性 (:attr:`processor`) 並不存在於 :func:`os.uname` "
"的結果中。並且前兩個屬性的屬性名稱也不一致；\\ :func:`os.uname` 是將它們稱"
"為 :attr:`sysname` 和 :attr:`nodename`\\ 。"

#: ../../library/platform.rst:176
msgid "Entries which cannot be determined are set to ``''``."
msgstr "無法確定的條目會被設為 ``''``\\ 。"

#: ../../library/platform.rst:178
msgid "Result changed from a tuple to a :func:`~collections.namedtuple`."
msgstr "將結果從 tuple 改為 :func:`~collections.namedtuple`\\ 。"

#: ../../library/platform.rst:183
msgid "Java Platform"
msgstr "Java 平台"

#: ../../library/platform.rst:188
msgid "Version interface for Jython."
msgstr "Jython 的版本介面。"

#: ../../library/platform.rst:190
msgid ""
"Returns a tuple ``(release, vendor, vminfo, osinfo)`` with *vminfo* being a "
"tuple ``(vm_name, vm_release, vm_vendor)`` and *osinfo* being a tuple "
"``(os_name, os_version, os_arch)``. Values which cannot be determined are "
"set to the defaults given as parameters (which all default to ``''``)."
msgstr ""
"回傳一個 tuple ``(release, vendor, vminfo, osinfo)``\\ ，其中 *vminfo* 為 "
"tuple ``(vm_name, vm_release, vm_vendor)`` 而 *osinfo* 為 tuple ``(os_name, "
"os_version, os_arch)``\\ 。無法確定的值將被設為由參數所給定的預設值（預設均"
"為 ``''``\\ ）。"

#: ../../library/platform.rst:197
msgid "Windows Platform"
msgstr "Windows 平台"

#: ../../library/platform.rst:202
msgid ""
"Get additional version information from the Windows Registry and return a "
"tuple ``(release, version, csd, ptype)`` referring to OS release, version "
"number, CSD level (service pack) and OS type (multi/single processor). "
"Values which cannot be determined are set to the defaults given as "
"parameters (which all default to an empty string)."
msgstr ""
"從 Windows 登錄檔 (Window Registry) 獲取額外的版本資訊並回傳一個 tuple "
"``(release, version, csd, ptype)``\\ ，它代表 OS 發行版、版本號、CSD 級別 "
"(service pack) 和 OS 類型（多個/單個處理器）。"

#: ../../library/platform.rst:208
msgid ""
"As a hint: *ptype* is ``'Uniprocessor Free'`` on single processor NT "
"machines and ``'Multiprocessor Free'`` on multi processor machines. The "
"*'Free'* refers to the OS version being free of debugging code. It could "
"also state *'Checked'* which means the OS version uses debugging code, i.e. "
"code that checks arguments, ranges, etc."
msgstr ""
"一點提示：\\ *ptype* 在單個處理器的 NT 機器上為 ``'Uniprocessor Free'``\\ ，"
"而在多個處理器的機器上為 ``'Multiprocessor Free'``\\ 。\\ *'Free'* 是指該 OS "
"版本沒有除錯程式。它也可能以 *'Checked'* 表示，代表該 OS 版本使用了除錯程式，"
"即檢查引數、範圍等的程式。"

#: ../../library/platform.rst:216
msgid ""
"Returns a string representing the current Windows edition, or ``None`` if "
"the value cannot be determined.  Possible values include but are not limited "
"to ``'Enterprise'``, ``'IoTUAP'``, ``'ServerStandard'``, and "
"``'nanoserver'``."
msgstr ""
"回傳一個代表當前 Windows 版本的字串。可能的值包括但不限於 ``'Enterprise'``"
"\\ 、\\ ``'IoTUAP'``\\ 、\\ ``'ServerStandard'`` 和 ``'nanoserver'``\\ 。"

#: ../../library/platform.rst:224
msgid ""
"Return ``True`` if the Windows edition returned by :func:`win32_edition` is "
"recognized as an IoT edition."
msgstr ""
"如果 :func:`win32_edition` 回傳的 Windows 版本被識別為 IoT 版則回傳 ``True``"
"\\ 。"

#: ../../library/platform.rst:231
msgid "macOS Platform"
msgstr "macOS 平台"

#: ../../library/platform.rst:236
msgid ""
"Get macOS version information and return it as tuple ``(release, "
"versioninfo, machine)`` with *versioninfo* being a tuple ``(version, "
"dev_stage, non_release_version)``."
msgstr ""
"獲取 Mac OS 版本資訊並將其回傳為 tuple ``(release, versioninfo, machine)``"
"\\ ，其中 *versioninfo* 是一個 tuple ``(version, dev_stage, "
"non_release_version)``\\ 。"

#: ../../library/platform.rst:240
msgid ""
"Entries which cannot be determined are set to ``''``.  All tuple entries are "
"strings."
msgstr "無法確定的條目會被設為 ``''``\\ 。所有 tuple 條目均為字串。"

#: ../../library/platform.rst:245
msgid "Unix Platforms"
msgstr "Unix 平台"

#: ../../library/platform.rst:249
msgid ""
"Tries to determine the libc version against which the file executable "
"(defaults to the Python interpreter) is linked.  Returns a tuple of strings "
"``(lib, version)`` which default to the given parameters in case the lookup "
"fails."
msgstr ""
"嘗試確認可執行檔案（預設為 Python 直譯器）所連結到的 libc 版本。回傳一個字串 "
"tuple ``(lib, version)``\\ ，當查詢失敗時其預設值將被設為給定的參數值。"

#: ../../library/platform.rst:253
msgid ""
"Note that this function has intimate knowledge of how different libc "
"versions add symbols to the executable is probably only usable for "
"executables compiled using :program:`gcc`."
msgstr ""
"請注意，此函式對於不同 libc 版本如何為可執行檔案新增符號的方式有深層的關聯，"
"可能僅適用於以 :program:`gcc` 編譯出來的可執行檔案。"

#: ../../library/platform.rst:257
msgid "The file is read and scanned in chunks of *chunksize* bytes."
msgstr "檔案會以 *chunksize* 位元組大小的分塊 (chunk) 來讀取和掃描。"

#: ../../library/platform.rst:261
msgid "Linux Platforms"
msgstr "Linux 平台"

#: ../../library/platform.rst:265
msgid ""
"Get operating system identification from ``os-release`` file and return it "
"as a dict. The ``os-release`` file is a `freedesktop.org standard <https://"
"www.freedesktop.org/software/systemd/man/os-release.html>`_ and is available "
"in most Linux distributions. A noticeable exception is Android and Android-"
"based distributions."
msgstr ""
"從 ``os-release`` 檔案獲取作業系統標識，並將其作為一個字典回傳。\\ ``os-"
"release`` 檔案為 `freedesktop.org 標準 <https://www.freedesktop.org/software/"
"systemd/man/os-release.html>`_\\ 、並在大多數 Linux 發行版上可用。一個重要的"
"例外是 Android 和基於 Android 的發行版。"

#: ../../library/platform.rst:271
msgid ""
"Raises :exc:`OSError` or subclass when neither ``/etc/os-release`` nor ``/"
"usr/lib/os-release`` can be read."
msgstr ""
"當 ``/etc/os-release`` 與 ``/usr/lib/os-release`` 均無法被讀取時將引發 :exc:"
"`OSError` 或其子類別。"

#: ../../library/platform.rst:274
msgid ""
"On success, the function returns a dictionary where keys and values are "
"strings. Values have their special characters like ``\"`` and ``$`` "
"unquoted. The fields ``NAME``, ``ID``, and ``PRETTY_NAME`` are always "
"defined according to the standard. All other fields are optional. Vendors "
"may include additional fields."
msgstr ""
"成功時，該函式將回傳一個字典，其中鍵和值均為字串。值當中的特殊字元例如 ``"
"\"`` 和 ``$`` 會被移除引號 (unquoted)。欄位 ``NAME``\\ 、\\ ``ID`` 和 "
"``PRETTY_NAME`` 總會按照標準來定義。所有其他欄位都是可選的。根據不同廠商可能"
"會包括額外的欄位。"

#: ../../library/platform.rst:280
msgid ""
"Note that fields like ``NAME``, ``VERSION``, and ``VARIANT`` are strings "
"suitable for presentation to users. Programs should use fields like ``ID``, "
"``ID_LIKE``, ``VERSION_ID``, or ``VARIANT_ID`` to identify Linux "
"distributions."
msgstr ""
"請注意 ``NAME``\\ 、\\ ``VERSION`` 和 ``VARIANT`` 等欄位是適用於向使用者展示"
"的字串。程式應當使用 ``ID``\\ 、\\ ``ID_LIKE``\\ 、\\ ``VERSION_ID`` 或 "
"``VARIANT_ID`` 等欄位來標識 Linux 發行版。"

#: ../../library/platform.rst:285
msgid "Example::"
msgstr ""
"範例：\n"
"\n"
"::"
