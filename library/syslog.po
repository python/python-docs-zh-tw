# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2022, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: Python 3.12\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-11-01 00:03+0000\n"
"PO-Revision-Date: 2015-12-09 17:51+0000\n"
"Last-Translator: Liang-Bo Wang <me@liang2.tw>\n"
"Language-Team: Chinese - TAIWAN (https://github.com/python/python-docs-zh-"
"tw)\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/syslog.rst:2
msgid ":mod:`syslog` --- Unix syslog library routines"
msgstr ""

#: ../../library/syslog.rst:10
msgid ""
"This module provides an interface to the Unix ``syslog`` library routines. "
"Refer to the Unix manual pages for a detailed description of the ``syslog`` "
"facility."
msgstr ""

#: ../../library/syslog.rst:14
msgid ":ref:`Availability <availability>`: Unix, not Emscripten, not WASI."
msgstr ":ref:`適用 <availability>`：Unix、非 Emscripten、非 WASI。"

#: ../../library/syslog.rst:16
msgid ""
"This module wraps the system ``syslog`` family of routines.  A pure Python "
"library that can speak to a syslog server is available in the :mod:`logging."
"handlers` module as :class:`SysLogHandler`."
msgstr ""

#: ../../library/syslog.rst:20
msgid "The module defines the following functions:"
msgstr "該模組定義了以下函式："

#: ../../library/syslog.rst:26
msgid ""
"Send the string *message* to the system logger.  A trailing newline is added "
"if necessary.  Each message is tagged with a priority composed of a "
"*facility* and a *level*.  The optional *priority* argument, which defaults "
"to :const:`LOG_INFO`, determines the message priority.  If the facility is "
"not encoded in *priority* using logical-or (``LOG_INFO | LOG_USER``), the "
"value given in the :func:`openlog` call is used."
msgstr ""

#: ../../library/syslog.rst:33
msgid ""
"If :func:`openlog` has not been called prior to the call to :func:`syslog`, :"
"func:`openlog` will be called with no arguments."
msgstr ""

#: ../../library/syslog.rst:36
msgid ""
"Raises an :ref:`auditing event <auditing>` ``syslog.syslog`` with arguments "
"``priority``, ``message``."
msgstr ""
"引發一個附帶引數 ``priority``、``message`` 的\\ :ref:`稽核事件 <auditing>` "
"``syslog.syslog``。"

#: ../../library/syslog.rst:38
msgid ""
"In previous versions, :func:`openlog` would not be called automatically if "
"it wasn't called prior to the call to :func:`syslog`, deferring to the "
"syslog implementation to call ``openlog()``."
msgstr ""

#: ../../library/syslog.rst:43
msgid ""
"This function is restricted in subinterpreters. (Only code that runs in "
"multiple interpreters is affected and the restriction is not relevant for "
"most users.) :func:`openlog` must be called in the main interpreter before :"
"func:`syslog` may be used in a subinterpreter.  Otherwise it will raise :exc:"
"`RuntimeError`."
msgstr ""

#: ../../library/syslog.rst:53
msgid ""
"Logging options of subsequent :func:`syslog` calls can be set by calling :"
"func:`openlog`.  :func:`syslog` will call :func:`openlog` with no arguments "
"if the log is not currently open."
msgstr ""

#: ../../library/syslog.rst:57
msgid ""
"The optional *ident* keyword argument is a string which is prepended to "
"every message, and defaults to ``sys.argv[0]`` with leading path components "
"stripped.  The optional *logoption* keyword argument (default is 0) is a bit "
"field -- see below for possible values to combine.  The optional *facility* "
"keyword argument (default is :const:`LOG_USER`) sets the default facility "
"for messages which do not have a facility explicitly encoded."
msgstr ""

#: ../../library/syslog.rst:64
msgid ""
"Raises an :ref:`auditing event <auditing>` ``syslog.openlog`` with arguments "
"``ident``, ``logoption``, ``facility``."
msgstr ""
"引發一個附帶引數 ``ident``、``logoption``、``facility`` 的\\ :ref:`稽核事件 "
"<auditing>` ``syslog.openlog``。"

#: ../../library/syslog.rst:66
msgid ""
"In previous versions, keyword arguments were not allowed, and *ident* was "
"required."
msgstr ""

#: ../../library/syslog.rst:70 ../../library/syslog.rst:89
msgid ""
"This function is restricted in subinterpreters. (Only code that runs in "
"multiple interpreters is affected and the restriction is not relevant for "
"most users.) This may only be called in the main interpreter. It will raise :"
"exc:`RuntimeError` if called in a subinterpreter."
msgstr ""

#: ../../library/syslog.rst:80
msgid ""
"Reset the syslog module values and call the system library ``closelog()``."
msgstr ""

#: ../../library/syslog.rst:82
msgid ""
"This causes the module to behave as it does when initially imported.  For "
"example, :func:`openlog` will be called on the first :func:`syslog` call "
"(if :func:`openlog` hasn't already been called), and *ident* and other :func:"
"`openlog` parameters are reset to defaults."
msgstr ""

#: ../../library/syslog.rst:87
msgid ""
"Raises an :ref:`auditing event <auditing>` ``syslog.closelog`` with no "
"arguments."
msgstr ""
"引發一個不附帶引數的\\ :ref:`稽核事件 <auditing>` ``syslog.closelog``。"

#: ../../library/syslog.rst:99
msgid ""
"Set the priority mask to *maskpri* and return the previous mask value.  "
"Calls to :func:`syslog` with a priority level not set in *maskpri* are "
"ignored. The default is to log all priorities.  The function "
"``LOG_MASK(pri)`` calculates the mask for the individual priority *pri*.  "
"The function ``LOG_UPTO(pri)`` calculates the mask for all priorities up to "
"and including *pri*."
msgstr ""

#: ../../library/syslog.rst:106
msgid ""
"Raises an :ref:`auditing event <auditing>` ``syslog.setlogmask`` with "
"argument ``maskpri``."
msgstr ""
"引發一個附帶引數 ``maskpri`` 的\\ :ref:`稽核事件 <auditing>` ``syslog."
"setlogmask``。"

#: ../../library/syslog.rst:108
msgid "The module defines the following constants:"
msgstr ""

#: ../../library/syslog.rst:113
msgid "Priority levels (high to low):"
msgstr ""

#: ../../library/syslog.rst:111
msgid ""
":const:`LOG_EMERG`, :const:`LOG_ALERT`, :const:`LOG_CRIT`, :const:"
"`LOG_ERR`, :const:`LOG_WARNING`, :const:`LOG_NOTICE`, :const:`LOG_INFO`, :"
"const:`LOG_DEBUG`."
msgstr ""

#: ../../library/syslog.rst:120
msgid "Facilities:"
msgstr ""

#: ../../library/syslog.rst:116
msgid ""
":const:`LOG_KERN`, :const:`LOG_USER`, :const:`LOG_MAIL`, :const:"
"`LOG_DAEMON`, :const:`LOG_AUTH`, :const:`LOG_LPR`, :const:`LOG_NEWS`, :const:"
"`LOG_UUCP`, :const:`LOG_CRON`, :const:`LOG_SYSLOG`, :const:`LOG_LOCAL0` to :"
"const:`LOG_LOCAL7`, and, if defined in ``<syslog.h>``, :const:`LOG_AUTHPRIV`."
msgstr ""

#: ../../library/syslog.rst:126
msgid "Log options:"
msgstr ""

#: ../../library/syslog.rst:123
msgid ""
":const:`LOG_PID`, :const:`LOG_CONS`, :const:`LOG_NDELAY`, and, if defined in "
"``<syslog.h>``, :const:`LOG_ODELAY`, :const:`LOG_NOWAIT`, and :const:"
"`LOG_PERROR`."
msgstr ""

#: ../../library/syslog.rst:129
msgid "Examples"
msgstr "範例"

#: ../../library/syslog.rst:132
msgid "Simple example"
msgstr "簡單範例"

#: ../../library/syslog.rst:134
msgid "A simple set of examples::"
msgstr ""
"一組簡單範例：\n"
"\n"
"::"

#: ../../library/syslog.rst:142
msgid ""
"An example of setting some log options, these would include the process ID "
"in logged messages, and write the messages to the destination facility used "
"for mail logging::"
msgstr ""

#~ msgid ""
#~ "This module does not work or is not available on WebAssembly platforms "
#~ "``wasm32-emscripten`` and ``wasm32-wasi``. See :ref:`wasm-availability` "
#~ "for more information."
#~ msgstr ""
#~ "此模組在 WebAssembly 平台 ``wasm32-emscripten`` 和 ``wasm32-wasi`` 上無法"
#~ "作用或無法使用。有關更多資訊，請參閱 :ref:`wasm-availability`。"
