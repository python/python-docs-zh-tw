# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2022, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: Python 3.12\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-05-10 00:04+0000\n"
"PO-Revision-Date: 2024-04-29 15:24+0800\n"
"Last-Translator: Adrian Liaw <adrianliaw2000@gmail.com>\n"
"Language-Team: Chinese - TAIWAN (https://github.com/python/python-docs-zh-"
"tw)\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Poedit 3.4.2\n"

#: ../../library/os.rst:2
msgid ":mod:`!os` --- Miscellaneous operating system interfaces"
msgstr ":mod:`!os` --- 各種作業系統介面"

#: ../../library/os.rst:7
msgid "**Source code:** :source:`Lib/os.py`"
msgstr "**原始碼：**\\ :source:`Lib/os.py`"

#: ../../library/os.rst:11
msgid ""
"This module provides a portable way of using operating system dependent "
"functionality.  If you just want to read or write a file see :func:`open`, "
"if you want to manipulate paths, see the :mod:`os.path` module, and if you "
"want to read all the lines in all the files on the command line see the :mod:"
"`fileinput` module.  For creating temporary files and directories see the :"
"mod:`tempfile` module, and for high-level file and directory handling see "
"the :mod:`shutil` module."
msgstr ""
"該模組提供了一種便利的方式來操作與作業系統相關的功能。如果你想讀取或寫入檔"
"案，請參閱 :func:`open` ，如果你想操作檔案路徑，請參閱 :mod:`os.path` 模組，"
"如果你想透過命令列查看所有檔案中的所有內容，請查看 :mod:`fileinput` 模組。要"
"建立臨時檔案和目錄，請參閱 :mod:`tempfile` 模組，要操作高級檔案和目錄，請參"
"閱 :mod:`shutil` 模組。"

#: ../../library/os.rst:19
msgid "Notes on the availability of these functions:"
msgstr "關於這些功能的可用性說明："

#: ../../library/os.rst:21
msgid ""
"The design of all built-in operating system dependent modules of Python is "
"such that as long as the same functionality is available, it uses the same "
"interface; for example, the function ``os.stat(path)`` returns stat "
"information about *path* in the same format (which happens to have "
"originated with the POSIX interface)."
msgstr ""
"Python 所有內建作業系統相關的模組設計是這樣：只要有相同的函式可使用，就會使用"
"相同的介面 （interface）。舉例來說，``os.stat(path)`` 函式會以相同格式回傳關"
"於 *path* 的統計資訊（這剛好來自於 POSIX 的介面。）。"

#: ../../library/os.rst:27
msgid ""
"Extensions peculiar to a particular operating system are also available "
"through the :mod:`os` module, but using them is of course a threat to "
"portability."
msgstr ""
"對於特定的作業系統獨有的擴充功能也可以透過 :mod:`os` 取得，但使用它們的時候對"
"於可移植性無疑會是個問題。"

#: ../../library/os.rst:31
msgid ""
"All functions accepting path or file names accept both bytes and string "
"objects, and result in an object of the same type, if a path or file name is "
"returned."
msgstr ""
"所有接受檔案路徑和檔案名稱的函式皆接受位元組 (bytes) 和字串物件 (string "
"objects)，且如果回傳檔案路徑或檔案名稱，則會產出相同型別的物件。"

#: ../../library/os.rst:35
msgid ""
"On VxWorks, os.popen, os.fork, os.execv and os.spawn*p* are not supported."
msgstr "在 VxWorks, 不支援 os.popen、os.fork、os.execv 和 os.spawn*p*。"

#: ../../library/os.rst:37
msgid ""
"On WebAssembly platforms ``wasm32-emscripten`` and ``wasm32-wasi``, large "
"parts of the :mod:`os` module are not available or behave differently. API "
"related to processes (e.g. :func:`~os.fork`, :func:`~os.execve`), signals (e."
"g. :func:`~os.kill`, :func:`~os.wait`), and resources (e.g. :func:`~os."
"nice`) are not available. Others like :func:`~os.getuid` and :func:`~os."
"getpid` are emulated or stubs."
msgstr ""
"在 WebAssembly 平台 ``wasm32-emscripten`` 和 ``wasm32-wasi`` 上，大部分 :mod:"
"`os` 模組無法使用或行為不同。與行程（Process）（例如 :func:`~os.fork`、:func:"
"`~os.execve`\\ ）、訊號（例如 :func:`~os.kill`、:func:`~os.wait`\\ ），與資源"
"（例如 :func:`~os.nice`\\ ）相關的 API 不可使用。其他諸如 :func:`~os.getuid` "
"和 :func:`~os.getpid` 的相關 API 是 emulated 或 stubs。"

#: ../../library/os.rst:47
msgid ""
"All functions in this module raise :exc:`OSError` (or subclasses thereof) in "
"the case of invalid or inaccessible file names and paths, or other arguments "
"that have the correct type, but are not accepted by the operating system."
msgstr ""
"在檔案名稱和路徑找不到或無效的時候，或引數型別正確但作業系統不接受的時候，在"
"此模組中的所有的函式都會引發 :exc:`OSError`\\ （或其子類別）。"

#: ../../library/os.rst:53
msgid "An alias for the built-in :exc:`OSError` exception."
msgstr "內建例外 :exc:`OSError` 的別名。"

#: ../../library/os.rst:58
msgid ""
"The name of the operating system dependent module imported.  The following "
"names have currently been registered: ``'posix'``, ``'nt'``, ``'java'``."
msgstr ""

#: ../../library/os.rst:63
msgid ""
":data:`sys.platform` has a finer granularity.  :func:`os.uname` gives system-"
"dependent version information."
msgstr ""

#: ../../library/os.rst:66
msgid ""
"The :mod:`platform` module provides detailed checks for the system's "
"identity."
msgstr ""

#: ../../library/os.rst:74
msgid "File Names, Command Line Arguments, and Environment Variables"
msgstr ""

#: ../../library/os.rst:76
msgid ""
"In Python, file names, command line arguments, and environment variables are "
"represented using the string type. On some systems, decoding these strings "
"to and from bytes is necessary before passing them to the operating system. "
"Python uses the :term:`filesystem encoding and error handler` to perform "
"this conversion (see :func:`sys.getfilesystemencoding`)."
msgstr ""

#: ../../library/os.rst:82
msgid ""
"The :term:`filesystem encoding and error handler` are configured at Python "
"startup by the :c:func:`PyConfig_Read` function: see :c:member:`~PyConfig."
"filesystem_encoding` and :c:member:`~PyConfig.filesystem_errors` members of :"
"c:type:`PyConfig`."
msgstr ""

#: ../../library/os.rst:87
msgid ""
"On some systems, conversion using the file system encoding may fail. In this "
"case, Python uses the :ref:`surrogateescape encoding error handler "
"<surrogateescape>`, which means that undecodable bytes are replaced by a "
"Unicode character U+DC\\ *xx* on decoding, and these are again translated to "
"the original byte on encoding."
msgstr ""

#: ../../library/os.rst:95
msgid ""
"The :term:`file system encoding <filesystem encoding and error handler>` "
"must guarantee to successfully decode all bytes below 128. If the file "
"system encoding fails to provide this guarantee, API functions can raise :"
"exc:`UnicodeError`."
msgstr ""

#: ../../library/os.rst:100
msgid "See also the :term:`locale encoding`."
msgstr "另請參閱 :term:`locale encoding`\\ 。"

#: ../../library/os.rst:106
msgid "Python UTF-8 Mode"
msgstr "Python UTF-8 模式"

#: ../../library/os.rst:108
msgid "See :pep:`540` for more details."
msgstr "更多資訊請見 :pep:`540`\\ 。"

#: ../../library/os.rst:111
msgid ""
"The Python UTF-8 Mode ignores the :term:`locale encoding` and forces the "
"usage of the UTF-8 encoding:"
msgstr ""
"Python 在 UTF-8 模式下會忽略 :term:`locale encoding` 並且強制使用 UTF-8 去編"
"碼："

#: ../../library/os.rst:114
msgid ""
"Use UTF-8 as the :term:`filesystem encoding <filesystem encoding and error "
"handler>`."
msgstr ""

#: ../../library/os.rst:116
msgid ":func:`sys.getfilesystemencoding()` returns ``'utf-8'``."
msgstr ":func:`sys.getfilesystemencoding()` 回傳 ``'utf-8'``。"

#: ../../library/os.rst:117
msgid ""
":func:`locale.getpreferredencoding()` returns ``'utf-8'`` (the "
"*do_setlocale* argument has no effect)."
msgstr ""

#: ../../library/os.rst:119
msgid ""
":data:`sys.stdin`, :data:`sys.stdout`, and :data:`sys.stderr` all use UTF-8 "
"as their text encoding, with the ``surrogateescape`` :ref:`error handler "
"<error-handlers>` being enabled for :data:`sys.stdin` and :data:`sys.stdout` "
"(:data:`sys.stderr` continues to use ``backslashreplace`` as it does in the "
"default locale-aware mode)"
msgstr ""

#: ../../library/os.rst:124
msgid ""
"On Unix, :func:`os.device_encoding` returns ``'utf-8'`` rather than the "
"device encoding."
msgstr ""

#: ../../library/os.rst:127
msgid ""
"Note that the standard stream settings in UTF-8 mode can be overridden by :"
"envvar:`PYTHONIOENCODING` (just as they can be in the default locale-aware "
"mode)."
msgstr ""

#: ../../library/os.rst:131
msgid ""
"As a consequence of the changes in those lower level APIs, other higher "
"level APIs also exhibit different default behaviours:"
msgstr ""

#: ../../library/os.rst:134
msgid ""
"Command line arguments, environment variables and filenames are decoded to "
"text using the UTF-8 encoding."
msgstr ""

#: ../../library/os.rst:136
msgid ":func:`os.fsdecode()` and :func:`os.fsencode()` use the UTF-8 encoding."
msgstr ""

#: ../../library/os.rst:137
msgid ""
":func:`open()`, :func:`io.open()`, and :func:`codecs.open()` use the UTF-8 "
"encoding by default. However, they still use the strict error handler by "
"default so that attempting to open a binary file in text mode is likely to "
"raise an exception rather than producing nonsense data."
msgstr ""

#: ../../library/os.rst:142
msgid ""
"The :ref:`Python UTF-8 Mode <utf8-mode>` is enabled if the LC_CTYPE locale "
"is ``C`` or ``POSIX`` at Python startup (see the :c:func:`PyConfig_Read` "
"function)."
msgstr ""

#: ../../library/os.rst:146
msgid ""
"It can be enabled or disabled using the :option:`-X utf8 <-X>` command line "
"option and the :envvar:`PYTHONUTF8` environment variable."
msgstr ""

#: ../../library/os.rst:149
msgid ""
"If the :envvar:`PYTHONUTF8` environment variable is not set at all, then the "
"interpreter defaults to using the current locale settings, *unless* the "
"current locale is identified as a legacy ASCII-based locale (as described "
"for :envvar:`PYTHONCOERCECLOCALE`), and locale coercion is either disabled "
"or fails. In such legacy locales, the interpreter will default to enabling "
"UTF-8 mode unless explicitly instructed not to do so."
msgstr ""

#: ../../library/os.rst:156
msgid ""
"The Python UTF-8 Mode can only be enabled at the Python startup. Its value "
"can be read from :data:`sys.flags.utf8_mode <sys.flags>`."
msgstr ""

#: ../../library/os.rst:159
msgid ""
"See also the :ref:`UTF-8 mode on Windows <win-utf8-mode>` and the :term:"
"`filesystem encoding and error handler`."
msgstr ""

#: ../../library/os.rst:164
msgid ":pep:`686`"
msgstr ":pep:`686`"

#: ../../library/os.rst:165
msgid "Python 3.15 will make :ref:`utf8-mode` default."
msgstr "Python 3.15 預設使用 :ref:`utf8-mode`"

#: ../../library/os.rst:171
msgid "Process Parameters"
msgstr "行程參數"

#: ../../library/os.rst:173
msgid ""
"These functions and data items provide information and operate on the "
"current process and user."
msgstr ""

#: ../../library/os.rst:179
msgid ""
"Return the filename corresponding to the controlling terminal of the process."
msgstr ""

#: ../../library/os.rst:181 ../../library/os.rst:358 ../../library/os.rst:367
#: ../../library/os.rst:389 ../../library/os.rst:398 ../../library/os.rst:434
#: ../../library/os.rst:442 ../../library/os.rst:480 ../../library/os.rst:491
#: ../../library/os.rst:512 ../../library/os.rst:522 ../../library/os.rst:545
#: ../../library/os.rst:579 ../../library/os.rst:586 ../../library/os.rst:593
#: ../../library/os.rst:602 ../../library/os.rst:652 ../../library/os.rst:661
#: ../../library/os.rst:678 ../../library/os.rst:687 ../../library/os.rst:694
#: ../../library/os.rst:703 ../../library/os.rst:712 ../../library/os.rst:719
#: ../../library/os.rst:726 ../../library/os.rst:735 ../../library/os.rst:1161
#: ../../library/os.rst:1345 ../../library/os.rst:1371
#: ../../library/os.rst:1608 ../../library/os.rst:1628
#: ../../library/os.rst:1637 ../../library/os.rst:2021
#: ../../library/os.rst:2110 ../../library/os.rst:2150
#: ../../library/os.rst:2440 ../../library/os.rst:2462
#: ../../library/os.rst:4043 ../../library/os.rst:4050
#: ../../library/os.rst:4057 ../../library/os.rst:4064
#: ../../library/os.rst:4071 ../../library/os.rst:4078
#: ../../library/os.rst:4085 ../../library/os.rst:4093
#: ../../library/os.rst:4101 ../../library/os.rst:4108
#: ../../library/os.rst:4115 ../../library/os.rst:4124
#: ../../library/os.rst:4132 ../../library/os.rst:4140
#: ../../library/os.rst:4147 ../../library/os.rst:4154
#: ../../library/os.rst:4230 ../../library/os.rst:4270
#: ../../library/os.rst:4277 ../../library/os.rst:4307
#: ../../library/os.rst:4434 ../../library/os.rst:4483
#: ../../library/os.rst:4720 ../../library/os.rst:4754
#: ../../library/os.rst:4815 ../../library/os.rst:4829
#: ../../library/os.rst:4846 ../../library/os.rst:4861
#: ../../library/os.rst:4872 ../../library/os.rst:4884
#: ../../library/os.rst:4897 ../../library/os.rst:4906
#: ../../library/os.rst:4916 ../../library/os.rst:4929
#: ../../library/os.rst:4980 ../../library/os.rst:4991
#: ../../library/os.rst:5003 ../../library/os.rst:5010
#: ../../library/os.rst:5019 ../../library/os.rst:5028
#: ../../library/os.rst:5037 ../../library/os.rst:5046
msgid ":ref:`Availability <availability>`: Unix, not Emscripten, not WASI."
msgstr ":ref:`適用 <availability>`：Unix、非 Emscripten、非 WASI。"

#: ../../library/os.rst:186
msgid ""
"A :term:`mapping` object where keys and values are strings that represent "
"the process environment.  For example, ``environ['HOME']`` is the pathname "
"of your home directory (on some platforms), and is equivalent to "
"``getenv(\"HOME\")`` in C."
msgstr ""

#: ../../library/os.rst:191
msgid ""
"This mapping is captured the first time the :mod:`os` module is imported, "
"typically during Python startup as part of processing :file:`site.py`.  "
"Changes to the environment made after this time are not reflected in :data:"
"`os.environ`, except for changes made by modifying :data:`os.environ` "
"directly."
msgstr ""

#: ../../library/os.rst:196
msgid ""
"This mapping may be used to modify the environment as well as query the "
"environment.  :func:`putenv` will be called automatically when the mapping "
"is modified."
msgstr ""

#: ../../library/os.rst:200
msgid ""
"On Unix, keys and values use :func:`sys.getfilesystemencoding` and "
"``'surrogateescape'`` error handler. Use :data:`environb` if you would like "
"to use a different encoding."
msgstr ""

#: ../../library/os.rst:204
msgid ""
"On Windows, the keys are converted to uppercase. This also applies when "
"getting, setting, or deleting an item. For example, ``environ['monty'] = "
"'python'`` maps the key ``'MONTY'`` to the value ``'python'``."
msgstr ""

#: ../../library/os.rst:211
msgid ""
"Calling :func:`putenv` directly does not change :data:`os.environ`, so it's "
"better to modify :data:`os.environ`."
msgstr ""

#: ../../library/os.rst:216
msgid ""
"On some platforms, including FreeBSD and macOS, setting ``environ`` may "
"cause memory leaks.  Refer to the system documentation for :c:func:`!putenv`."
msgstr ""

#: ../../library/os.rst:220
msgid ""
"You can delete items in this mapping to unset environment variables. :func:"
"`unsetenv` will be called automatically when an item is deleted from :data:"
"`os.environ`, and when one of the :meth:`pop` or :meth:`clear` methods is "
"called."
msgstr ""

#: ../../library/os.rst:225 ../../library/os.rst:241
msgid ""
"Updated to support :pep:`584`'s merge (``|``) and update (``|=``) operators."
msgstr ""

#: ../../library/os.rst:231
msgid ""
"Bytes version of :data:`environ`: a :term:`mapping` object where both keys "
"and values are :class:`bytes` objects representing the process environment. :"
"data:`environ` and :data:`environb` are synchronized (modifying :data:"
"`environb` updates :data:`environ`, and vice versa)."
msgstr ""

#: ../../library/os.rst:236
msgid ""
":data:`environb` is only available if :const:`supports_bytes_environ` is "
"``True``."
msgstr ""

#: ../../library/os.rst:250
msgid "These functions are described in :ref:`os-file-dir`."
msgstr ""

#: ../../library/os.rst:255
msgid ""
"Encode :term:`path-like <path-like object>` *filename* to the :term:"
"`filesystem encoding and error handler`; return :class:`bytes` unchanged."
msgstr ""

#: ../../library/os.rst:259
msgid ":func:`fsdecode` is the reverse function."
msgstr ""

#: ../../library/os.rst:263 ../../library/os.rst:278
msgid ""
"Support added to accept objects implementing the :class:`os.PathLike` "
"interface."
msgstr ""

#: ../../library/os.rst:270
msgid ""
"Decode the :term:`path-like <path-like object>` *filename* from the :term:"
"`filesystem encoding and error handler`; return :class:`str` unchanged."
msgstr ""

#: ../../library/os.rst:274
msgid ":func:`fsencode` is the reverse function."
msgstr ""

#: ../../library/os.rst:285
msgid "Return the file system representation of the path."
msgstr ""

#: ../../library/os.rst:287
msgid ""
"If :class:`str` or :class:`bytes` is passed in, it is returned unchanged. "
"Otherwise :meth:`~os.PathLike.__fspath__` is called and its value is "
"returned as long as it is a :class:`str` or :class:`bytes` object. In all "
"other cases, :exc:`TypeError` is raised."
msgstr ""

#: ../../library/os.rst:297
msgid ""
"An :term:`abstract base class` for objects representing a file system path, "
"e.g. :class:`pathlib.PurePath`."
msgstr ""

#: ../../library/os.rst:304
msgid "Return the file system path representation of the object."
msgstr ""

#: ../../library/os.rst:306
msgid ""
"The method should only return a :class:`str` or :class:`bytes` object, with "
"the preference being for :class:`str`."
msgstr ""

#: ../../library/os.rst:312
msgid ""
"Return the value of the environment variable *key* as a string if it exists, "
"or *default* if it doesn't. *key* is a string. Note that since :func:"
"`getenv` uses :data:`os.environ`, the mapping of :func:`getenv` is similarly "
"also captured on import, and the function may not reflect future environment "
"changes."
msgstr ""

#: ../../library/os.rst:318
msgid ""
"On Unix, keys and values are decoded with :func:`sys.getfilesystemencoding` "
"and ``'surrogateescape'`` error handler. Use :func:`os.getenvb` if you would "
"like to use a different encoding."
msgstr ""

#: ../../library/os.rst:322 ../../library/os.rst:1086 ../../library/os.rst:1097
#: ../../library/os.rst:1110 ../../library/os.rst:1357
#: ../../library/os.rst:1649 ../../library/os.rst:1797
#: ../../library/os.rst:2540 ../../library/os.rst:3382
#: ../../library/os.rst:3419 ../../library/os.rst:4035
#: ../../library/os.rst:4571 ../../library/os.rst:4582
#: ../../library/os.rst:4699
msgid ":ref:`Availability <availability>`: Unix, Windows."
msgstr ":ref:`適用 <availability>`：Unix、Windows。"

#: ../../library/os.rst:327
msgid ""
"Return the value of the environment variable *key* as bytes if it exists, or "
"*default* if it doesn't. *key* must be bytes. Note that since :func:"
"`getenvb` uses :data:`os.environb`, the mapping of :func:`getenvb` is "
"similarly also captured on import, and the function may not reflect future "
"environment changes."
msgstr ""

#: ../../library/os.rst:334
msgid ""
":func:`getenvb` is only available if :const:`supports_bytes_environ` is "
"``True``."
msgstr ""

#: ../../library/os.rst:337 ../../library/os.rst:376 ../../library/os.rst:533
#: ../../library/os.rst:787 ../../library/os.rst:1004 ../../library/os.rst:1019
#: ../../library/os.rst:1030 ../../library/os.rst:1053
#: ../../library/os.rst:1074 ../../library/os.rst:1138
#: ../../library/os.rst:1150 ../../library/os.rst:1396
#: ../../library/os.rst:1411 ../../library/os.rst:1424
#: ../../library/os.rst:1493 ../../library/os.rst:1708
#: ../../library/os.rst:1735 ../../library/os.rst:1770
#: ../../library/os.rst:2093 ../../library/os.rst:2124
#: ../../library/os.rst:2181 ../../library/os.rst:2506
#: ../../library/os.rst:2518 ../../library/os.rst:3248
#: ../../library/os.rst:3405 ../../library/os.rst:3638
#: ../../library/os.rst:5194 ../../library/os.rst:5203
#: ../../library/os.rst:5224 ../../library/os.rst:5234
#: ../../library/os.rst:5243
msgid ":ref:`Availability <availability>`: Unix."
msgstr ":ref:`適用 <availability>`：Unix。"

#: ../../library/os.rst:344
msgid ""
"Returns the list of directories that will be searched for a named "
"executable, similar to a shell, when launching a process. *env*, when "
"specified, should be an environment variable dictionary to lookup the PATH "
"in. By default, when *env* is ``None``, :data:`environ` is used."
msgstr ""

#: ../../library/os.rst:355
msgid ""
"Return the effective group id of the current process.  This corresponds to "
"the \"set id\" bit on the file being executed in the current process."
msgstr ""

#: ../../library/os.rst:365
msgid "Return the current process's effective user id."
msgstr ""

#: ../../library/os.rst:374
msgid "Return the real group id of the current process."
msgstr ""

#: ../../library/os.rst:378 ../../library/os.rst:451 ../../library/os.rst:535
#: ../../library/os.rst:758
msgid ""
"The function is a stub on Emscripten and WASI, see :ref:`wasm-availability` "
"for more information."
msgstr ""

#: ../../library/os.rst:384
msgid ""
"Return list of group ids that *user* belongs to. If *group* is not in the "
"list, it is included; typically, *group* is specified as the group ID field "
"from the password record for *user*, because that group ID will otherwise be "
"potentially omitted."
msgstr ""

#: ../../library/os.rst:396
msgid ""
"Return list of supplemental group ids associated with the current process."
msgstr ""

#: ../../library/os.rst:402
msgid ""
"On macOS, :func:`getgroups` behavior differs somewhat from other Unix "
"platforms. If the Python interpreter was built with a deployment target of "
"``10.5`` or earlier, :func:`getgroups` returns the list of effective group "
"ids associated with the current user process; this list is limited to a "
"system-defined number of entries, typically 16, and may be modified by calls "
"to :func:`setgroups` if suitably privileged. If built with a deployment "
"target greater than ``10.5``, :func:`getgroups` returns the current group "
"access list for the user associated with the effective user id of the "
"process; the group access list may change over the lifetime of the process, "
"it is not affected by calls to :func:`setgroups`, and its length is not "
"limited to 16.  The deployment target value, :const:"
"`MACOSX_DEPLOYMENT_TARGET`, can be obtained with :func:`sysconfig."
"get_config_var`."
msgstr ""

#: ../../library/os.rst:419
msgid ""
"Return the name of the user logged in on the controlling terminal of the "
"process.  For most purposes, it is more useful to use :func:`getpass."
"getuser` since the latter checks the environment variables :envvar:`LOGNAME` "
"or :envvar:`USERNAME` to find out who the user is, and falls back to ``pwd."
"getpwuid(os.getuid())[0]`` to get the login name of the current real user id."
msgstr ""

#: ../../library/os.rst:426 ../../library/os.rst:462 ../../library/os.rst:4000
#: ../../library/os.rst:4254 ../../library/os.rst:4552
#: ../../library/os.rst:4676 ../../library/os.rst:4795
#: ../../library/os.rst:4964
msgid ""
":ref:`Availability <availability>`: Unix, Windows, not Emscripten, not WASI."
msgstr ":ref:`適用 <availability>`：Unix、Windows、非 Emscripten、非 WASI。"

#: ../../library/os.rst:431
msgid ""
"Return the process group id of the process with process id *pid*. If *pid* "
"is 0, the process group id of the current process is returned."
msgstr ""

#: ../../library/os.rst:440
msgid "Return the id of the current process group."
msgstr ""

#: ../../library/os.rst:449
msgid "Return the current process id."
msgstr ""

#: ../../library/os.rst:458
msgid ""
"Return the parent's process id.  When the parent process has exited, on Unix "
"the id returned is the one of the init process (1), on Windows it is still "
"the same id, which may be already reused by another process."
msgstr ""

#: ../../library/os.rst:464
msgid "Added support for Windows."
msgstr "新增對 Windows 的支援。"

#: ../../library/os.rst:472
msgid ""
"Get program scheduling priority.  The value *which* is one of :const:"
"`PRIO_PROCESS`, :const:`PRIO_PGRP`, or :const:`PRIO_USER`, and *who* is "
"interpreted relative to *which* (a process identifier for :const:"
"`PRIO_PROCESS`, process group identifier for :const:`PRIO_PGRP`, and a user "
"ID for :const:`PRIO_USER`).  A zero value for *who* denotes (respectively) "
"the calling process, the process group of the calling process, or the real "
"user ID of the calling process."
msgstr ""

#: ../../library/os.rst:489 ../../library/os.rst:501
msgid ""
"Parameters for the :func:`getpriority` and :func:`setpriority` functions."
msgstr ""

#: ../../library/os.rst:503
msgid ":ref:`Availability <availability>`: macOS"
msgstr ":ref:`適用 <availability>`：macOS"

#: ../../library/os.rst:509
msgid ""
"Return a tuple (ruid, euid, suid) denoting the current process's real, "
"effective, and saved user ids."
msgstr ""

#: ../../library/os.rst:519
msgid ""
"Return a tuple (rgid, egid, sgid) denoting the current process's real, "
"effective, and saved group ids."
msgstr ""

#: ../../library/os.rst:531
msgid "Return the current process's real user id."
msgstr ""

#: ../../library/os.rst:541
msgid ""
"Call the system initgroups() to initialize the group access list with all of "
"the groups of which the specified username is a member, plus the specified "
"group id."
msgstr ""

#: ../../library/os.rst:554
msgid ""
"Set the environment variable named *key* to the string *value*.  Such "
"changes to the environment affect subprocesses started with :func:`os."
"system`, :func:`popen` or :func:`fork` and :func:`execv`."
msgstr ""

#: ../../library/os.rst:558
msgid ""
"Assignments to items in :data:`os.environ` are automatically translated into "
"corresponding calls to :func:`putenv`; however, calls to :func:`putenv` "
"don't update :data:`os.environ`, so it is actually preferable to assign to "
"items of :data:`os.environ`. This also applies to :func:`getenv` and :func:"
"`getenvb`, which respectively use :data:`os.environ` and :data:`os.environb` "
"in their implementations."
msgstr ""

#: ../../library/os.rst:566
msgid ""
"On some platforms, including FreeBSD and macOS, setting ``environ`` may "
"cause memory leaks. Refer to the system documentation for :c:func:`!putenv`."
msgstr ""

#: ../../library/os.rst:569
msgid ""
"Raises an :ref:`auditing event <auditing>` ``os.putenv`` with arguments "
"``key``, ``value``."
msgstr ""
"引發一個附帶引數 ``key``、``value`` 的\\ :ref:`稽核事件 <auditing>` ``os."
"putenv``。"

#: ../../library/os.rst:571
msgid "The function is now always available."
msgstr ""

#: ../../library/os.rst:577
msgid "Set the current process's effective group id."
msgstr ""

#: ../../library/os.rst:584
msgid "Set the current process's effective user id."
msgstr ""

#: ../../library/os.rst:591
msgid "Set the current process' group id."
msgstr ""

#: ../../library/os.rst:598
msgid ""
"Set the list of supplemental group ids associated with the current process "
"to *groups*. *groups* must be a sequence, and each element must be an "
"integer identifying a group. This operation is typically available only to "
"the superuser."
msgstr ""

#: ../../library/os.rst:604
msgid ""
"On macOS, the length of *groups* may not exceed the system-defined maximum "
"number of effective group ids, typically 16. See the documentation for :func:"
"`getgroups` for cases where it may not return the same group list set by "
"calling setgroups()."
msgstr ""

#: ../../library/os.rst:611
msgid ""
"Reassociate the current thread with a Linux namespace. See the :manpage:"
"`setns(2)` and :manpage:`namespaces(7)` man pages for more details."
msgstr ""

#: ../../library/os.rst:615
msgid ""
"If *fd* refers to a :file:`/proc/{pid}/ns/` link, ``setns()`` reassociates "
"the calling thread with the namespace associated with that link, and "
"*nstype* may be set to one of the :ref:`CLONE_NEW* constants <os-unshare-"
"clone-flags>` to impose constraints on the operation (``0`` means no "
"constraints)."
msgstr ""

#: ../../library/os.rst:622
msgid ""
"Since Linux 5.8, *fd* may refer to a PID file descriptor obtained from :func:"
"`~os.pidfd_open`. In this case, ``setns()`` reassociates the calling thread "
"into one or more of the same namespaces as the thread referred to by *fd*. "
"This is subject to any constraints imposed by *nstype*, which is a bit mask "
"combining one or more of the :ref:`CLONE_NEW* constants <os-unshare-clone-"
"flags>`, e.g. ``setns(fd, os.CLONE_NEWUTS | os.CLONE_NEWPID)``. The caller's "
"memberships in unspecified namespaces are left unchanged."
msgstr ""

#: ../../library/os.rst:631
msgid ""
"*fd* can be any object with a :meth:`~io.IOBase.fileno` method, or a raw "
"file descriptor."
msgstr ""

#: ../../library/os.rst:633
msgid ""
"This example reassociates the thread with the ``init`` process's network "
"namespace::"
msgstr ""

#: ../../library/os.rst:639
msgid ":ref:`Availability <availability>`: Linux >= 3.0 with glibc >= 2.14."
msgstr ":ref:`適用 <availability>`：Linux 3.0 以上且具有 glibc 2.14 以上。"

#: ../../library/os.rst:645
msgid "The :func:`~os.unshare` function."
msgstr ":func:`~os.unshare` 函式。"

#: ../../library/os.rst:649
msgid ""
"Call the system call :c:func:`!setpgrp` or ``setpgrp(0, 0)`` depending on "
"which version is implemented (if any).  See the Unix manual for the "
"semantics."
msgstr ""

#: ../../library/os.rst:657
msgid ""
"Call the system call :c:func:`!setpgid` to set the process group id of the "
"process with id *pid* to the process group with id *pgrp*.  See the Unix "
"manual for the semantics."
msgstr ""

#: ../../library/os.rst:668
msgid ""
"Set program scheduling priority. The value *which* is one of :const:"
"`PRIO_PROCESS`, :const:`PRIO_PGRP`, or :const:`PRIO_USER`, and *who* is "
"interpreted relative to *which* (a process identifier for :const:"
"`PRIO_PROCESS`, process group identifier for :const:`PRIO_PGRP`, and a user "
"ID for :const:`PRIO_USER`). A zero value for *who* denotes (respectively) "
"the calling process, the process group of the calling process, or the real "
"user ID of the calling process. *priority* is a value in the range -20 to "
"19. The default priority is 0; lower priorities cause more favorable "
"scheduling."
msgstr ""

#: ../../library/os.rst:685
msgid "Set the current process's real and effective group ids."
msgstr ""

#: ../../library/os.rst:692
msgid "Set the current process's real, effective, and saved group ids."
msgstr ""

#: ../../library/os.rst:701
msgid "Set the current process's real, effective, and saved user ids."
msgstr ""

#: ../../library/os.rst:710
msgid "Set the current process's real and effective user ids."
msgstr ""

#: ../../library/os.rst:717
msgid ""
"Call the system call :c:func:`!getsid`.  See the Unix manual for the "
"semantics."
msgstr ""

#: ../../library/os.rst:724
msgid ""
"Call the system call :c:func:`!setsid`.  See the Unix manual for the "
"semantics."
msgstr ""

#: ../../library/os.rst:733
msgid "Set the current process's user id."
msgstr ""

#: ../../library/os.rst:741
msgid ""
"Return the error message corresponding to the error code in *code*. On "
"platforms where :c:func:`!strerror` returns ``NULL`` when given an unknown "
"error number, :exc:`ValueError` is raised."
msgstr ""

#: ../../library/os.rst:748
msgid ""
"``True`` if the native OS type of the environment is bytes (eg. ``False`` on "
"Windows)."
msgstr ""

#: ../../library/os.rst:756
msgid "Set the current numeric umask and return the previous umask."
msgstr ""

#: ../../library/os.rst:768
msgid ""
"Returns information identifying the current operating system. The return "
"value is an object with five attributes:"
msgstr ""

#: ../../library/os.rst:771
msgid ":attr:`sysname` - operating system name"
msgstr ":attr:`sysname` - 作業系統名稱"

#: ../../library/os.rst:772
msgid ":attr:`nodename` - name of machine on network (implementation-defined)"
msgstr ""

#: ../../library/os.rst:773
msgid ":attr:`release` - operating system release"
msgstr ""

#: ../../library/os.rst:774
msgid ":attr:`version` - operating system version"
msgstr ":attr:`version` - 作業系統版本"

#: ../../library/os.rst:775
msgid ":attr:`machine` - hardware identifier"
msgstr ""

#: ../../library/os.rst:777
msgid ""
"For backwards compatibility, this object is also iterable, behaving like a "
"five-tuple containing :attr:`sysname`, :attr:`nodename`, :attr:`release`, :"
"attr:`version`, and :attr:`machine` in that order."
msgstr ""

#: ../../library/os.rst:782
msgid ""
"Some systems truncate :attr:`nodename` to 8 characters or to the leading "
"component; a better way to get the hostname is :func:`socket.gethostname`  "
"or even ``socket.gethostbyaddr(socket.gethostname())``."
msgstr ""

#: ../../library/os.rst:789 ../../library/os.rst:4701
msgid ""
"Return type changed from a tuple to a tuple-like object with named "
"attributes."
msgstr ""

#: ../../library/os.rst:798
msgid ""
"Unset (delete) the environment variable named *key*. Such changes to the "
"environment affect subprocesses started with :func:`os.system`, :func:"
"`popen` or :func:`fork` and :func:`execv`."
msgstr ""

#: ../../library/os.rst:802
msgid ""
"Deletion of items in :data:`os.environ` is automatically translated into a "
"corresponding call to :func:`unsetenv`; however, calls to :func:`unsetenv` "
"don't update :data:`os.environ`, so it is actually preferable to delete "
"items of :data:`os.environ`."
msgstr ""

#: ../../library/os.rst:807
msgid ""
"Raises an :ref:`auditing event <auditing>` ``os.unsetenv`` with argument "
"``key``."
msgstr ""
"引發一個附帶引數 ``key`` 的\\ :ref:`稽核事件 <auditing>` ``os.unsetenv``。"

#: ../../library/os.rst:809
msgid "The function is now always available and is also available on Windows."
msgstr ""

#: ../../library/os.rst:815
msgid ""
"Disassociate parts of the process execution context, and move them into a "
"newly created namespace. See the :manpage:`unshare(2)` man page for more "
"details. The *flags* argument is a bit mask, combining zero or more of the :"
"ref:`CLONE_* constants <os-unshare-clone-flags>`, that specifies which parts "
"of the execution context should be unshared from their existing associations "
"and moved to a new namespace. If the *flags* argument is ``0``, no changes "
"are made to the calling process's execution context."
msgstr ""

#: ../../library/os.rst:826
msgid ":ref:`Availability <availability>`: Linux >= 2.6.16."
msgstr ":ref:`適用 <availability>`：Linux 2.6.16 以上。"

#: ../../library/os.rst:832
msgid "The :func:`~os.setns` function."
msgstr ":func:`~os.setns` 函式。"

#: ../../library/os.rst:836
msgid ""
"Flags to the :func:`unshare` function, if the implementation supports them. "
"See :manpage:`unshare(2)` in the Linux manual for their exact effect and "
"availability."
msgstr ""

#: ../../library/os.rst:859
msgid "File Object Creation"
msgstr ""

#: ../../library/os.rst:861
msgid ""
"These functions create new :term:`file objects <file object>`.  (See also :"
"func:`~os.open` for opening file descriptors.)"
msgstr ""

#: ../../library/os.rst:867
msgid ""
"Return an open file object connected to the file descriptor *fd*.  This is "
"an alias of the :func:`open` built-in function and accepts the same "
"arguments. The only difference is that the first argument of :func:`fdopen` "
"must always be an integer."
msgstr ""

#: ../../library/os.rst:876
msgid "File Descriptor Operations"
msgstr ""

#: ../../library/os.rst:878
msgid ""
"These functions operate on I/O streams referenced using file descriptors."
msgstr ""

#: ../../library/os.rst:880
msgid ""
"File descriptors are small integers corresponding to a file that has been "
"opened by the current process.  For example, standard input is usually file "
"descriptor 0, standard output is 1, and standard error is 2.  Further files "
"opened by a process will then be assigned 3, 4, 5, and so forth.  The name "
"\"file descriptor\" is slightly deceptive; on Unix platforms, sockets and "
"pipes are also referenced by file descriptors."
msgstr ""

#: ../../library/os.rst:887
msgid ""
"The :meth:`~io.IOBase.fileno` method can be used to obtain the file "
"descriptor associated with a :term:`file object` when required.  Note that "
"using the file descriptor directly will bypass the file object methods, "
"ignoring aspects such as internal buffering of data."
msgstr ""

#: ../../library/os.rst:895
msgid "Close file descriptor *fd*."
msgstr ""

#: ../../library/os.rst:899
msgid ""
"This function is intended for low-level I/O and must be applied to a file "
"descriptor as returned by :func:`os.open` or :func:`pipe`.  To close a "
"\"file object\" returned by the built-in function :func:`open` or by :func:"
"`popen` or :func:`fdopen`, use its :meth:`~io.IOBase.close` method."
msgstr ""

#: ../../library/os.rst:907
msgid ""
"Close all file descriptors from *fd_low* (inclusive) to *fd_high* "
"(exclusive), ignoring errors. Equivalent to (but much faster than)::"
msgstr ""

#: ../../library/os.rst:919
msgid ""
"Copy *count* bytes from file descriptor *src*, starting from offset "
"*offset_src*, to file descriptor *dst*, starting from offset *offset_dst*. "
"If *offset_src* is ``None``, then *src* is read from the current position; "
"respectively for *offset_dst*."
msgstr ""

#: ../../library/os.rst:924
msgid ""
"In Linux kernel older than 5.3, the files pointed to by *src* and *dst* must "
"reside in the same filesystem, otherwise an :exc:`OSError` is raised with :"
"attr:`~OSError.errno` set to :const:`errno.EXDEV`."
msgstr ""

#: ../../library/os.rst:928
msgid ""
"This copy is done without the additional cost of transferring data from the "
"kernel to user space and then back into the kernel. Additionally, some "
"filesystems could implement extra optimizations, such as the use of reflinks "
"(i.e., two or more inodes that share pointers to the same copy-on-write disk "
"blocks; supported file systems include btrfs and XFS) and server-side copy "
"(in the case of NFS)."
msgstr ""

#: ../../library/os.rst:935
msgid ""
"The function copies bytes between two file descriptors. Text options, like "
"the encoding and the line ending, are ignored."
msgstr ""

#: ../../library/os.rst:938
msgid ""
"The return value is the amount of bytes copied. This could be less than the "
"amount requested."
msgstr ""

#: ../../library/os.rst:943
msgid ""
"On Linux, :func:`os.copy_file_range` should not be used for copying a range "
"of a pseudo file from a special filesystem like procfs and sysfs. It will "
"always copy no bytes and return 0 as if the file was empty because of a "
"known Linux kernel issue."
msgstr ""

#: ../../library/os.rst:948
msgid ":ref:`Availability <availability>`: Linux >= 4.5 with glibc >= 2.27."
msgstr ":ref:`適用 <availability>`：Linux 4.5 以上且具有 glibc 2.27 以上。"

#: ../../library/os.rst:955
msgid ""
"Return a string describing the encoding of the device associated with *fd* "
"if it is connected to a terminal; else return :const:`None`."
msgstr ""

#: ../../library/os.rst:958
msgid ""
"On Unix, if the :ref:`Python UTF-8 Mode <utf8-mode>` is enabled, return "
"``'UTF-8'`` rather than the device encoding."
msgstr ""

#: ../../library/os.rst:961
msgid "On Unix, the function now implements the Python UTF-8 Mode."
msgstr ""

#: ../../library/os.rst:967
msgid ""
"Return a duplicate of file descriptor *fd*. The new file descriptor is :ref:"
"`non-inheritable <fd_inheritance>`."
msgstr ""

#: ../../library/os.rst:970
msgid ""
"On Windows, when duplicating a standard stream (0: stdin, 1: stdout, 2: "
"stderr), the new file descriptor is :ref:`inheritable <fd_inheritance>`."
msgstr ""

#: ../../library/os.rst:974 ../../library/os.rst:987
msgid ":ref:`Availability <availability>`: not WASI."
msgstr ":ref:`適用 <availability>`：非 WASI。"

#: ../../library/os.rst:976 ../../library/os.rst:1244
msgid "The new file descriptor is now non-inheritable."
msgstr ""

#: ../../library/os.rst:982
msgid ""
"Duplicate file descriptor *fd* to *fd2*, closing the latter first if "
"necessary. Return *fd2*. The new file descriptor is :ref:`inheritable "
"<fd_inheritance>` by default or non-inheritable if *inheritable* is "
"``False``."
msgstr ""

#: ../../library/os.rst:989
msgid "Add the optional *inheritable* parameter."
msgstr ""

#: ../../library/os.rst:992
msgid "Return *fd2* on success. Previously, ``None`` was always returned."
msgstr ""

#: ../../library/os.rst:998
msgid ""
"Change the mode of the file given by *fd* to the numeric *mode*.  See the "
"docs for :func:`chmod` for possible values of *mode*.  As of Python 3.3, "
"this is equivalent to ``os.chmod(fd, mode)``."
msgstr ""

#: ../../library/os.rst:1002 ../../library/os.rst:2069
#: ../../library/os.rst:2166
msgid ""
"Raises an :ref:`auditing event <auditing>` ``os.chmod`` with arguments "
"``path``, ``mode``, ``dir_fd``."
msgstr ""
"引發一個附帶引數 ``path``、``mode``、``dir_fd`` 的\\ :ref:`稽核事件 "
"<auditing>` ``os.chmod``。"

#: ../../library/os.rst:1006 ../../library/os.rst:1021
#: ../../library/os.rst:1112 ../../library/os.rst:1651
#: ../../library/os.rst:2066 ../../library/os.rst:2095
#: ../../library/os.rst:3384
msgid ""
"The function is limited on Emscripten and WASI, see :ref:`wasm-availability` "
"for more information."
msgstr ""

#: ../../library/os.rst:1012
msgid ""
"Change the owner and group id of the file given by *fd* to the numeric *uid* "
"and *gid*.  To leave one of the ids unchanged, set it to -1.  See :func:"
"`chown`.  As of Python 3.3, this is equivalent to ``os.chown(fd, uid, gid)``."
msgstr ""

#: ../../library/os.rst:1017 ../../library/os.rst:2091
#: ../../library/os.rst:2179
msgid ""
"Raises an :ref:`auditing event <auditing>` ``os.chown`` with arguments "
"``path``, ``uid``, ``gid``, ``dir_fd``."
msgstr ""
"引發一個附帶引數 ``path``、``uid``、``gid``、``dir_fd`` 的\\ :ref:`稽核事件 "
"<auditing>` ``os.chown``。"

#: ../../library/os.rst:1027
msgid ""
"Force write of file with filedescriptor *fd* to disk. Does not force update "
"of metadata."
msgstr ""

#: ../../library/os.rst:1033
msgid "This function is not available on MacOS."
msgstr ""

#: ../../library/os.rst:1038
msgid ""
"Return system configuration information relevant to an open file. *name* "
"specifies the configuration value to retrieve; it may be a string which is "
"the name of a defined system value; these names are specified in a number of "
"standards (POSIX.1, Unix 95, Unix 98, and others).  Some platforms define "
"additional names as well.  The names known to the host operating system are "
"given in the ``pathconf_names`` dictionary.  For configuration variables not "
"included in that mapping, passing an integer for *name* is also accepted."
msgstr ""

#: ../../library/os.rst:1046 ../../library/os.rst:2498
msgid ""
"If *name* is a string and is not known, :exc:`ValueError` is raised.  If a "
"specific value for *name* is not supported by the host system, even if it is "
"included in ``pathconf_names``, an :exc:`OSError` is raised with :const:"
"`errno.EINVAL` for the error number."
msgstr ""

#: ../../library/os.rst:1051
msgid "As of Python 3.3, this is equivalent to ``os.pathconf(fd, name)``."
msgstr ""

#: ../../library/os.rst:1058
msgid ""
"Get the status of the file descriptor *fd*. Return a :class:`stat_result` "
"object."
msgstr ""

#: ../../library/os.rst:1061
msgid "As of Python 3.3, this is equivalent to ``os.stat(fd)``."
msgstr ""

#: ../../library/os.rst:1065 ../../library/os.rst:2326
msgid "The :func:`.stat` function."
msgstr ""

#: ../../library/os.rst:1070
msgid ""
"Return information about the filesystem containing the file associated with "
"file descriptor *fd*, like :func:`statvfs`.  As of Python 3.3, this is "
"equivalent to ``os.statvfs(fd)``."
msgstr ""

#: ../../library/os.rst:1079
msgid ""
"Force write of file with filedescriptor *fd* to disk.  On Unix, this calls "
"the native :c:func:`!fsync` function; on Windows, the MS :c:func:`!_commit` "
"function."
msgstr ""

#: ../../library/os.rst:1082
msgid ""
"If you're starting with a buffered Python :term:`file object` *f*, first do "
"``f.flush()``, and then do ``os.fsync(f.fileno())``, to ensure that all "
"internal buffers associated with *f* are written to disk."
msgstr ""

#: ../../library/os.rst:1091
msgid ""
"Truncate the file corresponding to file descriptor *fd*, so that it is at "
"most *length* bytes in size.  As of Python 3.3, this is equivalent to ``os."
"truncate(fd, length)``."
msgstr ""

#: ../../library/os.rst:1095
msgid ""
"Raises an :ref:`auditing event <auditing>` ``os.truncate`` with arguments "
"``fd``, ``length``."
msgstr ""
"引發一個附帶引數 ``fd``、``length`` 的\\ :ref:`稽核事件 <auditing>` ``os."
"truncate``。"

#: ../../library/os.rst:1099 ../../library/os.rst:3423
msgid "Added support for Windows"
msgstr "新增對 Windows 的支援"

#: ../../library/os.rst:1105
msgid ""
"Get the blocking mode of the file descriptor: ``False`` if the :data:"
"`O_NONBLOCK` flag is set, ``True`` if the flag is cleared."
msgstr ""

#: ../../library/os.rst:1108
msgid "See also :func:`set_blocking` and :meth:`socket.socket.setblocking`."
msgstr ""
"另請參閱 :func:`set_blocking` 與 :meth:`socket.socket.setblocking`\\ 。"

#: ../../library/os.rst:1115 ../../library/os.rst:1654
msgid "On Windows, this function is limited to pipes."
msgstr ""

#: ../../library/os.rst:1119 ../../library/os.rst:1658
msgid "Added support for pipes on Windows."
msgstr "新增對 Windows 上的 pipe 支援。"

#: ../../library/os.rst:1124
msgid ""
"Return ``True`` if the file descriptor *fd* is open and connected to a tty(-"
"like) device, else ``False``."
msgstr ""

#: ../../library/os.rst:1130
msgid ""
"Apply, test or remove a POSIX lock on an open file descriptor. *fd* is an "
"open file descriptor. *cmd* specifies the command to use - one of :data:"
"`F_LOCK`, :data:`F_TLOCK`, :data:`F_ULOCK` or :data:`F_TEST`. *len* "
"specifies the section of the file to lock."
msgstr ""

#: ../../library/os.rst:1136
msgid ""
"Raises an :ref:`auditing event <auditing>` ``os.lockf`` with arguments "
"``fd``, ``cmd``, ``len``."
msgstr ""

#: ../../library/os.rst:1148
msgid "Flags that specify what action :func:`lockf` will take."
msgstr ""

#: ../../library/os.rst:1157
msgid ""
"Prepare the tty of which fd is a file descriptor for a new login session. "
"Make the calling process a session leader; make the tty the controlling tty, "
"the stdin, the stdout, and the stderr of the calling process; close fd."
msgstr ""

#: ../../library/os.rst:1168
msgid ""
"Set the current position of file descriptor *fd* to position *pos*, modified "
"by *whence*, and return the new position in bytes relative to the start of "
"the file. Valid values for *whence* are:"
msgstr ""

#: ../../library/os.rst:1173
msgid ""
":const:`SEEK_SET` or ``0`` -- set *pos* relative to the beginning of the file"
msgstr ""

#: ../../library/os.rst:1174
msgid ""
":const:`SEEK_CUR` or ``1`` -- set *pos* relative to the current file position"
msgstr ""

#: ../../library/os.rst:1175
msgid ":const:`SEEK_END` or ``2`` -- set *pos* relative to the end of the file"
msgstr ""

#: ../../library/os.rst:1176
msgid ""
":const:`SEEK_HOLE` -- set *pos* to the next data location, relative to *pos*"
msgstr ""

#: ../../library/os.rst:1177
msgid ""
":const:`SEEK_DATA` -- set *pos* to the next data hole, relative to *pos*"
msgstr ""

#: ../../library/os.rst:1181
msgid "Add support for :const:`!SEEK_HOLE` and :const:`!SEEK_DATA`."
msgstr ""

#: ../../library/os.rst:1188
msgid ""
"Parameters to the :func:`lseek` function and the :meth:`~io.IOBase.seek` "
"method on :term:`file-like objects <file object>`, for whence to adjust the "
"file position indicator."
msgstr ""

#: ../../library/os.rst:1192
msgid ":const:`SEEK_SET`"
msgstr ":const:`SEEK_SET`"

#: ../../library/os.rst:1193
msgid "Adjust the file position relative to the beginning of the file."
msgstr ""

#: ../../library/os.rst:1194
msgid ":const:`SEEK_CUR`"
msgstr ":const:`SEEK_CUR`"

#: ../../library/os.rst:1195
msgid "Adjust the file position relative to the current file position."
msgstr ""

#: ../../library/os.rst:1196
msgid ":const:`SEEK_END`"
msgstr ":const:`SEEK_END`"

#: ../../library/os.rst:1197
msgid "Adjust the file position relative to the end of the file."
msgstr ""

#: ../../library/os.rst:1199
msgid "Their values are 0, 1, and 2, respectively."
msgstr ""

#: ../../library/os.rst:1205
msgid ""
"Parameters to the :func:`lseek` function and the :meth:`~io.IOBase.seek` "
"method on :term:`file-like objects <file object>`, for seeking file data and "
"holes on sparsely allocated files."
msgstr ""

#: ../../library/os.rst:1209
msgid ":data:`!SEEK_DATA`"
msgstr ":data:`!SEEK_DATA`"

#: ../../library/os.rst:1210
msgid ""
"Adjust the file offset to the next location containing data, relative to the "
"seek position."
msgstr ""

#: ../../library/os.rst:1213
msgid ":data:`!SEEK_HOLE`"
msgstr ":data:`!SEEK_HOLE`"

#: ../../library/os.rst:1214
msgid ""
"Adjust the file offset to the next location containing a hole, relative to "
"the seek position. A hole is defined as a sequence of zeros."
msgstr ""

#: ../../library/os.rst:1220
msgid "These operations only make sense for filesystems that support them."
msgstr ""

#: ../../library/os.rst:1222
msgid ":ref:`Availability <availability>`: Linux >= 3.1, macOS, Unix"
msgstr ":ref:`適用 <availability>`：Linux 3.1 以上、macOS、Unix。"

#: ../../library/os.rst:1229
msgid ""
"Open the file *path* and set various flags according to *flags* and possibly "
"its mode according to *mode*.  When computing *mode*, the current umask "
"value is first masked out.  Return the file descriptor for the newly opened "
"file. The new file descriptor is :ref:`non-inheritable <fd_inheritance>`."
msgstr ""

#: ../../library/os.rst:1234
msgid ""
"For a description of the flag and mode values, see the C run-time "
"documentation; flag constants (like :const:`O_RDONLY` and :const:`O_WRONLY`) "
"are defined in the :mod:`os` module.  In particular, on Windows adding :"
"const:`O_BINARY` is needed to open files in binary mode."
msgstr ""

#: ../../library/os.rst:1239
msgid ""
"This function can support :ref:`paths relative to directory descriptors "
"<dir_fd>` with the *dir_fd* parameter."
msgstr ""

#: ../../library/os.rst:1242
msgid ""
"Raises an :ref:`auditing event <auditing>` ``open`` with arguments ``path``, "
"``mode``, ``flags``."
msgstr ""
"引發一個附帶引數 ``path``、``mode``、``flags`` 的\\ :ref:`稽核事件 "
"<auditing>` ``open``。"

#: ../../library/os.rst:1249
msgid ""
"This function is intended for low-level I/O.  For normal usage, use the "
"built-in function :func:`open`, which returns a :term:`file object` with :"
"meth:`~file.read` and :meth:`~file.write` methods (and many more).  To wrap "
"a file descriptor in a file object, use :func:`fdopen`."
msgstr ""

#: ../../library/os.rst:1254 ../../library/os.rst:2331
#: ../../library/os.rst:2371 ../../library/os.rst:2442
#: ../../library/os.rst:2464 ../../library/os.rst:2545
#: ../../library/os.rst:2575 ../../library/os.rst:2682
#: ../../library/os.rst:3439
msgid "Added the *dir_fd* parameter."
msgstr "新增 *dir_fd* 參數。"

#: ../../library/os.rst:1257 ../../library/os.rst:1576
#: ../../library/os.rst:1752 ../../library/os.rst:4797
msgid ""
"If the system call is interrupted and the signal handler does not raise an "
"exception, the function now retries the system call instead of raising an :"
"exc:`InterruptedError` exception (see :pep:`475` for the rationale)."
msgstr ""

#: ../../library/os.rst:1262 ../../library/os.rst:1963
#: ../../library/os.rst:1995 ../../library/os.rst:2026
#: ../../library/os.rst:2075 ../../library/os.rst:2112
#: ../../library/os.rst:2152 ../../library/os.rst:2170
#: ../../library/os.rst:2183 ../../library/os.rst:2242
#: ../../library/os.rst:2334 ../../library/os.rst:2374
#: ../../library/os.rst:2418 ../../library/os.rst:2445
#: ../../library/os.rst:2467 ../../library/os.rst:2508
#: ../../library/os.rst:2578 ../../library/os.rst:2597
#: ../../library/os.rst:2685 ../../library/os.rst:2975
#: ../../library/os.rst:3262 ../../library/os.rst:3426
#: ../../library/os.rst:3442 ../../library/os.rst:3482
#: ../../library/os.rst:3581 ../../library/os.rst:3642
#: ../../library/os.rst:3826 ../../library/os.rst:4006
#: ../../library/os.rst:4559
msgid "Accepts a :term:`path-like object`."
msgstr ""

#: ../../library/os.rst:1265
msgid ""
"The following constants are options for the *flags* parameter to the :func:"
"`~os.open` function.  They can be combined using the bitwise OR operator ``|"
"``.  Some of them are not available on all platforms.  For descriptions of "
"their availability and use, consult the :manpage:`open(2)` manual page on "
"Unix or `the MSDN <https://msdn.microsoft.com/en-us/library/z0kc8e3z.aspx>`_ "
"on Windows."
msgstr ""

#: ../../library/os.rst:1280
msgid "The above constants are available on Unix and Windows."
msgstr ""

#: ../../library/os.rst:1291
msgid "The above constants are only available on Unix."
msgstr ""

#: ../../library/os.rst:1293
msgid "Add :data:`O_CLOEXEC` constant."
msgstr ""

#: ../../library/os.rst:1304
msgid "The above constants are only available on Windows."
msgstr ""

#: ../../library/os.rst:1311
msgid "The above constants are only available on macOS."
msgstr ""

#: ../../library/os.rst:1313
msgid ""
"Add :data:`O_EVTONLY`, :data:`O_FSYNC`, :data:`O_SYMLINK` and :data:"
"`O_NOFOLLOW_ANY` constants."
msgstr ""

#: ../../library/os.rst:1327
msgid ""
"The above constants are extensions and not present if they are not defined "
"by the C library."
msgstr ""

#: ../../library/os.rst:1330
msgid ""
"Add :data:`O_PATH` on systems that support it. Add :data:`O_TMPFILE`, only "
"available on Linux Kernel 3.11   or newer."
msgstr ""

#: ../../library/os.rst:1340
msgid ""
"Open a new pseudo-terminal pair. Return a pair of file descriptors "
"``(master, slave)`` for the pty and the tty, respectively. The new file "
"descriptors are :ref:`non-inheritable <fd_inheritance>`. For a (slightly) "
"more portable approach, use the :mod:`pty` module."
msgstr ""

#: ../../library/os.rst:1347 ../../library/os.rst:1359
msgid "The new file descriptors are now non-inheritable."
msgstr ""

#: ../../library/os.rst:1353
msgid ""
"Create a pipe.  Return a pair of file descriptors ``(r, w)`` usable for "
"reading and writing, respectively. The new file descriptor is :ref:`non-"
"inheritable <fd_inheritance>`."
msgstr ""

#: ../../library/os.rst:1365
msgid ""
"Create a pipe with *flags* set atomically. *flags* can be constructed by "
"ORing together one or more of these values: :data:`O_NONBLOCK`, :data:"
"`O_CLOEXEC`. Return a pair of file descriptors ``(r, w)`` usable for reading "
"and writing, respectively."
msgstr ""

#: ../../library/os.rst:1378
msgid ""
"Ensures that enough disk space is allocated for the file specified by *fd* "
"starting from *offset* and continuing for *len* bytes."
msgstr ""

#: ../../library/os.rst:1381
msgid ":ref:`Availability <availability>`: Unix, not Emscripten."
msgstr ":ref:`適用 <availability>`：Unix、非 Emscripten。"

#: ../../library/os.rst:1388
msgid ""
"Announces an intention to access data in a specific pattern thus allowing "
"the kernel to make optimizations. The advice applies to the region of the "
"file specified by *fd* starting at *offset* and continuing for *len* bytes. "
"*advice* is one of :data:`POSIX_FADV_NORMAL`, :data:"
"`POSIX_FADV_SEQUENTIAL`, :data:`POSIX_FADV_RANDOM`, :data:"
"`POSIX_FADV_NOREUSE`, :data:`POSIX_FADV_WILLNEED` or :data:"
"`POSIX_FADV_DONTNEED`."
msgstr ""

#: ../../library/os.rst:1408
msgid ""
"Flags that can be used in *advice* in :func:`posix_fadvise` that specify the "
"access pattern that is likely to be used."
msgstr ""

#: ../../library/os.rst:1418
msgid ""
"Read at most *n* bytes from file descriptor *fd* at a position of *offset*, "
"leaving the file offset unchanged."
msgstr ""

#: ../../library/os.rst:1421 ../../library/os.rst:1565
msgid ""
"Return a bytestring containing the bytes read. If the end of the file "
"referred to by *fd* has been reached, an empty bytes object is returned."
msgstr ""

#: ../../library/os.rst:1431
msgid ""
"Read from a file descriptor *fd* at a position of *offset* into mutable :"
"term:`bytes-like objects <bytes-like object>` *buffers*, leaving the file "
"offset unchanged.  Transfer data into each buffer until it is full and then "
"move on to the next buffer in the sequence to hold the rest of the data."
msgstr ""

#: ../../library/os.rst:1436 ../../library/os.rst:1506
msgid ""
"The flags argument contains a bitwise OR of zero or more of the following "
"flags:"
msgstr ""

#: ../../library/os.rst:1439
msgid ":data:`RWF_HIPRI`"
msgstr ":data:`RWF_HIPRI`"

#: ../../library/os.rst:1440
msgid ":data:`RWF_NOWAIT`"
msgstr ":data:`RWF_NOWAIT`"

#: ../../library/os.rst:1442 ../../library/os.rst:1702
msgid ""
"Return the total number of bytes actually read which can be less than the "
"total capacity of all the objects."
msgstr ""

#: ../../library/os.rst:1445 ../../library/os.rst:1515
#: ../../library/os.rst:1705 ../../library/os.rst:1767
msgid ""
"The operating system may set a limit (:func:`sysconf` value "
"``'SC_IOV_MAX'``) on the number of buffers that can be used."
msgstr ""

#: ../../library/os.rst:1448
msgid "Combine the functionality of :func:`os.readv` and :func:`os.pread`."
msgstr ""

#: ../../library/os.rst:1450 ../../library/os.rst:1520
msgid ""
":ref:`Availability <availability>`: Linux >= 2.6.30, FreeBSD >= 6.0, OpenBSD "
">= 2.7, AIX >= 7.1."
msgstr ""
":ref:`適用 <availability>`：Linux 2.6.30 以上、FreeBSD 6.0 以上、OpenBSD 2.7 "
"以上、AIX 7.1 以上。"

#: ../../library/os.rst:1452 ../../library/os.rst:1522
msgid "Using flags requires Linux >= 4.6."
msgstr ""

#: ../../library/os.rst:1459
msgid ""
"Do not wait for data which is not immediately available. If this flag is "
"specified, the system call will return instantly if it would have to read "
"data from the backing storage or wait for a lock."
msgstr ""

#: ../../library/os.rst:1463
msgid ""
"If some data was successfully read, it will return the number of bytes read. "
"If no bytes were read, it will return ``-1`` and set errno to :const:`errno."
"EAGAIN`."
msgstr ""

#: ../../library/os.rst:1467
msgid ":ref:`Availability <availability>`: Linux >= 4.14."
msgstr ":ref:`適用 <availability>`：Linux 4.14 以上。"

#: ../../library/os.rst:1474
msgid ""
"High priority read/write. Allows block-based filesystems to use polling of "
"the device, which provides lower latency, but may use additional resources."
msgstr ""

#: ../../library/os.rst:1478
msgid ""
"Currently, on Linux, this feature is usable only on a file descriptor opened "
"using the :data:`O_DIRECT` flag."
msgstr ""

#: ../../library/os.rst:1481
msgid ":ref:`Availability <availability>`: Linux >= 4.6."
msgstr ":ref:`適用 <availability>`：Linux 4.6 以上。"

#: ../../library/os.rst:1488
msgid ""
"Write the bytestring in *str* to file descriptor *fd* at position of "
"*offset*, leaving the file offset unchanged."
msgstr ""

#: ../../library/os.rst:1491 ../../library/os.rst:1742
msgid "Return the number of bytes actually written."
msgstr ""

#: ../../library/os.rst:1500
msgid ""
"Write the *buffers* contents to file descriptor *fd* at a offset *offset*, "
"leaving the file offset unchanged.  *buffers* must be a sequence of :term:"
"`bytes-like objects <bytes-like object>`. Buffers are processed in array "
"order. Entire contents of the first buffer is written before proceeding to "
"the second, and so on."
msgstr ""

#: ../../library/os.rst:1509
msgid ":data:`RWF_DSYNC`"
msgstr ":data:`RWF_DSYNC`"

#: ../../library/os.rst:1510
msgid ":data:`RWF_SYNC`"
msgstr ":data:`RWF_SYNC`"

#: ../../library/os.rst:1511
msgid ":data:`RWF_APPEND`"
msgstr ":data:`RWF_APPEND`"

#: ../../library/os.rst:1513
msgid "Return the total number of bytes actually written."
msgstr ""

#: ../../library/os.rst:1518
msgid "Combine the functionality of :func:`os.writev` and :func:`os.pwrite`."
msgstr ""

#: ../../library/os.rst:1529
msgid ""
"Provide a per-write equivalent of the :data:`O_DSYNC` :func:`os.open` flag. "
"This flag effect applies only to the data range written by the system call."
msgstr ""

#: ../../library/os.rst:1532 ../../library/os.rst:1542
msgid ":ref:`Availability <availability>`: Linux >= 4.7."
msgstr ":ref:`適用 <availability>`：Linux 4.7 以上。"

#: ../../library/os.rst:1539
msgid ""
"Provide a per-write equivalent of the :data:`O_SYNC` :func:`os.open` flag. "
"This flag effect applies only to the data range written by the system call."
msgstr ""

#: ../../library/os.rst:1549
msgid ""
"Provide a per-write equivalent of the :data:`O_APPEND` :func:`os.open` flag. "
"This flag is meaningful only for :func:`os.pwritev`, and its effect applies "
"only to the data range written by the system call. The *offset* argument "
"does not affect the write operation; the data is always appended to the end "
"of the file. However, if the *offset* argument is ``-1``, the current file "
"*offset* is updated."
msgstr ""

#: ../../library/os.rst:1556
msgid ":ref:`Availability <availability>`: Linux >= 4.16."
msgstr ":ref:`適用 <availability>`：Linux 4.16 以上。"

#: ../../library/os.rst:1563
msgid "Read at most *n* bytes from file descriptor *fd*."
msgstr ""

#: ../../library/os.rst:1570
msgid ""
"This function is intended for low-level I/O and must be applied to a file "
"descriptor as returned by :func:`os.open` or :func:`pipe`.  To read a \"file "
"object\" returned by the built-in function :func:`open` or by :func:`popen` "
"or :func:`fdopen`, or :data:`sys.stdin`, use its :meth:`~file.read` or :meth:"
"`~file.readline` methods."
msgstr ""

#: ../../library/os.rst:1585
msgid ""
"Copy *count* bytes from file descriptor *in_fd* to file descriptor *out_fd* "
"starting at *offset*. Return the number of bytes sent. When EOF is reached "
"return ``0``."
msgstr ""

#: ../../library/os.rst:1589
msgid ""
"The first function notation is supported by all platforms that define :func:"
"`sendfile`."
msgstr ""

#: ../../library/os.rst:1592
msgid ""
"On Linux, if *offset* is given as ``None``, the bytes are read from the "
"current position of *in_fd* and the position of *in_fd* is updated."
msgstr ""

#: ../../library/os.rst:1595
msgid ""
"The second case may be used on macOS and FreeBSD where *headers* and "
"*trailers* are arbitrary sequences of buffers that are written before and "
"after the data from *in_fd* is written. It returns the same as the first "
"case."
msgstr ""

#: ../../library/os.rst:1599
msgid ""
"On macOS and FreeBSD, a value of ``0`` for *count* specifies to send until "
"the end of *in_fd* is reached."
msgstr ""

#: ../../library/os.rst:1602
msgid ""
"All platforms support sockets as *out_fd* file descriptor, and some "
"platforms allow other types (e.g. regular file, pipe) as well."
msgstr ""

#: ../../library/os.rst:1605
msgid ""
"Cross-platform applications should not use *headers*, *trailers* and *flags* "
"arguments."
msgstr ""

#: ../../library/os.rst:1612
msgid ""
"For a higher-level wrapper of :func:`sendfile`, see :meth:`socket.socket."
"sendfile`."
msgstr ""

#: ../../library/os.rst:1617
msgid "Parameters *out* and *in* was renamed to *out_fd* and *in_fd*."
msgstr ""

#: ../../library/os.rst:1625
msgid ""
"Parameters to the :func:`sendfile` function, if the implementation supports "
"them."
msgstr ""

#: ../../library/os.rst:1634
msgid ""
"Parameter to the :func:`sendfile` function, if the implementation supports "
"it. The data won't be cached in the virtual memory and will be freed "
"afterwards."
msgstr ""

#: ../../library/os.rst:1644
msgid ""
"Set the blocking mode of the specified file descriptor. Set the :data:"
"`O_NONBLOCK` flag if blocking is ``False``, clear the flag otherwise."
msgstr ""

#: ../../library/os.rst:1647
msgid "See also :func:`get_blocking` and :meth:`socket.socket.setblocking`."
msgstr ""
"另請參閱 :func:`get_blocking` 與 :meth:`socket.socket.setblocking`\\ 。"

#: ../../library/os.rst:1664
msgid ""
"Transfer *count* bytes from file descriptor *src*, starting from offset "
"*offset_src*, to file descriptor *dst*, starting from offset *offset_dst*. "
"At least one of the file descriptors must refer to a pipe. If *offset_src* "
"is ``None``, then *src* is read from the current position; respectively for "
"*offset_dst*. The offset associated to the file descriptor that refers to a "
"pipe must be ``None``. The files pointed to by *src* and *dst* must reside "
"in the same filesystem, otherwise an :exc:`OSError` is raised with :attr:"
"`~OSError.errno` set to :const:`errno.EXDEV`."
msgstr ""

#: ../../library/os.rst:1673
msgid ""
"This copy is done without the additional cost of transferring data from the "
"kernel to user space and then back into the kernel. Additionally, some "
"filesystems could implement extra optimizations. The copy is done as if both "
"files are opened as binary."
msgstr ""

#: ../../library/os.rst:1678
msgid ""
"Upon successful completion, returns the number of bytes spliced to or from "
"the pipe. A return value of 0 means end of input. If *src* refers to a pipe, "
"then this means that there was no data to transfer, and it would not make "
"sense to block because there are no writers connected to the write end of "
"the pipe."
msgstr ""

#: ../../library/os.rst:1684
msgid ":ref:`Availability <availability>`: Linux >= 2.6.17 with glibc >= 2.5"
msgstr ":ref:`適用 <availability>`：Linux 2.6.17 以上且具有 glibc 2.5 以上"

#: ../../library/os.rst:1697
msgid ""
"Read from a file descriptor *fd* into a number of mutable :term:`bytes-like "
"objects <bytes-like object>` *buffers*. Transfer data into each buffer until "
"it is full and then move on to the next buffer in the sequence to hold the "
"rest of the data."
msgstr ""

#: ../../library/os.rst:1715
msgid ""
"Return the process group associated with the terminal given by *fd* (an open "
"file descriptor as returned by :func:`os.open`)."
msgstr ""

#: ../../library/os.rst:1718 ../../library/os.rst:1726
msgid ":ref:`Availability <availability>`: Unix, not WASI."
msgstr ":ref:`適用 <availability>`：Unix、非 WASI。"

#: ../../library/os.rst:1723
msgid ""
"Set the process group associated with the terminal given by *fd* (an open "
"file descriptor as returned by :func:`os.open`) to *pg*."
msgstr ""

#: ../../library/os.rst:1731
msgid ""
"Return a string which specifies the terminal device associated with file "
"descriptor *fd*.  If *fd* is not associated with a terminal device, an "
"exception is raised."
msgstr ""

#: ../../library/os.rst:1740
msgid "Write the bytestring in *str* to file descriptor *fd*."
msgstr ""

#: ../../library/os.rst:1746
msgid ""
"This function is intended for low-level I/O and must be applied to a file "
"descriptor as returned by :func:`os.open` or :func:`pipe`.  To write a "
"\"file object\" returned by the built-in function :func:`open` or by :func:"
"`popen` or :func:`fdopen`, or :data:`sys.stdout` or :data:`sys.stderr`, use "
"its :meth:`~file.write` method."
msgstr ""

#: ../../library/os.rst:1760
msgid ""
"Write the contents of *buffers* to file descriptor *fd*. *buffers* must be a "
"sequence of :term:`bytes-like objects <bytes-like object>`. Buffers are "
"processed in array order. Entire contents of the first buffer is written "
"before proceeding to the second, and so on."
msgstr ""

#: ../../library/os.rst:1765
msgid "Returns the total number of bytes actually written."
msgstr ""

#: ../../library/os.rst:1778
msgid "Querying the size of a terminal"
msgstr ""

#: ../../library/os.rst:1784
msgid ""
"Return the size of the terminal window as ``(columns, lines)``, tuple of "
"type :class:`terminal_size`."
msgstr ""

#: ../../library/os.rst:1787
msgid ""
"The optional argument ``fd`` (default ``STDOUT_FILENO``, or standard output) "
"specifies which file descriptor should be queried."
msgstr ""

#: ../../library/os.rst:1790
msgid ""
"If the file descriptor is not connected to a terminal, an :exc:`OSError` is "
"raised."
msgstr ""

#: ../../library/os.rst:1793
msgid ""
":func:`shutil.get_terminal_size` is the high-level function which should "
"normally be used, ``os.get_terminal_size`` is the low-level implementation."
msgstr ""

#: ../../library/os.rst:1801
msgid ""
"A subclass of tuple, holding ``(columns, lines)`` of the terminal window "
"size."
msgstr ""

#: ../../library/os.rst:1805
msgid "Width of the terminal window in characters."
msgstr ""

#: ../../library/os.rst:1809
msgid "Height of the terminal window in characters."
msgstr ""

#: ../../library/os.rst:1815
msgid "Inheritance of File Descriptors"
msgstr ""

#: ../../library/os.rst:1819
msgid ""
"A file descriptor has an \"inheritable\" flag which indicates if the file "
"descriptor can be inherited by child processes.  Since Python 3.4, file "
"descriptors created by Python are non-inheritable by default."
msgstr ""

#: ../../library/os.rst:1823
msgid ""
"On UNIX, non-inheritable file descriptors are closed in child processes at "
"the execution of a new program, other file descriptors are inherited."
msgstr ""

#: ../../library/os.rst:1826
msgid ""
"On Windows, non-inheritable handles and file descriptors are closed in child "
"processes, except for standard streams (file descriptors 0, 1 and 2: stdin, "
"stdout and stderr), which are always inherited.  Using :func:`spawn\\* "
"<spawnl>` functions, all inheritable handles and all inheritable file "
"descriptors are inherited. Using the :mod:`subprocess` module, all file "
"descriptors except standard streams are closed, and inheritable handles are "
"only inherited if the *close_fds* parameter is ``False``."
msgstr ""

#: ../../library/os.rst:1834
msgid ""
"On WebAssembly platforms ``wasm32-emscripten`` and ``wasm32-wasi``, the file "
"descriptor cannot be modified."
msgstr ""

#: ../../library/os.rst:1839
msgid ""
"Get the \"inheritable\" flag of the specified file descriptor (a boolean)."
msgstr ""

#: ../../library/os.rst:1843
msgid "Set the \"inheritable\" flag of the specified file descriptor."
msgstr ""

#: ../../library/os.rst:1847
msgid "Get the \"inheritable\" flag of the specified handle (a boolean)."
msgstr ""

#: ../../library/os.rst:1849 ../../library/os.rst:1855
#: ../../library/os.rst:3931 ../../library/os.rst:4594
#: ../../library/os.rst:4639
msgid ":ref:`Availability <availability>`: Windows."
msgstr ":ref:`適用 <availability>`：Windows。"

#: ../../library/os.rst:1853
msgid "Set the \"inheritable\" flag of the specified handle."
msgstr ""

#: ../../library/os.rst:1861
msgid "Files and Directories"
msgstr ""

#: ../../library/os.rst:1863
msgid ""
"On some Unix platforms, many of these functions support one or more of these "
"features:"
msgstr ""

#: ../../library/os.rst:1868
msgid ""
"**specifying a file descriptor:** Normally the *path* argument provided to "
"functions in the :mod:`os` module must be a string specifying a file path.  "
"However, some functions now alternatively accept an open file descriptor for "
"their *path* argument. The function will then operate on the file referred "
"to by the descriptor. (For POSIX systems, Python will call the variant of "
"the function prefixed with ``f`` (e.g. call ``fchdir`` instead of "
"``chdir``).)"
msgstr ""

#: ../../library/os.rst:1876
msgid ""
"You can check whether or not *path* can be specified as a file descriptor "
"for a particular function on your platform using :data:`os.supports_fd`. If "
"this functionality is unavailable, using it will raise a :exc:"
"`NotImplementedError`."
msgstr ""

#: ../../library/os.rst:1881
msgid ""
"If the function also supports *dir_fd* or *follow_symlinks* arguments, it's "
"an error to specify one of those when supplying *path* as a file descriptor."
msgstr ""

#: ../../library/os.rst:1886
msgid ""
"**paths relative to directory descriptors:** If *dir_fd* is not ``None``, it "
"should be a file descriptor referring to a directory, and the path to "
"operate on should be relative; path will then be relative to that "
"directory.  If the path is absolute, *dir_fd* is ignored.  (For POSIX "
"systems, Python will call the variant of the function with an ``at`` suffix "
"and possibly prefixed with ``f`` (e.g. call ``faccessat`` instead of "
"``access``)."
msgstr ""

#: ../../library/os.rst:1893
msgid ""
"You can check whether or not *dir_fd* is supported for a particular function "
"on your platform using :data:`os.supports_dir_fd`.  If it's unavailable, "
"using it will raise a :exc:`NotImplementedError`."
msgstr ""

#: ../../library/os.rst:1899
msgid ""
"**not following symlinks:** If *follow_symlinks* is ``False``, and the last "
"element of the path to operate on is a symbolic link, the function will "
"operate on the symbolic link itself rather than the file pointed to by the "
"link.  (For POSIX systems, Python will call the ``l...`` variant of the "
"function.)"
msgstr ""

#: ../../library/os.rst:1905
msgid ""
"You can check whether or not *follow_symlinks* is supported for a particular "
"function on your platform using :data:`os.supports_follow_symlinks`. If it's "
"unavailable, using it will raise a :exc:`NotImplementedError`."
msgstr ""

#: ../../library/os.rst:1913
msgid ""
"Use the real uid/gid to test for access to *path*.  Note that most "
"operations will use the effective uid/gid, therefore this routine can be "
"used in a suid/sgid environment to test if the invoking user has the "
"specified access to *path*.  *mode* should be :const:`F_OK` to test the "
"existence of *path*, or it can be the inclusive OR of one or more of :const:"
"`R_OK`, :const:`W_OK`, and :const:`X_OK` to test permissions.  Return :const:"
"`True` if access is allowed, :const:`False` if not. See the Unix man page :"
"manpage:`access(2)` for more information."
msgstr ""

#: ../../library/os.rst:1922
msgid ""
"This function can support specifying :ref:`paths relative to directory "
"descriptors <dir_fd>` and :ref:`not following symlinks <follow_symlinks>`."
msgstr ""

#: ../../library/os.rst:1925
msgid ""
"If *effective_ids* is ``True``, :func:`access` will perform its access "
"checks using the effective uid/gid instead of the real uid/gid. "
"*effective_ids* may not be supported on your platform; you can check whether "
"or not it is available using :data:`os.supports_effective_ids`.  If it is "
"unavailable, using it will raise a :exc:`NotImplementedError`."
msgstr ""

#: ../../library/os.rst:1933
msgid ""
"Using :func:`access` to check if a user is authorized to e.g. open a file "
"before actually doing so using :func:`open` creates a security hole, because "
"the user might exploit the short time interval between checking and opening "
"the file to manipulate it. It's preferable to use :term:`EAFP` techniques. "
"For example::"
msgstr ""

#: ../../library/os.rst:1944
msgid "is better written as::"
msgstr ""

#: ../../library/os.rst:1956
msgid ""
"I/O operations may fail even when :func:`access` indicates that they would "
"succeed, particularly for operations on network filesystems which may have "
"permissions semantics beyond the usual POSIX permission-bit model."
msgstr ""

#: ../../library/os.rst:1960
msgid "Added the *dir_fd*, *effective_ids*, and *follow_symlinks* parameters."
msgstr "新增 *dir_fd*\\ 、\\ *effective_ids* 與 *follow_symlinks* 參數。"

#: ../../library/os.rst:1972
msgid ""
"Values to pass as the *mode* parameter of :func:`access` to test the "
"existence, readability, writability and executability of *path*, "
"respectively."
msgstr ""

#: ../../library/os.rst:1981
msgid "Change the current working directory to *path*."
msgstr ""

#: ../../library/os.rst:1983
msgid ""
"This function can support :ref:`specifying a file descriptor <path_fd>`.  "
"The descriptor must refer to an opened directory, not an open file."
msgstr ""

#: ../../library/os.rst:1986
msgid ""
"This function can raise :exc:`OSError` and subclasses such as :exc:"
"`FileNotFoundError`, :exc:`PermissionError`, and :exc:`NotADirectoryError`."
msgstr ""

#: ../../library/os.rst:1989 ../../library/os.rst:2122
msgid ""
"Raises an :ref:`auditing event <auditing>` ``os.chdir`` with argument "
"``path``."
msgstr ""
"引發一個附帶引數 ``path`` 的\\ :ref:`稽核事件 <auditing>` ``os.chdir``。"

#: ../../library/os.rst:1991
msgid ""
"Added support for specifying *path* as a file descriptor on some platforms."
msgstr ""

#: ../../library/os.rst:2001
msgid ""
"Set the flags of *path* to the numeric *flags*. *flags* may take a "
"combination (bitwise OR) of the following values (as defined in the :mod:"
"`stat` module):"
msgstr ""

#: ../../library/os.rst:2004
msgid ":const:`stat.UF_NODUMP`"
msgstr ":const:`stat.UF_NODUMP`"

#: ../../library/os.rst:2005
msgid ":const:`stat.UF_IMMUTABLE`"
msgstr ":const:`stat.UF_IMMUTABLE`"

#: ../../library/os.rst:2006
msgid ":const:`stat.UF_APPEND`"
msgstr ":const:`stat.UF_APPEND`"

#: ../../library/os.rst:2007
msgid ":const:`stat.UF_OPAQUE`"
msgstr ":const:`stat.UF_OPAQUE`"

#: ../../library/os.rst:2008
msgid ":const:`stat.UF_NOUNLINK`"
msgstr ":const:`stat.UF_NOUNLINK`"

#: ../../library/os.rst:2009
msgid ":const:`stat.UF_COMPRESSED`"
msgstr ":const:`stat.UF_COMPRESSED`"

#: ../../library/os.rst:2010
msgid ":const:`stat.UF_HIDDEN`"
msgstr ":const:`stat.UF_HIDDEN`"

#: ../../library/os.rst:2011
msgid ":const:`stat.SF_ARCHIVED`"
msgstr ":const:`stat.SF_ARCHIVED`"

#: ../../library/os.rst:2012
msgid ":const:`stat.SF_IMMUTABLE`"
msgstr ":const:`stat.SF_IMMUTABLE`"

#: ../../library/os.rst:2013
msgid ":const:`stat.SF_APPEND`"
msgstr ":const:`stat.SF_APPEND`"

#: ../../library/os.rst:2014
msgid ":const:`stat.SF_NOUNLINK`"
msgstr ":const:`stat.SF_NOUNLINK`"

#: ../../library/os.rst:2015
msgid ":const:`stat.SF_SNAPSHOT`"
msgstr ":const:`stat.SF_SNAPSHOT`"

#: ../../library/os.rst:2017
msgid ""
"This function can support :ref:`not following symlinks <follow_symlinks>`."
msgstr ""

#: ../../library/os.rst:2019 ../../library/os.rst:2148
msgid ""
"Raises an :ref:`auditing event <auditing>` ``os.chflags`` with arguments "
"``path``, ``flags``."
msgstr ""
"引發一個附帶引數 ``path``、``flags`` 的\\ :ref:`稽核事件 <auditing>` ``os."
"chflags``。"

#: ../../library/os.rst:2023
msgid "Added the *follow_symlinks* parameter."
msgstr "新增 *follow_symlinks* 參數。"

#: ../../library/os.rst:2032
msgid ""
"Change the mode of *path* to the numeric *mode*. *mode* may take one of the "
"following values (as defined in the :mod:`stat` module) or bitwise ORed "
"combinations of them:"
msgstr ""

#: ../../library/os.rst:2036
msgid ":const:`stat.S_ISUID`"
msgstr ":const:`stat.S_ISUID`"

#: ../../library/os.rst:2037
msgid ":const:`stat.S_ISGID`"
msgstr ":const:`stat.S_ISGID`"

#: ../../library/os.rst:2038
msgid ":const:`stat.S_ENFMT`"
msgstr ":const:`stat.S_ENFMT`"

#: ../../library/os.rst:2039
msgid ":const:`stat.S_ISVTX`"
msgstr ":const:`stat.S_ISVTX`"

#: ../../library/os.rst:2040
msgid ":const:`stat.S_IREAD`"
msgstr ":const:`stat.S_IREAD`"

#: ../../library/os.rst:2041
msgid ":const:`stat.S_IWRITE`"
msgstr ":const:`stat.S_IWRITE`"

#: ../../library/os.rst:2042
msgid ":const:`stat.S_IEXEC`"
msgstr ":const:`stat.S_IEXEC`"

#: ../../library/os.rst:2043
msgid ":const:`stat.S_IRWXU`"
msgstr ":const:`stat.S_IRWXU`"

#: ../../library/os.rst:2044
msgid ":const:`stat.S_IRUSR`"
msgstr ":const:`stat.S_IRUSR`"

#: ../../library/os.rst:2045
msgid ":const:`stat.S_IWUSR`"
msgstr ":const:`stat.S_IWUSR`"

#: ../../library/os.rst:2046
msgid ":const:`stat.S_IXUSR`"
msgstr ":const:`stat.S_IXUSR`"

#: ../../library/os.rst:2047
msgid ":const:`stat.S_IRWXG`"
msgstr ":const:`stat.S_IRWXG`"

#: ../../library/os.rst:2048
msgid ":const:`stat.S_IRGRP`"
msgstr ":const:`stat.S_IRGRP`"

#: ../../library/os.rst:2049
msgid ":const:`stat.S_IWGRP`"
msgstr ":const:`stat.S_IWGRP`"

#: ../../library/os.rst:2050
msgid ":const:`stat.S_IXGRP`"
msgstr ":const:`stat.S_IXGRP`"

#: ../../library/os.rst:2051
msgid ":const:`stat.S_IRWXO`"
msgstr ":const:`stat.S_IRWXO`"

#: ../../library/os.rst:2052
msgid ":const:`stat.S_IROTH`"
msgstr ":const:`stat.S_IROTH`"

#: ../../library/os.rst:2053
msgid ":const:`stat.S_IWOTH`"
msgstr ":const:`stat.S_IWOTH`"

#: ../../library/os.rst:2054
msgid ":const:`stat.S_IXOTH`"
msgstr ":const:`stat.S_IXOTH`"

#: ../../library/os.rst:2056 ../../library/os.rst:2084
#: ../../library/os.rst:3472
msgid ""
"This function can support :ref:`specifying a file descriptor <path_fd>`, :"
"ref:`paths relative to directory descriptors <dir_fd>` and :ref:`not "
"following symlinks <follow_symlinks>`."
msgstr ""

#: ../../library/os.rst:2062
msgid ""
"Although Windows supports :func:`chmod`, you can only set the file's read-"
"only flag with it (via the ``stat.S_IWRITE`` and ``stat.S_IREAD`` constants "
"or a corresponding integer value).  All other bits are ignored."
msgstr ""

#: ../../library/os.rst:2071 ../../library/os.rst:2098
msgid ""
"Added support for specifying *path* as an open file descriptor, and the "
"*dir_fd* and *follow_symlinks* arguments."
msgstr ""

#: ../../library/os.rst:2081
msgid ""
"Change the owner and group id of *path* to the numeric *uid* and *gid*.  To "
"leave one of the ids unchanged, set it to -1."
msgstr ""

#: ../../library/os.rst:2088
msgid ""
"See :func:`shutil.chown` for a higher-level function that accepts names in "
"addition to numeric ids."
msgstr ""

#: ../../library/os.rst:2102
msgid "Supports a :term:`path-like object`."
msgstr ""

#: ../../library/os.rst:2108
msgid "Change the root directory of the current process to *path*."
msgstr ""

#: ../../library/os.rst:2118
msgid ""
"Change the current working directory to the directory represented by the "
"file descriptor *fd*.  The descriptor must refer to an opened directory, not "
"an open file.  As of Python 3.3, this is equivalent to ``os.chdir(fd)``."
msgstr ""

#: ../../library/os.rst:2129
msgid "Return a string representing the current working directory."
msgstr ""

#: ../../library/os.rst:2134
msgid "Return a bytestring representing the current working directory."
msgstr ""

#: ../../library/os.rst:2136
msgid ""
"The function now uses the UTF-8 encoding on Windows, rather than the ANSI "
"code page: see :pep:`529` for the rationale. The function is no longer "
"deprecated on Windows."
msgstr ""

#: ../../library/os.rst:2144
msgid ""
"Set the flags of *path* to the numeric *flags*, like :func:`chflags`, but do "
"not follow symbolic links.  As of Python 3.3, this is equivalent to ``os."
"chflags(path, flags, follow_symlinks=False)``."
msgstr ""

#: ../../library/os.rst:2158
msgid ""
"Change the mode of *path* to the numeric *mode*. If path is a symlink, this "
"affects the symlink rather than the target.  See the docs for :func:`chmod` "
"for possible values of *mode*.  As of Python 3.3, this is equivalent to ``os."
"chmod(path, mode, follow_symlinks=False)``."
msgstr ""

#: ../../library/os.rst:2163
msgid ""
"``lchmod()`` is not part of POSIX, but Unix implementations may have it if "
"changing the mode of symbolic links is supported."
msgstr ""

#: ../../library/os.rst:2168
msgid ""
":ref:`Availability <availability>`: Unix, not Linux, FreeBSD >= 1.3, NetBSD "
">= 1.3, not OpenBSD"
msgstr ""
":ref:`適用 <availability>`：Unix、非 Linux、FreeBSD 1.3 以上、NetBSD 1.3 以"
"上、非 OpenBSD。"

#: ../../library/os.rst:2175
msgid ""
"Change the owner and group id of *path* to the numeric *uid* and *gid*.  "
"This function will not follow symbolic links.  As of Python 3.3, this is "
"equivalent to ``os.chown(path, uid, gid, follow_symlinks=False)``."
msgstr ""

#: ../../library/os.rst:2189
msgid "Create a hard link pointing to *src* named *dst*."
msgstr ""

#: ../../library/os.rst:2191
msgid ""
"This function can support specifying *src_dir_fd* and/or *dst_dir_fd* to "
"supply :ref:`paths relative to directory descriptors <dir_fd>`, and :ref:"
"`not following symlinks <follow_symlinks>`."
msgstr ""

#: ../../library/os.rst:2195
msgid ""
"Raises an :ref:`auditing event <auditing>` ``os.link`` with arguments "
"``src``, ``dst``, ``src_dir_fd``, ``dst_dir_fd``."
msgstr ""
"引發一個附帶引數 ``src``、``dst``、``src_dir_fd``、``dst_dir_fd`` 的\\ :ref:`"
"稽核事件 <auditing>` ``os.link``。"

#: ../../library/os.rst:2197
msgid ":ref:`Availability <availability>`: Unix, Windows, not Emscripten."
msgstr ":ref:`適用 <availability>`：Unix、Windows、非 Emscripten。"

#: ../../library/os.rst:2199 ../../library/os.rst:4256
msgid "Added Windows support."
msgstr "新支援 Windows。"

#: ../../library/os.rst:2202
msgid "Added the *src_dir_fd*, *dst_dir_fd*, and *follow_symlinks* parameters."
msgstr "新增 *src_dir_fd*、*dst_dir_fd* 與 *follow_symlinks* 參數。"

#: ../../library/os.rst:2205 ../../library/os.rst:2629
#: ../../library/os.rst:2666 ../../library/os.rst:3394
msgid "Accepts a :term:`path-like object` for *src* and *dst*."
msgstr ""

#: ../../library/os.rst:2211
msgid ""
"Return a list containing the names of the entries in the directory given by "
"*path*.  The list is in arbitrary order, and does not include the special "
"entries ``'.'`` and ``'..'`` even if they are present in the directory. If a "
"file is removed from or added to the directory during the call of this "
"function, whether a name for that file be included is unspecified."
msgstr ""

#: ../../library/os.rst:2217
msgid ""
"*path* may be a :term:`path-like object`.  If *path* is of type ``bytes`` "
"(directly or indirectly through the :class:`PathLike` interface), the "
"filenames returned will also be of type ``bytes``; in all other "
"circumstances, they will be of type ``str``."
msgstr ""

#: ../../library/os.rst:2222 ../../library/os.rst:2714
msgid ""
"This function can also support :ref:`specifying a file descriptor "
"<path_fd>`; the file descriptor must refer to a directory."
msgstr ""

#: ../../library/os.rst:2225
msgid ""
"Raises an :ref:`auditing event <auditing>` ``os.listdir`` with argument "
"``path``."
msgstr ""
"引發一個附帶引數 ``path`` 的\\ :ref:`稽核事件 <auditing>` ``os.listdir``。"

#: ../../library/os.rst:2228
msgid "To encode ``str`` filenames to ``bytes``, use :func:`~os.fsencode`."
msgstr ""

#: ../../library/os.rst:2232
msgid ""
"The :func:`scandir` function returns directory entries along with file "
"attribute information, giving better performance for many common use cases."
msgstr ""

#: ../../library/os.rst:2236
msgid "The *path* parameter became optional."
msgstr ""

#: ../../library/os.rst:2239 ../../library/os.rst:3253
msgid "Added support for specifying *path* as an open file descriptor."
msgstr ""

#: ../../library/os.rst:2248
msgid "Return a list containing the names of drives on a Windows system."
msgstr ""

#: ../../library/os.rst:2250
msgid ""
"A drive name typically looks like ``'C:\\\\'``. Not every drive name will be "
"associated with a volume, and some may be inaccessible for a variety of "
"reasons, including permissions, network connectivity or missing media. This "
"function does not test for access."
msgstr ""

#: ../../library/os.rst:2255
msgid "May raise :exc:`OSError` if an error occurs collecting the drive names."
msgstr ""

#: ../../library/os.rst:2258
msgid ""
"Raises an :ref:`auditing event <auditing>` ``os.listdrives`` with no "
"arguments."
msgstr "引發一個不附帶引數的\\ :ref:`稽核事件 <auditing>` ``os.listdrives``。"

#: ../../library/os.rst:2260 ../../library/os.rst:2284
#: ../../library/os.rst:2304
msgid ":ref:`Availability <availability>`: Windows"
msgstr ":ref:`適用 <availability>`：Windows。"

#: ../../library/os.rst:2267
msgid ""
"Return a list containing the mount points for a volume on a Windows system."
msgstr ""

#: ../../library/os.rst:2270
msgid ""
"*volume* must be represented as a GUID path, like those returned by :func:"
"`os.listvolumes`. Volumes may be mounted in multiple locations or not at "
"all. In the latter case, the list will be empty. Mount points that are not "
"associated with a volume will not be returned by this function."
msgstr ""

#: ../../library/os.rst:2276
msgid ""
"The mount points return by this function will be absolute paths, and may be "
"longer than the drive name."
msgstr ""

#: ../../library/os.rst:2279
msgid ""
"Raises :exc:`OSError` if the volume is not recognized or if an error occurs "
"collecting the paths."
msgstr ""

#: ../../library/os.rst:2282
msgid ""
"Raises an :ref:`auditing event <auditing>` ``os.listmounts`` with argument "
"``volume``."
msgstr ""
"引發一個附帶引數 ``volume`` 的\\ :ref:`稽核事件 <auditing>` ``os."
"listmounts``。"

#: ../../library/os.rst:2291
msgid "Return a list containing the volumes in the system."
msgstr ""

#: ../../library/os.rst:2293
msgid ""
"Volumes are typically represented as a GUID path that looks like ``\\\\?"
"\\Volume{xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx}\\``. Files can usually be "
"accessed through a GUID path, permissions allowing. However, users are "
"generally not familiar with them, and so the recommended use of this "
"function is to retrieve mount points using :func:`os.listmounts`."
msgstr ""

#: ../../library/os.rst:2300
msgid "May raise :exc:`OSError` if an error occurs collecting the volumes."
msgstr ""

#: ../../library/os.rst:2302
msgid ""
"Raises an :ref:`auditing event <auditing>` ``os.listvolumes`` with no "
"arguments."
msgstr "引發一個不附帶引數的\\ :ref:`稽核事件 <auditing>` ``os.listvolumes``。"

#: ../../library/os.rst:2311
msgid ""
"Perform the equivalent of an :c:func:`!lstat` system call on the given path. "
"Similar to :func:`~os.stat`, but does not follow symbolic links. Return a :"
"class:`stat_result` object."
msgstr ""

#: ../../library/os.rst:2315
msgid ""
"On platforms that do not support symbolic links, this is an alias for :func:"
"`~os.stat`."
msgstr ""

#: ../../library/os.rst:2318
msgid ""
"As of Python 3.3, this is equivalent to ``os.stat(path, dir_fd=dir_fd, "
"follow_symlinks=False)``."
msgstr ""

#: ../../library/os.rst:2321 ../../library/os.rst:2363
#: ../../library/os.rst:2431 ../../library/os.rst:2459
#: ../../library/os.rst:2533
msgid ""
"This function can also support :ref:`paths relative to directory descriptors "
"<dir_fd>`."
msgstr ""

#: ../../library/os.rst:2328 ../../library/os.rst:2542
#: ../../library/os.rst:3387
msgid "Added support for Windows 6.0 (Vista) symbolic links."
msgstr ""

#: ../../library/os.rst:2337
msgid ""
"On Windows, now opens reparse points that represent another path (name "
"surrogates), including symbolic links and directory junctions. Other kinds "
"of reparse points are resolved by the operating system as for :func:`~os."
"stat`."
msgstr ""

#: ../../library/os.rst:2346
msgid "Create a directory named *path* with numeric mode *mode*."
msgstr ""

#: ../../library/os.rst:2348
msgid ""
"If the directory already exists, :exc:`FileExistsError` is raised. If a "
"parent directory in the path does not exist, :exc:`FileNotFoundError` is "
"raised."
msgstr ""

#: ../../library/os.rst:2353
msgid ""
"On some systems, *mode* is ignored.  Where it is used, the current umask "
"value is first masked out.  If bits other than the last 9 (i.e. the last 3 "
"digits of the octal representation of the *mode*) are set, their meaning is "
"platform-dependent.  On some platforms, they are ignored and you should "
"call :func:`chmod` explicitly to set them."
msgstr ""

#: ../../library/os.rst:2359
msgid ""
"On Windows, a *mode* of ``0o700`` is specifically handled to apply access "
"control to the new directory such that only the current user and "
"administrators have access. Other values of *mode* are ignored."
msgstr ""

#: ../../library/os.rst:2366
msgid ""
"It is also possible to create temporary directories; see the :mod:`tempfile` "
"module's :func:`tempfile.mkdtemp` function."
msgstr ""

#: ../../library/os.rst:2369 ../../library/os.rst:2406
msgid ""
"Raises an :ref:`auditing event <auditing>` ``os.mkdir`` with arguments "
"``path``, ``mode``, ``dir_fd``."
msgstr ""
"引發一個附帶引數 ``path``、``mode``、``dir_fd`` 的\\ :ref:`稽核事件 "
"<auditing>` ``os.mkdir``。"

#: ../../library/os.rst:2377
msgid "Windows now handles a *mode* of ``0o700``."
msgstr ""

#: ../../library/os.rst:2387
msgid ""
"Recursive directory creation function.  Like :func:`mkdir`, but makes all "
"intermediate-level directories needed to contain the leaf directory."
msgstr ""

#: ../../library/os.rst:2390
msgid ""
"The *mode* parameter is passed to :func:`mkdir` for creating the leaf "
"directory; see :ref:`the mkdir() description <mkdir_modebits>` for how it is "
"interpreted.  To set the file permission bits of any newly created parent "
"directories you can set the umask before invoking :func:`makedirs`.  The "
"file permission bits of existing parent directories are not changed."
msgstr ""

#: ../../library/os.rst:2396
msgid ""
"If *exist_ok* is ``False`` (the default), a :exc:`FileExistsError` is raised "
"if the target directory already exists."
msgstr ""

#: ../../library/os.rst:2401
msgid ""
":func:`makedirs` will become confused if the path elements to create "
"include :data:`pardir` (eg. \"..\" on UNIX systems)."
msgstr ""

#: ../../library/os.rst:2404
msgid "This function handles UNC paths correctly."
msgstr ""

#: ../../library/os.rst:2408
msgid "Added the *exist_ok* parameter."
msgstr "新增 *exist_ok* 參數。"

#: ../../library/os.rst:2413
msgid ""
"Before Python 3.4.1, if *exist_ok* was ``True`` and the directory existed, :"
"func:`makedirs` would still raise an error if *mode* did not match the mode "
"of the existing directory. Since this behavior was impossible to implement "
"safely, it was removed in Python 3.4.1. See :issue:`21082`."
msgstr ""

#: ../../library/os.rst:2421
msgid ""
"The *mode* argument no longer affects the file permission bits of newly "
"created intermediate-level directories."
msgstr ""

#: ../../library/os.rst:2428
msgid ""
"Create a FIFO (a named pipe) named *path* with numeric mode *mode*. The "
"current umask value is first masked out from the mode."
msgstr ""

#: ../../library/os.rst:2434
msgid ""
"FIFOs are pipes that can be accessed like regular files.  FIFOs exist until "
"they are deleted (for example with :func:`os.unlink`). Generally, FIFOs are "
"used as rendezvous between \"client\" and \"server\" type processes: the "
"server opens the FIFO for reading, and the client opens it for writing.  "
"Note that :func:`mkfifo` doesn't open the FIFO --- it just creates the "
"rendezvous point."
msgstr ""

#: ../../library/os.rst:2451
msgid ""
"Create a filesystem node (file, device special file or named pipe) named "
"*path*. *mode* specifies both the permissions to use and the type of node to "
"be created, being combined (bitwise OR) with one of ``stat.S_IFREG``, ``stat."
"S_IFCHR``, ``stat.S_IFBLK``, and ``stat.S_IFIFO`` (those constants are "
"available in :mod:`stat`).  For ``stat.S_IFCHR`` and ``stat.S_IFBLK``, "
"*device* defines the newly created device special file (probably using :func:"
"`os.makedev`), otherwise it is ignored."
msgstr ""

#: ../../library/os.rst:2473
msgid ""
"Extract the device major number from a raw device number (usually the :attr:"
"`st_dev` or :attr:`st_rdev` field from :c:struct:`stat`)."
msgstr ""

#: ../../library/os.rst:2479
msgid ""
"Extract the device minor number from a raw device number (usually the :attr:"
"`st_dev` or :attr:`st_rdev` field from :c:struct:`stat`)."
msgstr ""

#: ../../library/os.rst:2485
msgid "Compose a raw device number from the major and minor device numbers."
msgstr ""

#: ../../library/os.rst:2490
msgid ""
"Return system configuration information relevant to a named file. *name* "
"specifies the configuration value to retrieve; it may be a string which is "
"the name of a defined system value; these names are specified in a number of "
"standards (POSIX.1, Unix 95, Unix 98, and others).  Some platforms define "
"additional names as well.  The names known to the host operating system are "
"given in the ``pathconf_names`` dictionary.  For configuration variables not "
"included in that mapping, passing an integer for *name* is also accepted."
msgstr ""

#: ../../library/os.rst:2503 ../../library/os.rst:3246
#: ../../library/os.rst:3415
msgid ""
"This function can support :ref:`specifying a file descriptor <path_fd>`."
msgstr ""

#: ../../library/os.rst:2514
msgid ""
"Dictionary mapping names accepted by :func:`pathconf` and :func:`fpathconf` "
"to the integer values defined for those names by the host operating system.  "
"This can be used to determine the set of names known to the system."
msgstr ""

#: ../../library/os.rst:2523
msgid ""
"Return a string representing the path to which the symbolic link points.  "
"The result may be either an absolute or relative pathname; if it is "
"relative, it may be converted to an absolute pathname using ``os.path."
"join(os.path.dirname(path), result)``."
msgstr ""

#: ../../library/os.rst:2528
msgid ""
"If the *path* is a string object (directly or indirectly through a :class:"
"`PathLike` interface), the result will also be a string object, and the call "
"may raise a UnicodeDecodeError. If the *path* is a bytes object (direct or "
"indirectly), the result will be a bytes object."
msgstr ""

#: ../../library/os.rst:2536
msgid ""
"When trying to resolve a path that may contain links, use :func:`~os.path."
"realpath` to properly handle recursion and platform differences."
msgstr ""

#: ../../library/os.rst:2548
msgid "Accepts a :term:`path-like object` on Unix."
msgstr ""

#: ../../library/os.rst:2551
msgid "Accepts a :term:`path-like object` and a bytes object on Windows."
msgstr ""

#: ../../library/os.rst:2554
msgid ""
"Added support for directory junctions, and changed to return the "
"substitution path (which typically includes ``\\\\?\\`` prefix) rather than "
"the optional \"print name\" field that was previously returned."
msgstr ""

#: ../../library/os.rst:2560
msgid ""
"Remove (delete) the file *path*.  If *path* is a directory, an :exc:"
"`OSError` is raised.  Use :func:`rmdir` to remove directories. If the file "
"does not exist, a :exc:`FileNotFoundError` is raised."
msgstr ""

#: ../../library/os.rst:2564 ../../library/os.rst:2677
#: ../../library/os.rst:3366
msgid ""
"This function can support :ref:`paths relative to directory descriptors "
"<dir_fd>`."
msgstr ""

#: ../../library/os.rst:2567
msgid ""
"On Windows, attempting to remove a file that is in use causes an exception "
"to be raised; on Unix, the directory entry is removed but the storage "
"allocated to the file is not made available until the original file is no "
"longer in use."
msgstr ""

#: ../../library/os.rst:2571
msgid "This function is semantically identical to :func:`unlink`."
msgstr ""

#: ../../library/os.rst:2573 ../../library/os.rst:2595
#: ../../library/os.rst:3437
msgid ""
"Raises an :ref:`auditing event <auditing>` ``os.remove`` with arguments "
"``path``, ``dir_fd``."
msgstr ""
"引發一個附帶引數 ``path``、``dir_fd`` 的\\ :ref:`稽核事件 <auditing>` ``os."
"remove``。"

#: ../../library/os.rst:2586
msgid ""
"Remove directories recursively.  Works like :func:`rmdir` except that, if "
"the leaf directory is successfully removed, :func:`removedirs`  tries to "
"successively remove every parent directory mentioned in  *path* until an "
"error is raised (which is ignored, because it generally means that a parent "
"directory is not empty). For example, ``os.removedirs('foo/bar/baz')`` will "
"first remove the directory ``'foo/bar/baz'``, and then remove ``'foo/bar'`` "
"and ``'foo'`` if they are empty. Raises :exc:`OSError` if the leaf directory "
"could not be successfully removed."
msgstr ""

#: ../../library/os.rst:2603
msgid ""
"Rename the file or directory *src* to *dst*. If *dst* exists, the operation "
"will fail with an :exc:`OSError` subclass in a number of cases:"
msgstr ""

#: ../../library/os.rst:2606
msgid ""
"On Windows, if *dst* exists a :exc:`FileExistsError` is always raised. The "
"operation may fail if *src* and *dst* are on different filesystems. Use :"
"func:`shutil.move` to support moves to a different filesystem."
msgstr ""

#: ../../library/os.rst:2610
msgid ""
"On Unix, if *src* is a file and *dst* is a directory or vice-versa, an :exc:"
"`IsADirectoryError` or a :exc:`NotADirectoryError` will be raised "
"respectively.  If both are directories and *dst* is empty, *dst* will be "
"silently replaced.  If *dst* is a non-empty directory, an :exc:`OSError` is "
"raised. If both are files, *dst* will be replaced silently if the user has "
"permission.  The operation may fail on some Unix flavors if *src* and *dst* "
"are on different filesystems.  If successful, the renaming will be an atomic "
"operation (this is a POSIX requirement)."
msgstr ""

#: ../../library/os.rst:2619 ../../library/os.rst:2659
msgid ""
"This function can support specifying *src_dir_fd* and/or *dst_dir_fd* to "
"supply :ref:`paths relative to directory descriptors <dir_fd>`."
msgstr ""

#: ../../library/os.rst:2622
msgid ""
"If you want cross-platform overwriting of the destination, use :func:"
"`replace`."
msgstr ""

#: ../../library/os.rst:2624 ../../library/os.rst:2645
#: ../../library/os.rst:2662
msgid ""
"Raises an :ref:`auditing event <auditing>` ``os.rename`` with arguments "
"``src``, ``dst``, ``src_dir_fd``, ``dst_dir_fd``."
msgstr ""
"引發一個附帶引數 ``src``、``dst``、``src_dir_fd``、``dst_dir_fd`` 的\\ :ref:`"
"稽核事件 <auditing>` ``os.rename``。"

#: ../../library/os.rst:2626
msgid "Added the *src_dir_fd* and *dst_dir_fd* parameters."
msgstr "新增 *src_dir_fd* 與 *dst_dir_fd* 參數。"

#: ../../library/os.rst:2635
msgid ""
"Recursive directory or file renaming function. Works like :func:`rename`, "
"except creation of any intermediate directories needed to make the new "
"pathname good is attempted first. After the rename, directories "
"corresponding to rightmost path segments of the old name will be pruned away "
"using :func:`removedirs`."
msgstr ""

#: ../../library/os.rst:2642
msgid ""
"This function can fail with the new directory structure made if you lack "
"permissions needed to remove the leaf directory or file."
msgstr ""

#: ../../library/os.rst:2647
msgid "Accepts a :term:`path-like object` for *old* and *new*."
msgstr ""

#: ../../library/os.rst:2653
msgid ""
"Rename the file or directory *src* to *dst*.  If *dst* is a non-empty "
"directory, :exc:`OSError` will be raised.  If *dst* exists and is a file, it "
"will be replaced silently if the user has permission.  The operation may "
"fail if *src* and *dst* are on different filesystems.  If successful, the "
"renaming will be an atomic operation (this is a POSIX requirement)."
msgstr ""

#: ../../library/os.rst:2672
msgid ""
"Remove (delete) the directory *path*.  If the directory does not exist or is "
"not empty, a :exc:`FileNotFoundError` or an :exc:`OSError` is raised "
"respectively.  In order to remove whole directory trees, :func:`shutil."
"rmtree` can be used."
msgstr ""

#: ../../library/os.rst:2680
msgid ""
"Raises an :ref:`auditing event <auditing>` ``os.rmdir`` with arguments "
"``path``, ``dir_fd``."
msgstr ""
"引發一個附帶引數 ``path``、``dir_fd`` 的\\ :ref:`稽核事件 <auditing>` ``os."
"rmdir``。"

#: ../../library/os.rst:2691
msgid ""
"Return an iterator of :class:`os.DirEntry` objects corresponding to the "
"entries in the directory given by *path*. The entries are yielded in "
"arbitrary order, and the special entries ``'.'`` and ``'..'`` are not "
"included.  If a file is removed from or added to the directory after "
"creating the iterator, whether an entry for that file be included is "
"unspecified."
msgstr ""

#: ../../library/os.rst:2698
msgid ""
"Using :func:`scandir` instead of :func:`listdir` can significantly increase "
"the performance of code that also needs file type or file attribute "
"information, because :class:`os.DirEntry` objects expose this information if "
"the operating system provides it when scanning a directory. All :class:`os."
"DirEntry` methods may perform a system call, but :func:`~os.DirEntry.is_dir` "
"and :func:`~os.DirEntry.is_file` usually only require a system call for "
"symbolic links; :func:`os.DirEntry.stat` always requires a system call on "
"Unix but only requires one for symbolic links on Windows."
msgstr ""

#: ../../library/os.rst:2708
msgid ""
"*path* may be a :term:`path-like object`.  If *path* is of type ``bytes`` "
"(directly or indirectly through the :class:`PathLike` interface), the type "
"of the :attr:`~os.DirEntry.name` and :attr:`~os.DirEntry.path` attributes of "
"each :class:`os.DirEntry` will be ``bytes``; in all other circumstances, "
"they will be of type ``str``."
msgstr ""

#: ../../library/os.rst:2717
msgid ""
"Raises an :ref:`auditing event <auditing>` ``os.scandir`` with argument "
"``path``."
msgstr ""
"引發一個附帶引數 ``path`` 的\\ :ref:`稽核事件 <auditing>` ``os.scandir``。"

#: ../../library/os.rst:2719
msgid ""
"The :func:`scandir` iterator supports the :term:`context manager` protocol "
"and has the following method:"
msgstr ""

#: ../../library/os.rst:2724
msgid "Close the iterator and free acquired resources."
msgstr ""

#: ../../library/os.rst:2726
msgid ""
"This is called automatically when the iterator is exhausted or garbage "
"collected, or when an error happens during iterating.  However it is "
"advisable to call it explicitly or use the :keyword:`with` statement."
msgstr ""

#: ../../library/os.rst:2733
msgid ""
"The following example shows a simple use of :func:`scandir` to display all "
"the files (excluding directories) in the given *path* that don't start with "
"``'.'``. The ``entry.is_file()`` call will generally not make an additional "
"system call::"
msgstr ""

#: ../../library/os.rst:2745
msgid ""
"On Unix-based systems, :func:`scandir` uses the system's `opendir() <https://"
"pubs.opengroup.org/onlinepubs/009695399/functions/opendir.html>`_ and "
"`readdir() <https://pubs.opengroup.org/onlinepubs/009695399/functions/"
"readdir_r.html>`_ functions. On Windows, it uses the Win32 `FindFirstFileW "
"<https://msdn.microsoft.com/en-us/library/windows/desktop/aa364418(v=vs.85)."
"aspx>`_ and `FindNextFileW <https://msdn.microsoft.com/en-us/library/windows/"
"desktop/aa364428(v=vs.85).aspx>`_ functions."
msgstr ""

#: ../../library/os.rst:2757
msgid ""
"Added support for the :term:`context manager` protocol and the :func:"
"`~scandir.close()` method.  If a :func:`scandir` iterator is neither "
"exhausted nor explicitly closed a :exc:`ResourceWarning` will be emitted in "
"its destructor."
msgstr ""

#: ../../library/os.rst:2763
msgid "The function accepts a :term:`path-like object`."
msgstr ""

#: ../../library/os.rst:2765
msgid "Added support for :ref:`file descriptors <path_fd>` on Unix."
msgstr ""

#: ../../library/os.rst:2771
msgid ""
"Object yielded by :func:`scandir` to expose the file path and other file "
"attributes of a directory entry."
msgstr ""

#: ../../library/os.rst:2774
msgid ""
":func:`scandir` will provide as much of this information as possible without "
"making additional system calls. When a ``stat()`` or ``lstat()`` system call "
"is made, the ``os.DirEntry`` object will cache the result."
msgstr ""

#: ../../library/os.rst:2778
msgid ""
"``os.DirEntry`` instances are not intended to be stored in long-lived data "
"structures; if you know the file metadata has changed or if a long time has "
"elapsed since calling :func:`scandir`, call ``os.stat(entry.path)`` to fetch "
"up-to-date information."
msgstr ""

#: ../../library/os.rst:2783
msgid ""
"Because the ``os.DirEntry`` methods can make operating system calls, they "
"may also raise :exc:`OSError`. If you need very fine-grained control over "
"errors, you can catch :exc:`OSError` when calling one of the ``os.DirEntry`` "
"methods and handle as appropriate."
msgstr ""

#: ../../library/os.rst:2788
msgid ""
"To be directly usable as a :term:`path-like object`, ``os.DirEntry`` "
"implements the :class:`PathLike` interface."
msgstr ""

#: ../../library/os.rst:2791
msgid "Attributes and methods on a ``os.DirEntry`` instance are as follows:"
msgstr ""

#: ../../library/os.rst:2795
msgid ""
"The entry's base filename, relative to the :func:`scandir` *path* argument."
msgstr ""

#: ../../library/os.rst:2798
msgid ""
"The :attr:`name` attribute will be ``bytes`` if the :func:`scandir` *path* "
"argument is of type ``bytes`` and ``str`` otherwise.  Use :func:`~os."
"fsdecode` to decode byte filenames."
msgstr ""

#: ../../library/os.rst:2804
msgid ""
"The entry's full path name: equivalent to ``os.path.join(scandir_path, entry."
"name)`` where *scandir_path* is the :func:`scandir` *path* argument.  The "
"path is only absolute if the :func:`scandir` *path* argument was absolute.  "
"If the :func:`scandir` *path* argument was a :ref:`file descriptor "
"<path_fd>`, the :attr:`path` attribute is the same as the :attr:`name` "
"attribute."
msgstr ""

#: ../../library/os.rst:2811
msgid ""
"The :attr:`path` attribute will be ``bytes`` if the :func:`scandir` *path* "
"argument is of type ``bytes`` and ``str`` otherwise.  Use :func:`~os."
"fsdecode` to decode byte filenames."
msgstr ""

#: ../../library/os.rst:2817
msgid "Return the inode number of the entry."
msgstr ""

#: ../../library/os.rst:2819
msgid ""
"The result is cached on the ``os.DirEntry`` object. Use ``os.stat(entry."
"path, follow_symlinks=False).st_ino`` to fetch up-to-date information."
msgstr ""

#: ../../library/os.rst:2823
msgid ""
"On the first, uncached call, a system call is required on Windows but not on "
"Unix."
msgstr ""

#: ../../library/os.rst:2828
msgid ""
"Return ``True`` if this entry is a directory or a symbolic link pointing to "
"a directory; return ``False`` if the entry is or points to any other kind of "
"file, or if it doesn't exist anymore."
msgstr ""

#: ../../library/os.rst:2832
msgid ""
"If *follow_symlinks* is ``False``, return ``True`` only if this entry is a "
"directory (without following symlinks); return ``False`` if the entry is any "
"other kind of file or if it doesn't exist anymore."
msgstr ""

#: ../../library/os.rst:2836
msgid ""
"The result is cached on the ``os.DirEntry`` object, with a separate cache "
"for *follow_symlinks* ``True`` and ``False``. Call :func:`os.stat` along "
"with :func:`stat.S_ISDIR` to fetch up-to-date information."
msgstr ""

#: ../../library/os.rst:2840
msgid ""
"On the first, uncached call, no system call is required in most cases. "
"Specifically, for non-symlinks, neither Windows or Unix require a system "
"call, except on certain Unix file systems, such as network file systems, "
"that return ``dirent.d_type == DT_UNKNOWN``. If the entry is a symlink, a "
"system call will be required to follow the symlink unless *follow_symlinks* "
"is ``False``."
msgstr ""

#: ../../library/os.rst:2847 ../../library/os.rst:2877
msgid ""
"This method can raise :exc:`OSError`, such as :exc:`PermissionError`, but :"
"exc:`FileNotFoundError` is caught and not raised."
msgstr ""

#: ../../library/os.rst:2852
msgid ""
"Return ``True`` if this entry is a file or a symbolic link pointing to a "
"file; return ``False`` if the entry is or points to a directory or other non-"
"file entry, or if it doesn't exist anymore."
msgstr ""

#: ../../library/os.rst:2856
msgid ""
"If *follow_symlinks* is ``False``, return ``True`` only if this entry is a "
"file (without following symlinks); return ``False`` if the entry is a "
"directory or other non-file entry, or if it doesn't exist anymore."
msgstr ""

#: ../../library/os.rst:2860
msgid ""
"The result is cached on the ``os.DirEntry`` object. Caching, system calls "
"made, and exceptions raised are as per :func:`~os.DirEntry.is_dir`."
msgstr ""

#: ../../library/os.rst:2865
msgid ""
"Return ``True`` if this entry is a symbolic link (even if broken); return "
"``False`` if the entry points to a directory or any kind of file, or if it "
"doesn't exist anymore."
msgstr ""

#: ../../library/os.rst:2869
msgid ""
"The result is cached on the ``os.DirEntry`` object. Call :func:`os.path."
"islink` to fetch up-to-date information."
msgstr ""

#: ../../library/os.rst:2872
msgid ""
"On the first, uncached call, no system call is required in most cases. "
"Specifically, neither Windows or Unix require a system call, except on "
"certain Unix file systems, such as network file systems, that return "
"``dirent.d_type == DT_UNKNOWN``."
msgstr ""

#: ../../library/os.rst:2882
msgid ""
"Return ``True`` if this entry is a junction (even if broken); return "
"``False`` if the entry points to a regular directory, any kind of file, a "
"symlink, or if it doesn't exist anymore."
msgstr ""

#: ../../library/os.rst:2886
msgid ""
"The result is cached on the ``os.DirEntry`` object. Call :func:`os.path."
"isjunction` to fetch up-to-date information."
msgstr ""

#: ../../library/os.rst:2893
msgid ""
"Return a :class:`stat_result` object for this entry. This method follows "
"symbolic links by default; to stat a symbolic link add the "
"``follow_symlinks=False`` argument."
msgstr ""

#: ../../library/os.rst:2897
msgid ""
"On Unix, this method always requires a system call. On Windows, it only "
"requires a system call if *follow_symlinks* is ``True`` and the entry is a "
"reparse point (for example, a symbolic link or directory junction)."
msgstr ""

#: ../../library/os.rst:2902
msgid ""
"On Windows, the ``st_ino``, ``st_dev`` and ``st_nlink`` attributes of the :"
"class:`stat_result` are always set to zero. Call :func:`os.stat` to get "
"these attributes."
msgstr ""

#: ../../library/os.rst:2906
msgid ""
"The result is cached on the ``os.DirEntry`` object, with a separate cache "
"for *follow_symlinks* ``True`` and ``False``. Call :func:`os.stat` to fetch "
"up-to-date information."
msgstr ""

#: ../../library/os.rst:2910
msgid ""
"Note that there is a nice correspondence between several attributes and "
"methods of ``os.DirEntry`` and of :class:`pathlib.Path`.  In particular, the "
"``name`` attribute has the same meaning, as do the ``is_dir()``, "
"``is_file()``, ``is_symlink()``, ``is_junction()``, and ``stat()`` methods."
msgstr ""

#: ../../library/os.rst:2918
msgid ""
"Added support for the :class:`~os.PathLike` interface.  Added support for :"
"class:`bytes` paths on Windows."
msgstr ""

#: ../../library/os.rst:2922
msgid ""
"The ``st_ctime`` attribute of a stat result is deprecated on Windows. The "
"file creation time is properly available as ``st_birthtime``, and in the "
"future ``st_ctime`` may be changed to return zero or the metadata change "
"time, if available."
msgstr ""

#: ../../library/os.rst:2931
msgid ""
"Get the status of a file or a file descriptor. Perform the equivalent of a :"
"c:func:`stat` system call on the given path. *path* may be specified as "
"either a string or bytes -- directly or indirectly through the :class:"
"`PathLike` interface -- or as an open file descriptor. Return a :class:"
"`stat_result` object."
msgstr ""

#: ../../library/os.rst:2937
msgid ""
"This function normally follows symlinks; to stat a symlink add the argument "
"``follow_symlinks=False``, or use :func:`lstat`."
msgstr ""

#: ../../library/os.rst:2940 ../../library/os.rst:3805
#: ../../library/os.rst:3821 ../../library/os.rst:3837
#: ../../library/os.rst:3857
msgid ""
"This function can support :ref:`specifying a file descriptor <path_fd>` and :"
"ref:`not following symlinks <follow_symlinks>`."
msgstr ""

#: ../../library/os.rst:2943
msgid ""
"On Windows, passing ``follow_symlinks=False`` will disable following all "
"name-surrogate reparse points, which includes symlinks and directory "
"junctions. Other types of reparse points that do not resemble links or that "
"the operating system is unable to follow will be opened directly. When "
"following a chain of multiple links, this may result in the original link "
"being returned instead of the non-link that prevented full traversal. To "
"obtain stat results for the final path in this case, use the :func:`os.path."
"realpath` function to resolve the path name as far as possible and call :"
"func:`lstat` on the result. This does not apply to dangling symlinks or "
"junction points, which will raise the usual exceptions."
msgstr ""

#: ../../library/os.rst:2956 ../../library/os.rst:3725
msgid "Example::"
msgstr "範例： ::"

#: ../../library/os.rst:2969
msgid ":func:`fstat` and :func:`lstat` functions."
msgstr ":func:`fstat` 和 :func:`lstat` 函式。"

#: ../../library/os.rst:2971
msgid ""
"Added the *dir_fd* and *follow_symlinks* parameters, specifying a file "
"descriptor instead of a path."
msgstr "新增 *dir_fd* 與 *follow_symlinks* 參數，指定一個檔案描述器而非路徑。"

#: ../../library/os.rst:2978
msgid ""
"On Windows, all reparse points that can be resolved by the operating system "
"are now followed, and passing ``follow_symlinks=False`` disables following "
"all name surrogate reparse points. If the operating system reaches a reparse "
"point that it is not able to follow, *stat* now returns the information for "
"the original path as if ``follow_symlinks=False`` had been specified instead "
"of raising an error."
msgstr ""

#: ../../library/os.rst:2989
msgid ""
"Object whose attributes correspond roughly to the members of the :c:struct:"
"`stat` structure. It is used for the result of :func:`os.stat`, :func:`os."
"fstat` and :func:`os.lstat`."
msgstr ""

#: ../../library/os.rst:2993
msgid "Attributes:"
msgstr ""

#: ../../library/os.rst:2997
msgid "File mode: file type and file mode bits (permissions)."
msgstr ""

#: ../../library/os.rst:3001
msgid ""
"Platform dependent, but if non-zero, uniquely identifies the file for a "
"given value of ``st_dev``. Typically:"
msgstr ""

#: ../../library/os.rst:3004
msgid "the inode number on Unix,"
msgstr ""

#: ../../library/os.rst:3005
msgid ""
"the `file index <https://msdn.microsoft.com/en-us/library/aa363788>`_ on "
"Windows"
msgstr ""

#: ../../library/os.rst:3011
msgid "Identifier of the device on which this file resides."
msgstr ""

#: ../../library/os.rst:3015
msgid "Number of hard links."
msgstr ""

#: ../../library/os.rst:3019
msgid "User identifier of the file owner."
msgstr ""

#: ../../library/os.rst:3023
msgid "Group identifier of the file owner."
msgstr ""

#: ../../library/os.rst:3027
msgid ""
"Size of the file in bytes, if it is a regular file or a symbolic link. The "
"size of a symbolic link is the length of the pathname it contains, without a "
"terminating null byte."
msgstr ""

#: ../../library/os.rst:3031
msgid "Timestamps:"
msgstr ""

#: ../../library/os.rst:3035
msgid "Time of most recent access expressed in seconds."
msgstr ""

#: ../../library/os.rst:3039
msgid "Time of most recent content modification expressed in seconds."
msgstr ""

#: ../../library/os.rst:3043
msgid "Time of most recent metadata change expressed in seconds."
msgstr ""

#: ../../library/os.rst:3045
msgid ""
"``st_ctime`` is deprecated on Windows. Use ``st_birthtime`` for the file "
"creation time. In the future, ``st_ctime`` will contain the time of the most "
"recent metadata change, as for other platforms."
msgstr ""

#: ../../library/os.rst:3052
msgid "Time of most recent access expressed in nanoseconds as an integer."
msgstr ""

#: ../../library/os.rst:3058
msgid ""
"Time of most recent content modification expressed in nanoseconds as an "
"integer."
msgstr ""

#: ../../library/os.rst:3065
msgid ""
"Time of most recent metadata change expressed in nanoseconds as an integer."
msgstr ""

#: ../../library/os.rst:3070
msgid ""
"``st_ctime_ns`` is deprecated on Windows. Use ``st_birthtime_ns`` for the "
"file creation time. In the future, ``st_ctime`` will contain the time of the "
"most recent metadata change, as for other platforms."
msgstr ""

#: ../../library/os.rst:3077
msgid ""
"Time of file creation expressed in seconds. This attribute is not always "
"available, and may raise :exc:`AttributeError`."
msgstr ""

#: ../../library/os.rst:3080
msgid "``st_birthtime`` is now available on Windows."
msgstr ""

#: ../../library/os.rst:3085
msgid ""
"Time of file creation expressed in nanoseconds as an integer. This attribute "
"is not always available, and may raise :exc:`AttributeError`."
msgstr ""

#: ../../library/os.rst:3093
msgid ""
"The exact meaning and resolution of the :attr:`st_atime`, :attr:`st_mtime`, :"
"attr:`st_ctime` and :attr:`st_birthtime` attributes depend on the operating "
"system and the file system. For example, on Windows systems using the FAT32 "
"file systems, :attr:`st_mtime` has 2-second resolution, and :attr:`st_atime` "
"has only 1-day resolution. See your operating system documentation for "
"details."
msgstr ""

#: ../../library/os.rst:3100
msgid ""
"Similarly, although :attr:`st_atime_ns`, :attr:`st_mtime_ns`, :attr:"
"`st_ctime_ns` and :attr:`st_birthtime_ns` are always expressed in "
"nanoseconds, many systems do not provide nanosecond precision.  On systems "
"that do provide nanosecond precision, the floating-point object used to "
"store :attr:`st_atime`, :attr:`st_mtime`, :attr:`st_ctime` and :attr:"
"`st_birthtime` cannot preserve all of it, and as such will be slightly "
"inexact. If you need the exact timestamps you should always use :attr:"
"`st_atime_ns`, :attr:`st_mtime_ns`, :attr:`st_ctime_ns` and :attr:"
"`st_birthtime_ns`."
msgstr ""

#: ../../library/os.rst:3110
msgid ""
"On some Unix systems (such as Linux), the following attributes may also be "
"available:"
msgstr ""

#: ../../library/os.rst:3115
msgid ""
"Number of 512-byte blocks allocated for file. This may be smaller than :attr:"
"`st_size`/512 when the file has holes."
msgstr ""

#: ../../library/os.rst:3120
msgid ""
"\"Preferred\" blocksize for efficient file system I/O. Writing to a file in "
"smaller chunks may cause an inefficient read-modify-rewrite."
msgstr ""

#: ../../library/os.rst:3125
msgid "Type of device if an inode device."
msgstr ""

#: ../../library/os.rst:3129
msgid "User defined flags for file."
msgstr ""

#: ../../library/os.rst:3131
msgid ""
"On other Unix systems (such as FreeBSD), the following attributes may be "
"available (but may be only filled out if root tries to use them):"
msgstr ""

#: ../../library/os.rst:3136
msgid "File generation number."
msgstr ""

#: ../../library/os.rst:3138
msgid ""
"On Solaris and derivatives, the following attributes may also be available:"
msgstr ""

#: ../../library/os.rst:3143
msgid ""
"String that uniquely identifies the type of the filesystem that contains the "
"file."
msgstr ""

#: ../../library/os.rst:3146
msgid "On macOS systems, the following attributes may also be available:"
msgstr ""

#: ../../library/os.rst:3150
msgid "Real size of the file."
msgstr ""

#: ../../library/os.rst:3154
msgid "Creator of the file."
msgstr ""

#: ../../library/os.rst:3158
msgid "File type."
msgstr ""

#: ../../library/os.rst:3160
msgid "On Windows systems, the following attributes are also available:"
msgstr ""

#: ../../library/os.rst:3164
msgid ""
"Windows file attributes: ``dwFileAttributes`` member of the "
"``BY_HANDLE_FILE_INFORMATION`` structure returned by :c:func:`!"
"GetFileInformationByHandle`. See the :const:`!FILE_ATTRIBUTE_* <stat."
"FILE_ATTRIBUTE_ARCHIVE>` constants in the :mod:`stat` module."
msgstr ""

#: ../../library/os.rst:3174
msgid ""
"When :attr:`st_file_attributes` has the :const:`~stat."
"FILE_ATTRIBUTE_REPARSE_POINT` set, this field contains the tag identifying "
"the type of reparse point. See the :const:`IO_REPARSE_TAG_* <stat."
"IO_REPARSE_TAG_SYMLINK>` constants in the :mod:`stat` module."
msgstr ""

#: ../../library/os.rst:3179
msgid ""
"The standard module :mod:`stat` defines functions and constants that are "
"useful for extracting information from a :c:struct:`stat` structure. (On "
"Windows, some items are filled with dummy values.)"
msgstr ""

#: ../../library/os.rst:3183
msgid ""
"For backward compatibility, a :class:`stat_result` instance is also "
"accessible as a tuple of at least 10 integers giving the most important (and "
"portable) members of the :c:struct:`stat` structure, in the order :attr:"
"`st_mode`, :attr:`st_ino`, :attr:`st_dev`, :attr:`st_nlink`, :attr:"
"`st_uid`, :attr:`st_gid`, :attr:`st_size`, :attr:`st_atime`, :attr:"
"`st_mtime`, :attr:`st_ctime`. More items may be added at the end by some "
"implementations. For compatibility with older Python versions, accessing :"
"class:`stat_result` as a tuple always returns integers."
msgstr ""

#: ../../library/os.rst:3192
msgid "Windows now returns the file index as :attr:`st_ino` when available."
msgstr ""

#: ../../library/os.rst:3196
msgid "Added the :attr:`st_fstype` member to Solaris/derivatives."
msgstr ""

#: ../../library/os.rst:3199
msgid "Added the :attr:`st_reparse_tag` member on Windows."
msgstr "在 Windows 上新增 :attr:`st_reparse_tag` 成員。"

#: ../../library/os.rst:3202
msgid ""
"On Windows, the :attr:`st_mode` member now identifies special files as :"
"const:`S_IFCHR`, :const:`S_IFIFO` or :const:`S_IFBLK` as appropriate."
msgstr ""

#: ../../library/os.rst:3207
msgid ""
"On Windows, :attr:`st_ctime` is deprecated. Eventually, it will contain the "
"last metadata change time, for consistency with other platforms, but for now "
"still contains creation time. Use :attr:`st_birthtime` for the creation time."
msgstr ""

#: ../../library/os.rst:3213
msgid ""
"On Windows, :attr:`st_ino` may now be up to 128 bits, depending on the file "
"system. Previously it would not be above 64 bits, and larger file "
"identifiers would be arbitrarily packed."
msgstr ""

#: ../../library/os.rst:3217
msgid ""
"On Windows, :attr:`st_rdev` no longer returns a value. Previously it would "
"contain the same as :attr:`st_dev`, which was incorrect."
msgstr ""

#: ../../library/os.rst:3220
msgid "Added the :attr:`st_birthtime` member on Windows."
msgstr "在 Windows 上新增 :attr:`st_birthtime` 成員。"

#: ../../library/os.rst:3225
msgid ""
"Perform a :c:func:`!statvfs` system call on the given path.  The return "
"value is an object whose attributes describe the filesystem on the given "
"path, and correspond to the members of the :c:struct:`statvfs` structure, "
"namely: :attr:`f_bsize`, :attr:`f_frsize`, :attr:`f_blocks`, :attr:"
"`f_bfree`, :attr:`f_bavail`, :attr:`f_files`, :attr:`f_ffree`, :attr:"
"`f_favail`, :attr:`f_flag`, :attr:`f_namemax`, :attr:`f_fsid`."
msgstr ""

#: ../../library/os.rst:3232
msgid ""
"Two module-level constants are defined for the :attr:`f_flag` attribute's "
"bit-flags: if :const:`ST_RDONLY` is set, the filesystem is mounted read-"
"only, and if :const:`ST_NOSUID` is set, the semantics of setuid/setgid bits "
"are disabled or not supported."
msgstr ""

#: ../../library/os.rst:3237
msgid ""
"Additional module-level constants are defined for GNU/glibc based systems. "
"These are :const:`ST_NODEV` (disallow access to device special files), :"
"const:`ST_NOEXEC` (disallow program execution), :const:`ST_SYNCHRONOUS` "
"(writes are synced at once), :const:`ST_MANDLOCK` (allow mandatory locks on "
"an FS), :const:`ST_WRITE` (write on file/directory/symlink), :const:"
"`ST_APPEND` (append-only file), :const:`ST_IMMUTABLE` (immutable file), :"
"const:`ST_NOATIME` (do not update access times), :const:`ST_NODIRATIME` (do "
"not update directory access times), :const:`ST_RELATIME` (update atime "
"relative to mtime/ctime)."
msgstr ""

#: ../../library/os.rst:3250
msgid "The :const:`ST_RDONLY` and :const:`ST_NOSUID` constants were added."
msgstr "新增 :const:`ST_RDONLY` 與 :const:`ST_NOSUID` 常數。"

#: ../../library/os.rst:3256
msgid ""
"The :const:`ST_NODEV`, :const:`ST_NOEXEC`, :const:`ST_SYNCHRONOUS`, :const:"
"`ST_MANDLOCK`, :const:`ST_WRITE`, :const:`ST_APPEND`, :const:"
"`ST_IMMUTABLE`, :const:`ST_NOATIME`, :const:`ST_NODIRATIME`, and :const:"
"`ST_RELATIME` constants were added."
msgstr ""

#: ../../library/os.rst:3265
msgid "Added the :attr:`f_fsid` attribute."
msgstr "新增 :attr:`f_fsid` 屬性。"

#: ../../library/os.rst:3271
msgid ""
"A :class:`set` object indicating which functions in the :mod:`os` module "
"accept an open file descriptor for their *dir_fd* parameter. Different "
"platforms provide different features, and the underlying functionality "
"Python uses to implement the *dir_fd* parameter is not available on all "
"platforms Python supports.  For consistency's sake, functions that may "
"support *dir_fd* always allow specifying the parameter, but will throw an "
"exception if the functionality is used when it's not locally available. "
"(Specifying ``None`` for *dir_fd* is always supported on all platforms.)"
msgstr ""

#: ../../library/os.rst:3281
msgid ""
"To check whether a particular function accepts an open file descriptor for "
"its *dir_fd* parameter, use the ``in`` operator on ``supports_dir_fd``. As "
"an example, this expression evaluates to ``True`` if :func:`os.stat` accepts "
"open file descriptors for *dir_fd* on the local platform::"
msgstr ""

#: ../../library/os.rst:3288
msgid ""
"Currently *dir_fd* parameters only work on Unix platforms; none of them work "
"on Windows."
msgstr ""

#: ../../library/os.rst:3296
msgid ""
"A :class:`set` object indicating whether :func:`os.access` permits "
"specifying ``True`` for its *effective_ids* parameter on the local platform. "
"(Specifying ``False`` for *effective_ids* is always supported on all "
"platforms.)  If the local platform supports it, the collection will contain :"
"func:`os.access`; otherwise it will be empty."
msgstr ""

#: ../../library/os.rst:3302
msgid ""
"This expression evaluates to ``True`` if :func:`os.access` supports "
"``effective_ids=True`` on the local platform::"
msgstr ""

#: ../../library/os.rst:3307
msgid ""
"Currently *effective_ids* is only supported on Unix platforms; it does not "
"work on Windows."
msgstr ""

#: ../../library/os.rst:3315
msgid ""
"A :class:`set` object indicating which functions in the :mod:`os` module "
"permit specifying their *path* parameter as an open file descriptor on the "
"local platform.  Different platforms provide different features, and the "
"underlying functionality Python uses to accept open file descriptors as "
"*path* arguments is not available on all platforms Python supports."
msgstr ""

#: ../../library/os.rst:3322
msgid ""
"To determine whether a particular function permits specifying an open file "
"descriptor for its *path* parameter, use the ``in`` operator on "
"``supports_fd``. As an example, this expression evaluates to ``True`` if :"
"func:`os.chdir` accepts open file descriptors for *path* on your local "
"platform::"
msgstr ""

#: ../../library/os.rst:3335
msgid ""
"A :class:`set` object indicating which functions in the :mod:`os` module "
"accept ``False`` for their *follow_symlinks* parameter on the local "
"platform. Different platforms provide different features, and the underlying "
"functionality Python uses to implement *follow_symlinks* is not available on "
"all platforms Python supports.  For consistency's sake, functions that may "
"support *follow_symlinks* always allow specifying the parameter, but will "
"throw an exception if the functionality is used when it's not locally "
"available.  (Specifying ``True`` for *follow_symlinks* is always supported "
"on all platforms.)"
msgstr ""

#: ../../library/os.rst:3345
msgid ""
"To check whether a particular function accepts ``False`` for its "
"*follow_symlinks* parameter, use the ``in`` operator on "
"``supports_follow_symlinks``.  As an example, this expression evaluates to "
"``True`` if you may specify ``follow_symlinks=False`` when calling :func:`os."
"stat` on the local platform::"
msgstr ""

#: ../../library/os.rst:3358
msgid "Create a symbolic link pointing to *src* named *dst*."
msgstr ""

#: ../../library/os.rst:3360
msgid ""
"On Windows, a symlink represents either a file or a directory, and does not "
"morph to the target dynamically.  If the target is present, the type of the "
"symlink will be created to match. Otherwise, the symlink will be created as "
"a directory if *target_is_directory* is ``True`` or a file symlink (the "
"default) otherwise.  On non-Windows platforms, *target_is_directory* is "
"ignored."
msgstr ""

#: ../../library/os.rst:3371
msgid ""
"On newer versions of Windows 10, unprivileged accounts can create symlinks "
"if Developer Mode is enabled. When Developer Mode is not available/enabled, "
"the *SeCreateSymbolicLinkPrivilege* privilege is required, or the process "
"must be run as an administrator."
msgstr ""

#: ../../library/os.rst:3377
msgid ""
":exc:`OSError` is raised when the function is called by an unprivileged user."
msgstr ""

#: ../../library/os.rst:3380
msgid ""
"Raises an :ref:`auditing event <auditing>` ``os.symlink`` with arguments "
"``src``, ``dst``, ``dir_fd``."
msgstr ""
"引發一個附帶引數 ``src``、``dst``、``dir_fd`` 的\\ :ref:`稽核事件 "
"<auditing>` ``os.symlink``。"

#: ../../library/os.rst:3390
msgid ""
"Added the *dir_fd* parameter, and now allow *target_is_directory* on non-"
"Windows platforms."
msgstr ""

#: ../../library/os.rst:3397
msgid "Added support for unelevated symlinks on Windows with Developer Mode."
msgstr ""

#: ../../library/os.rst:3403
msgid "Force write of everything to disk."
msgstr ""

#: ../../library/os.rst:3412
msgid ""
"Truncate the file corresponding to *path*, so that it is at most *length* "
"bytes in size."
msgstr ""

#: ../../library/os.rst:3417
msgid ""
"Raises an :ref:`auditing event <auditing>` ``os.truncate`` with arguments "
"``path``, ``length``."
msgstr ""
"引發一個附帶引數 ``path``、``length`` 的\\ :ref:`稽核事件 <auditing>` ``os."
"truncate``。"

#: ../../library/os.rst:3432
msgid ""
"Remove (delete) the file *path*.  This function is semantically identical "
"to :func:`remove`; the ``unlink`` name is its traditional Unix name.  Please "
"see the documentation for :func:`remove` for further information."
msgstr ""

#: ../../library/os.rst:3448
msgid "Set the access and modified times of the file specified by *path*."
msgstr ""

#: ../../library/os.rst:3450
msgid ""
":func:`utime` takes two optional parameters, *times* and *ns*. These specify "
"the times set on *path* and are used as follows:"
msgstr ""

#: ../../library/os.rst:3453
msgid ""
"If *ns* is specified, it must be a 2-tuple of the form ``(atime_ns, "
"mtime_ns)`` where each member is an int expressing nanoseconds."
msgstr ""

#: ../../library/os.rst:3456
msgid ""
"If *times* is not ``None``, it must be a 2-tuple of the form ``(atime, "
"mtime)`` where each member is an int or float expressing seconds."
msgstr ""

#: ../../library/os.rst:3459
msgid ""
"If *times* is ``None`` and *ns* is unspecified, this is equivalent to "
"specifying ``ns=(atime_ns, mtime_ns)`` where both times are the current time."
msgstr ""

#: ../../library/os.rst:3463
msgid "It is an error to specify tuples for both *times* and *ns*."
msgstr ""

#: ../../library/os.rst:3465
msgid ""
"Note that the exact times you set here may not be returned by a subsequent :"
"func:`~os.stat` call, depending on the resolution with which your operating "
"system records access and modification times; see :func:`~os.stat`. The best "
"way to preserve exact times is to use the *st_atime_ns* and *st_mtime_ns* "
"fields from the :func:`os.stat` result object with the *ns* parameter to :"
"func:`utime`."
msgstr ""

#: ../../library/os.rst:3476
msgid ""
"Raises an :ref:`auditing event <auditing>` ``os.utime`` with arguments "
"``path``, ``times``, ``ns``, ``dir_fd``."
msgstr ""
"引發一個附帶引數 ``path``、``times``、``ns``、``dir_fd`` 的\\ :ref:`稽核事件 "
"<auditing>` ``os.utime``。"

#: ../../library/os.rst:3478
msgid ""
"Added support for specifying *path* as an open file descriptor, and the "
"*dir_fd*, *follow_symlinks*, and *ns* parameters."
msgstr ""

#: ../../library/os.rst:3492
msgid ""
"Generate the file names in a directory tree by walking the tree either top-"
"down or bottom-up. For each directory in the tree rooted at directory *top* "
"(including *top* itself), it yields a 3-tuple ``(dirpath, dirnames, "
"filenames)``."
msgstr ""

#: ../../library/os.rst:3497
msgid ""
"*dirpath* is a string, the path to the directory.  *dirnames* is a list of "
"the names of the subdirectories in *dirpath* (including symlinks to "
"directories, and excluding ``'.'`` and ``'..'``). *filenames* is a list of "
"the names of the non-directory files in *dirpath*. Note that the names in "
"the lists contain no path components.  To get a full path (which begins with "
"*top*) to a file or directory in *dirpath*, do ``os.path.join(dirpath, "
"name)``.  Whether or not the lists are sorted depends on the file system.  "
"If a file is removed from or added to the *dirpath* directory during "
"generating the lists, whether a name for that file be included is "
"unspecified."
msgstr ""

#: ../../library/os.rst:3508
msgid ""
"If optional argument *topdown* is ``True`` or not specified, the triple for "
"a directory is generated before the triples for any of its subdirectories "
"(directories are generated top-down).  If *topdown* is ``False``, the triple "
"for a directory is generated after the triples for all of its subdirectories "
"(directories are generated bottom-up). No matter the value of *topdown*, the "
"list of subdirectories is retrieved before the tuples for the directory and "
"its subdirectories are generated."
msgstr ""

#: ../../library/os.rst:3516
msgid ""
"When *topdown* is ``True``, the caller can modify the *dirnames* list in-"
"place (perhaps using :keyword:`del` or slice assignment), and :func:`walk` "
"will only recurse into the subdirectories whose names remain in *dirnames*; "
"this can be used to prune the search, impose a specific order of visiting, "
"or even to inform :func:`walk` about directories the caller creates or "
"renames before it resumes :func:`walk` again.  Modifying *dirnames* when "
"*topdown* is ``False`` has no effect on the behavior of the walk, because in "
"bottom-up mode the directories in *dirnames* are generated before *dirpath* "
"itself is generated."
msgstr ""

#: ../../library/os.rst:3525
msgid ""
"By default, errors from the :func:`scandir` call are ignored.  If optional "
"argument *onerror* is specified, it should be a function; it will be called "
"with one argument, an :exc:`OSError` instance.  It can report the error to "
"continue with the walk, or raise the exception to abort the walk.  Note that "
"the filename is available as the ``filename`` attribute of the exception "
"object."
msgstr ""

#: ../../library/os.rst:3531
msgid ""
"By default, :func:`walk` will not walk down into symbolic links that resolve "
"to directories. Set *followlinks* to ``True`` to visit directories pointed "
"to by symlinks, on systems that support them."
msgstr ""

#: ../../library/os.rst:3537
msgid ""
"Be aware that setting *followlinks* to ``True`` can lead to infinite "
"recursion if a link points to a parent directory of itself. :func:`walk` "
"does not keep track of the directories it visited already."
msgstr ""

#: ../../library/os.rst:3543
msgid ""
"If you pass a relative pathname, don't change the current working directory "
"between resumptions of :func:`walk`.  :func:`walk` never changes the current "
"directory, and assumes that its caller doesn't either."
msgstr ""

#: ../../library/os.rst:3547 ../../library/os.rst:3608
msgid ""
"This example displays the number of bytes taken by non-directory files in "
"each directory under the starting directory, except that it doesn't look "
"under any CVS subdirectory::"
msgstr ""

#: ../../library/os.rst:3560
msgid ""
"In the next example (simple implementation of :func:`shutil.rmtree`), "
"walking the tree bottom-up is essential, :func:`rmdir` doesn't allow "
"deleting a directory before the directory is empty::"
msgstr ""

#: ../../library/os.rst:3575
msgid ""
"Raises an :ref:`auditing event <auditing>` ``os.walk`` with arguments "
"``top``, ``topdown``, ``onerror``, ``followlinks``."
msgstr ""
"引發一個附帶引數 ``top``、``topdown``、``onerror``、``followlinks`` 的\\ :"
"ref:`稽核事件 <auditing>` ``os.walk``。"

#: ../../library/os.rst:3577
msgid ""
"This function now calls :func:`os.scandir` instead of :func:`os.listdir`, "
"making it faster by reducing the number of calls to :func:`os.stat`."
msgstr ""

#: ../../library/os.rst:3591
msgid ""
"This behaves exactly like :func:`walk`, except that it yields a 4-tuple "
"``(dirpath, dirnames, filenames, dirfd)``, and it supports ``dir_fd``."
msgstr ""

#: ../../library/os.rst:3594
msgid ""
"*dirpath*, *dirnames* and *filenames* are identical to :func:`walk` output, "
"and *dirfd* is a file descriptor referring to the directory *dirpath*."
msgstr ""

#: ../../library/os.rst:3597
msgid ""
"This function always supports :ref:`paths relative to directory descriptors "
"<dir_fd>` and :ref:`not following symlinks <follow_symlinks>`.  Note however "
"that, unlike other functions, the :func:`fwalk` default value for "
"*follow_symlinks* is ``False``."
msgstr ""

#: ../../library/os.rst:3604
msgid ""
"Since :func:`fwalk` yields file descriptors, those are only valid until the "
"next iteration step, so you should duplicate them (e.g. with :func:`dup`) if "
"you want to keep them longer."
msgstr ""

#: ../../library/os.rst:3621
msgid ""
"In the next example, walking the tree bottom-up is essential: :func:`rmdir` "
"doesn't allow deleting a directory before the directory is empty::"
msgstr ""

#: ../../library/os.rst:3636
msgid ""
"Raises an :ref:`auditing event <auditing>` ``os.fwalk`` with arguments "
"``top``, ``topdown``, ``onerror``, ``follow_symlinks``, ``dir_fd``."
msgstr ""
"引發一個附帶引數 ``top``、``topdown``、``onerror``、``follow_symlinks``、"
"``dir_fd`` 的\\ :ref:`稽核事件 <auditing>` ``os.fwalk``。"

#: ../../library/os.rst:3645
msgid "Added support for :class:`bytes` paths."
msgstr "新增對 :class:`bytes` 路徑的支援。"

#: ../../library/os.rst:3651
msgid ""
"Create an anonymous file and return a file descriptor that refers to it. "
"*flags* must be one of the ``os.MFD_*`` constants available on the system "
"(or a bitwise ORed combination of them).  By default, the new file "
"descriptor is :ref:`non-inheritable <fd_inheritance>`."
msgstr ""

#: ../../library/os.rst:3656
msgid ""
"The name supplied in *name* is used as a filename and will be displayed as "
"the target of the corresponding symbolic link in the directory ``/proc/self/"
"fd/``. The displayed name is always prefixed with ``memfd:`` and serves only "
"for debugging purposes. Names do not affect the behavior of the file "
"descriptor, and as such multiple files can have the same name without any "
"side effects."
msgstr ""

#: ../../library/os.rst:3663
msgid ":ref:`Availability <availability>`: Linux >= 3.17 with glibc >= 2.27."
msgstr ":ref:`適用 <availability>`：Linux 3.17 以上且具有 glibc 2.27 以上。"

#: ../../library/os.rst:3686
msgid "These flags can be passed to :func:`memfd_create`."
msgstr "這些旗標可以傳給 :func:`memfd_create`。"

#: ../../library/os.rst:3688
msgid ":ref:`Availability <availability>`: Linux >= 3.17 with glibc >= 2.27"
msgstr ":ref:`適用 <availability>`：Linux 3.17 以上且具有 glibc 2.27 以上"

#: ../../library/os.rst:3690
msgid "The ``MFD_HUGE*`` flags are only available since Linux 4.14."
msgstr "``MFD_HUGE*`` 旗標僅在 Linux 4.14 以上可用。"

#: ../../library/os.rst:3697
msgid ""
"Create and return an event file descriptor. The file descriptors supports "
"raw :func:`read` and :func:`write` with a buffer size of 8, :func:`~select."
"select`, :func:`~select.poll` and similar. See man page :manpage:"
"`eventfd(2)` for more information.  By default, the new file descriptor is :"
"ref:`non-inheritable <fd_inheritance>`."
msgstr ""

#: ../../library/os.rst:3703
msgid ""
"*initval* is the initial value of the event counter. The initial value must "
"be an 32 bit unsigned integer. Please note that the initial value is limited "
"to a 32 bit unsigned int although the event counter is an unsigned 64 bit "
"integer with a maximum value of 2\\ :sup:`64`\\ -\\ 2."
msgstr ""

#: ../../library/os.rst:3708
msgid ""
"*flags* can be constructed from :const:`EFD_CLOEXEC`, :const:`EFD_NONBLOCK`, "
"and :const:`EFD_SEMAPHORE`."
msgstr ""

#: ../../library/os.rst:3711
msgid ""
"If :const:`EFD_SEMAPHORE` is specified and the event counter is non-zero, :"
"func:`eventfd_read` returns 1 and decrements the counter by one."
msgstr ""

#: ../../library/os.rst:3714
msgid ""
"If :const:`EFD_SEMAPHORE` is not specified and the event counter is non-"
"zero, :func:`eventfd_read` returns the current event counter value and "
"resets the counter to zero."
msgstr ""

#: ../../library/os.rst:3718
msgid ""
"If the event counter is zero and :const:`EFD_NONBLOCK` is not specified, :"
"func:`eventfd_read` blocks."
msgstr ""

#: ../../library/os.rst:3721
msgid ""
":func:`eventfd_write` increments the event counter. Write blocks if the "
"write operation would increment the counter to a value larger than 2\\ :sup:"
"`64`\\ -\\ 2."
msgstr ""

#: ../../library/os.rst:3742
msgid ":ref:`Availability <availability>`: Linux >= 2.6.27 with glibc >= 2.8"
msgstr ":ref:`適用 <availability>`：Linux 2.6.27 以上且具有 glibc 2.8 以上"

#: ../../library/os.rst:3748
msgid ""
"Read value from an :func:`eventfd` file descriptor and return a 64 bit "
"unsigned int. The function does not verify that *fd* is an :func:`eventfd`."
msgstr ""

#: ../../library/os.rst:3751 ../../library/os.rst:3760
#: ../../library/os.rst:3768 ../../library/os.rst:3777
msgid ":ref:`Availability <availability>`: Linux >= 2.6.27"
msgstr ":ref:`適用 <availability>`：Linux 2.6.27 以上"

#: ../../library/os.rst:3757
msgid ""
"Add value to an :func:`eventfd` file descriptor. *value* must be a 64 bit "
"unsigned int. The function does not verify that *fd* is an :func:`eventfd`."
msgstr ""

#: ../../library/os.rst:3766
msgid "Set close-on-exec flag for new :func:`eventfd` file descriptor."
msgstr ""

#: ../../library/os.rst:3774
msgid ""
"Set :const:`O_NONBLOCK` status flag for new :func:`eventfd` file descriptor."
msgstr "設定新的 :func:`eventfd` 檔案描述器的 :const:`O_NONBLOCK` 狀態旗標。"

#: ../../library/os.rst:3783
msgid ""
"Provide semaphore-like semantics for reads from a :func:`eventfd` file "
"descriptor. On read the internal counter is decremented by one."
msgstr ""

#: ../../library/os.rst:3786
msgid ":ref:`Availability <availability>`: Linux >= 2.6.30"
msgstr ":ref:`適用 <availability>`：Linux 2.6.30 以上"

#: ../../library/os.rst:3792
msgid "Linux extended attributes"
msgstr ""

#: ../../library/os.rst:3796
msgid "These functions are all available on Linux only."
msgstr ""

#: ../../library/os.rst:3800
msgid ""
"Return the value of the extended filesystem attribute *attribute* for "
"*path*. *attribute* can be bytes or str (directly or indirectly through the :"
"class:`PathLike` interface). If it is str, it is encoded with the filesystem "
"encoding."
msgstr ""

#: ../../library/os.rst:3808
msgid ""
"Raises an :ref:`auditing event <auditing>` ``os.getxattr`` with arguments "
"``path``, ``attribute``."
msgstr ""
"引發一個附帶引數 ``path``、``attribute`` 的\\ :ref:`稽核事件 <auditing>` "
"``os.getxattr``。"

#: ../../library/os.rst:3810 ../../library/os.rst:3842
#: ../../library/os.rst:3867
msgid "Accepts a :term:`path-like object` for *path* and *attribute*."
msgstr ""

#: ../../library/os.rst:3816
msgid ""
"Return a list of the extended filesystem attributes on *path*.  The "
"attributes in the list are represented as strings decoded with the "
"filesystem encoding.  If *path* is ``None``, :func:`listxattr` will examine "
"the current directory."
msgstr ""

#: ../../library/os.rst:3824
msgid ""
"Raises an :ref:`auditing event <auditing>` ``os.listxattr`` with argument "
"``path``."
msgstr ""
"引發一個附帶引數 ``path`` 的\\ :ref:`稽核事件 <auditing>` ``os.listxattr``。"

#: ../../library/os.rst:3832
msgid ""
"Removes the extended filesystem attribute *attribute* from *path*. "
"*attribute* should be bytes or str (directly or indirectly through the :"
"class:`PathLike` interface). If it is a string, it is encoded with the :term:"
"`filesystem encoding and error handler`."
msgstr ""

#: ../../library/os.rst:3840
msgid ""
"Raises an :ref:`auditing event <auditing>` ``os.removexattr`` with arguments "
"``path``, ``attribute``."
msgstr ""
"引發一個附帶引數 ``path``、``attribute`` 的\\ :ref:`稽核事件 <auditing>` "
"``os.removexattr``。"

#: ../../library/os.rst:3848
msgid ""
"Set the extended filesystem attribute *attribute* on *path* to *value*. "
"*attribute* must be a bytes or str with no embedded NULs (directly or "
"indirectly through the :class:`PathLike` interface). If it is a str, it is "
"encoded with the :term:`filesystem encoding and error handler`.  *flags* may "
"be :data:`XATTR_REPLACE` or :data:`XATTR_CREATE`. If :data:`XATTR_REPLACE` "
"is given and the attribute does not exist, ``ENODATA`` will be raised. If :"
"data:`XATTR_CREATE` is given and the attribute already exists, the attribute "
"will not be created and ``EEXISTS`` will be raised."
msgstr ""

#: ../../library/os.rst:3862
msgid ""
"A bug in Linux kernel versions less than 2.6.39 caused the flags argument to "
"be ignored on some filesystems."
msgstr ""

#: ../../library/os.rst:3865
msgid ""
"Raises an :ref:`auditing event <auditing>` ``os.setxattr`` with arguments "
"``path``, ``attribute``, ``value``, ``flags``."
msgstr ""
"引發一個附帶引數 ``path``、``attribute``、``value``、``flags`` 的\\ :ref:`稽"
"核事件 <auditing>` ``os.setxattr``。"

#: ../../library/os.rst:3873
msgid ""
"The maximum size the value of an extended attribute can be. Currently, this "
"is 64 KiB on Linux."
msgstr ""

#: ../../library/os.rst:3879
msgid ""
"This is a possible value for the flags argument in :func:`setxattr`. It "
"indicates the operation must create an attribute."
msgstr ""

#: ../../library/os.rst:3885
msgid ""
"This is a possible value for the flags argument in :func:`setxattr`. It "
"indicates the operation must replace an existing attribute."
msgstr ""

#: ../../library/os.rst:3892
msgid "Process Management"
msgstr "行程管理"

#: ../../library/os.rst:3894
msgid "These functions may be used to create and manage processes."
msgstr ""

#: ../../library/os.rst:3896
msgid ""
"The various :func:`exec\\* <execl>` functions take a list of arguments for "
"the new program loaded into the process.  In each case, the first of these "
"arguments is passed to the new program as its own name rather than as an "
"argument a user may have typed on a command line.  For the C programmer, "
"this is the ``argv[0]`` passed to a program's :c:func:`main`.  For example, "
"``os.execv('/bin/echo', ['foo', 'bar'])`` will only print ``bar`` on "
"standard output; ``foo`` will seem to be ignored."
msgstr ""

#: ../../library/os.rst:3907
msgid ""
"Generate a :const:`SIGABRT` signal to the current process.  On Unix, the "
"default behavior is to produce a core dump; on Windows, the process "
"immediately returns an exit code of ``3``.  Be aware that calling this "
"function will not call the Python signal handler registered for :const:"
"`SIGABRT` with :func:`signal.signal`."
msgstr ""

#: ../../library/os.rst:3916
msgid "Add a path to the DLL search path."
msgstr ""

#: ../../library/os.rst:3918
msgid ""
"This search path is used when resolving dependencies for imported extension "
"modules (the module itself is resolved through :data:`sys.path`), and also "
"by :mod:`ctypes`."
msgstr ""

#: ../../library/os.rst:3922
msgid ""
"Remove the directory by calling **close()** on the returned object or using "
"it in a :keyword:`with` statement."
msgstr ""

#: ../../library/os.rst:3925
msgid ""
"See the `Microsoft documentation <https://msdn.microsoft."
"com/44228cf2-6306-466c-8f16-f513cd3ba8b5>`_ for more information about how "
"DLLs are loaded."
msgstr ""

#: ../../library/os.rst:3929
msgid ""
"Raises an :ref:`auditing event <auditing>` ``os.add_dll_directory`` with "
"argument ``path``."
msgstr ""
"引發一個附帶引數 ``path`` 的\\ :ref:`稽核事件 <auditing>` ``os."
"add_dll_directory``。"

#: ../../library/os.rst:3933
msgid ""
"Previous versions of CPython would resolve DLLs using the default behavior "
"for the current process. This led to inconsistencies, such as only sometimes "
"searching :envvar:`PATH` or the current working directory, and OS functions "
"such as ``AddDllDirectory`` having no effect."
msgstr ""

#: ../../library/os.rst:3940
msgid ""
"In 3.8, the two primary ways DLLs are loaded now explicitly override the "
"process-wide behavior to ensure consistency. See the :ref:`porting notes "
"<bpo-36085-whatsnew>` for information on updating libraries."
msgstr ""

#: ../../library/os.rst:3955
msgid ""
"These functions all execute a new program, replacing the current process; "
"they do not return.  On Unix, the new executable is loaded into the current "
"process, and will have the same process id as the caller.  Errors will be "
"reported as :exc:`OSError` exceptions."
msgstr ""

#: ../../library/os.rst:3960
msgid ""
"The current process is replaced immediately. Open file objects and "
"descriptors are not flushed, so if there may be data buffered on these open "
"files, you should flush them using :func:`sys.stdout.flush` or :func:`os."
"fsync` before calling an :func:`exec\\* <execl>` function."
msgstr ""

#: ../../library/os.rst:3966
msgid ""
"The \"l\" and \"v\" variants of the :func:`exec\\* <execl>` functions differ "
"in how command-line arguments are passed.  The \"l\" variants are perhaps "
"the easiest to work with if the number of parameters is fixed when the code "
"is written; the individual parameters simply become additional parameters to "
"the :func:`!execl\\*` functions.  The \"v\" variants are good when the "
"number of parameters is variable, with the arguments being passed in a list "
"or tuple as the *args* parameter.  In either case, the arguments to the "
"child process should start with the name of the command being run, but this "
"is not enforced."
msgstr ""

#: ../../library/os.rst:3975
msgid ""
"The variants which include a \"p\" near the end (:func:`execlp`, :func:"
"`execlpe`, :func:`execvp`, and :func:`execvpe`) will use the :envvar:`PATH` "
"environment variable to locate the program *file*.  When the environment is "
"being replaced (using one of the :func:`exec\\*e <execl>` variants, "
"discussed in the next paragraph), the new environment is used as the source "
"of the :envvar:`PATH` variable. The other variants, :func:`execl`, :func:"
"`execle`, :func:`execv`, and :func:`execve`, will not use the :envvar:`PATH` "
"variable to locate the executable; *path* must contain an appropriate "
"absolute or relative path. Relative paths must include at least one slash, "
"even on Windows, as plain names will not be resolved."
msgstr ""

#: ../../library/os.rst:3986
msgid ""
"For :func:`execle`, :func:`execlpe`, :func:`execve`, and :func:`execvpe` "
"(note that these all end in \"e\"), the *env* parameter must be a mapping "
"which is used to define the environment variables for the new process (these "
"are used instead of the current process' environment); the functions :func:"
"`execl`, :func:`execlp`, :func:`execv`, and :func:`execvp` all cause the new "
"process to inherit the environment of the current process."
msgstr ""

#: ../../library/os.rst:3993
msgid ""
"For :func:`execve` on some platforms, *path* may also be specified as an "
"open file descriptor.  This functionality may not be supported on your "
"platform; you can check whether or not it is available using :data:`os."
"supports_fd`. If it is unavailable, using it will raise a :exc:"
"`NotImplementedError`."
msgstr ""

#: ../../library/os.rst:3998
msgid ""
"Raises an :ref:`auditing event <auditing>` ``os.exec`` with arguments "
"``path``, ``args``, ``env``."
msgstr ""
"引發一個附帶引數 ``path``、``args``、``env`` 的\\ :ref:`稽核事件 <auditing>` "
"``os.exec``。"

#: ../../library/os.rst:4002
msgid ""
"Added support for specifying *path* as an open file descriptor for :func:"
"`execve`."
msgstr ""

#: ../../library/os.rst:4011
msgid ""
"Exit the process with status *n*, without calling cleanup handlers, flushing "
"stdio buffers, etc."
msgstr ""

#: ../../library/os.rst:4016
msgid ""
"The standard way to exit is :func:`sys.exit(n) <sys.exit>`.  :func:`!_exit` "
"should normally only be used in the child process after a :func:`fork`."
msgstr ""

#: ../../library/os.rst:4019
msgid ""
"The following exit codes are defined and can be used with :func:`_exit`, "
"although they are not required.  These are typically used for system "
"programs written in Python, such as a mail server's external command "
"delivery program."
msgstr ""

#: ../../library/os.rst:4025
msgid ""
"Some of these may not be available on all Unix platforms, since there is "
"some variation.  These constants are defined where they are defined by the "
"underlying platform."
msgstr ""

#: ../../library/os.rst:4032
msgid ""
"Exit code that means no error occurred. May be taken from the defined value "
"of ``EXIT_SUCCESS`` on some platforms. Generally has a value of zero."
msgstr ""

#: ../../library/os.rst:4040
msgid ""
"Exit code that means the command was used incorrectly, such as when the "
"wrong number of arguments are given."
msgstr ""

#: ../../library/os.rst:4048
msgid "Exit code that means the input data was incorrect."
msgstr ""

#: ../../library/os.rst:4055
msgid "Exit code that means an input file did not exist or was not readable."
msgstr ""

#: ../../library/os.rst:4062
msgid "Exit code that means a specified user did not exist."
msgstr ""

#: ../../library/os.rst:4069
msgid "Exit code that means a specified host did not exist."
msgstr ""

#: ../../library/os.rst:4076
msgid "Exit code that means that a required service is unavailable."
msgstr ""

#: ../../library/os.rst:4083
msgid "Exit code that means an internal software error was detected."
msgstr ""

#: ../../library/os.rst:4090
msgid ""
"Exit code that means an operating system error was detected, such as the "
"inability to fork or create a pipe."
msgstr ""

#: ../../library/os.rst:4098
msgid ""
"Exit code that means some system file did not exist, could not be opened, or "
"had some other kind of error."
msgstr ""

#: ../../library/os.rst:4106
msgid "Exit code that means a user specified output file could not be created."
msgstr ""

#: ../../library/os.rst:4113
msgid ""
"Exit code that means that an error occurred while doing I/O on some file."
msgstr ""

#: ../../library/os.rst:4120
msgid ""
"Exit code that means a temporary failure occurred.  This indicates something "
"that may not really be an error, such as a network connection that couldn't "
"be made during a retryable operation."
msgstr ""

#: ../../library/os.rst:4129
msgid ""
"Exit code that means that a protocol exchange was illegal, invalid, or not "
"understood."
msgstr ""

#: ../../library/os.rst:4137
msgid ""
"Exit code that means that there were insufficient permissions to perform the "
"operation (but not intended for file system problems)."
msgstr ""

#: ../../library/os.rst:4145
msgid "Exit code that means that some kind of configuration error occurred."
msgstr ""

#: ../../library/os.rst:4152
msgid "Exit code that means something like \"an entry was not found\"."
msgstr ""

#: ../../library/os.rst:4159
msgid ""
"Fork a child process.  Return ``0`` in the child and the child's process id "
"in the parent.  If an error occurs :exc:`OSError` is raised."
msgstr ""

#: ../../library/os.rst:4162
msgid ""
"Note that some platforms including FreeBSD <= 6.3 and Cygwin have known "
"issues when using ``fork()`` from a thread."
msgstr ""

#: ../../library/os.rst:4165
msgid ""
"Raises an :ref:`auditing event <auditing>` ``os.fork`` with no arguments."
msgstr "引發一個不附帶引數的\\ :ref:`稽核事件 <auditing>` ``os.fork``。"

#: ../../library/os.rst:4169
msgid ""
"If you use TLS sockets in an application calling ``fork()``, see the warning "
"in the :mod:`ssl` documentation."
msgstr ""

#: ../../library/os.rst:4174 ../../library/os.rst:4218
msgid ""
"On macOS the use of this function is unsafe when mixed with using higher-"
"level system APIs, and that includes using :mod:`urllib.request`."
msgstr ""

#: ../../library/os.rst:4177
msgid ""
"Calling ``fork()`` in a subinterpreter is no longer supported (:exc:"
"`RuntimeError` is raised)."
msgstr ""

#: ../../library/os.rst:4181
msgid ""
"If Python is able to detect that your process has multiple threads, :func:"
"`os.fork` now raises a :exc:`DeprecationWarning`."
msgstr ""

#: ../../library/os.rst:4185
msgid ""
"We chose to surface this as a warning, when detectable, to better inform "
"developers of a design problem that the POSIX platform specifically notes as "
"not supported. Even in code that *appears* to work, it has never been safe "
"to mix threading with :func:`os.fork` on POSIX platforms. The CPython "
"runtime itself has always made API calls that are not safe for use in the "
"child process when threads existed in the parent (such as ``malloc`` and "
"``free``)."
msgstr ""

#: ../../library/os.rst:4194
msgid ""
"Users of macOS or users of libc or malloc implementations other than those "
"typically found in glibc to date are among those already more likely to "
"experience deadlocks running such code."
msgstr ""

#: ../../library/os.rst:4198
msgid ""
"See `this discussion on fork being incompatible with threads <https://"
"discuss.python.org/t/33555>`_ for technical details of why we're surfacing "
"this longstanding platform compatibility problem to developers."
msgstr ""

#: ../../library/os.rst:4203 ../../library/os.rst:4450
msgid ":ref:`Availability <availability>`: POSIX, not Emscripten, not WASI."
msgstr ":ref:`適用 <availability>`：POSIX、非 Emscripten、非 WASI。"

#: ../../library/os.rst:4208
msgid ""
"Fork a child process, using a new pseudo-terminal as the child's controlling "
"terminal. Return a pair of ``(pid, fd)``, where *pid* is ``0`` in the child, "
"the new child's process id in the parent, and *fd* is the file descriptor of "
"the master end of the pseudo-terminal.  For a more portable approach, use "
"the :mod:`pty` module.  If an error occurs :exc:`OSError` is raised."
msgstr ""

#: ../../library/os.rst:4214
msgid ""
"Raises an :ref:`auditing event <auditing>` ``os.forkpty`` with no arguments."
msgstr "引發一個不附帶引數的\\ :ref:`稽核事件 <auditing>` ``os.forkpty``。"

#: ../../library/os.rst:4221
msgid ""
"Calling ``forkpty()`` in a subinterpreter is no longer supported (:exc:"
"`RuntimeError` is raised)."
msgstr ""

#: ../../library/os.rst:4225
msgid ""
"If Python is able to detect that your process has multiple threads, this now "
"raises a :exc:`DeprecationWarning`. See the longer explanation on :func:`os."
"fork`."
msgstr ""

#: ../../library/os.rst:4239
msgid ""
"Send signal *sig* to the process *pid*.  Constants for the specific signals "
"available on the host platform are defined in the :mod:`signal` module."
msgstr ""

#: ../../library/os.rst:4242
msgid ""
"Windows: The :const:`signal.CTRL_C_EVENT` and :const:`signal."
"CTRL_BREAK_EVENT` signals are special signals which can only be sent to "
"console processes which share a common console window, e.g., some "
"subprocesses. Any other value for *sig* will cause the process to be "
"unconditionally killed by the TerminateProcess API, and the exit code will "
"be set to *sig*. The Windows version of :func:`kill` additionally takes "
"process handles to be killed."
msgstr ""

#: ../../library/os.rst:4250
msgid "See also :func:`signal.pthread_kill`."
msgstr "另請參閱 :func:`signal.pthread_kill`\\ 。"

#: ../../library/os.rst:4252
msgid ""
"Raises an :ref:`auditing event <auditing>` ``os.kill`` with arguments "
"``pid``, ``sig``."
msgstr ""
"引發一個附帶引數 ``pid``、``sig`` 的\\ :ref:`稽核事件 <auditing>` ``os."
"kill``。"

#: ../../library/os.rst:4266
msgid "Send the signal *sig* to the process group *pgid*."
msgstr ""

#: ../../library/os.rst:4268
msgid ""
"Raises an :ref:`auditing event <auditing>` ``os.killpg`` with arguments "
"``pgid``, ``sig``."
msgstr ""
"引發一個附帶引數 ``pgid``、``sig`` 的\\ :ref:`稽核事件 <auditing>` ``os."
"killpg``。"

#: ../../library/os.rst:4275
msgid ""
"Add *increment* to the process's \"niceness\".  Return the new niceness."
msgstr ""

#: ../../library/os.rst:4282
msgid ""
"Return a file descriptor referring to the process *pid* with *flags* set. "
"This descriptor can be used to perform process management without races and "
"signals."
msgstr ""

#: ../../library/os.rst:4286
msgid "See the :manpage:`pidfd_open(2)` man page for more details."
msgstr "更多細節請見 :manpage:`pidfd_open(2)` 手冊頁。"

#: ../../library/os.rst:4288
msgid ":ref:`Availability <availability>`: Linux >= 5.3"
msgstr ":ref:`適用 <availability>`：Linux 5.3 以上"

#: ../../library/os.rst:4293
msgid ""
"This flag indicates that the file descriptor will be non-blocking. If the "
"process referred to by the file descriptor has not yet terminated, then an "
"attempt to wait on the file descriptor using :manpage:`waitid(2)` will "
"immediately return the error :const:`~errno.EAGAIN` rather than blocking."
msgstr ""

#: ../../library/os.rst:4298
msgid ":ref:`Availability <availability>`: Linux >= 5.10"
msgstr ":ref:`適用 <availability>`：Linux 5.10 以上"

#: ../../library/os.rst:4304
msgid ""
"Lock program segments into memory.  The value of *op* (defined in ``<sys/"
"lock.h>``) determines which segments are locked."
msgstr ""

#: ../../library/os.rst:4312
msgid ""
"Open a pipe to or from command *cmd*. The return value is an open file "
"object connected to the pipe, which can be read or written depending on "
"whether *mode* is ``'r'`` (default) or ``'w'``. The *buffering* argument "
"have the same meaning as the corresponding argument to the built-in :func:"
"`open` function. The returned file object reads or writes text strings "
"rather than bytes."
msgstr ""

#: ../../library/os.rst:4320
msgid ""
"The ``close`` method returns :const:`None` if the subprocess exited "
"successfully, or the subprocess's return code if there was an error. On "
"POSIX systems, if the return code is positive it represents the return value "
"of the process left-shifted by one byte.  If the return code is negative, "
"the process was terminated by the signal given by the negated value of the "
"return code.  (For example, the return value might be ``- signal.SIGKILL`` "
"if the subprocess was killed.)  On Windows systems, the return value "
"contains the signed integer return code from the child process."
msgstr ""

#: ../../library/os.rst:4330
msgid ""
"On Unix, :func:`waitstatus_to_exitcode` can be used to convert the ``close`` "
"method result (exit status) into an exit code if it is not ``None``. On "
"Windows, the ``close`` method result is directly the exit code (or ``None``)."
msgstr ""

#: ../../library/os.rst:4335
msgid ""
"This is implemented using :class:`subprocess.Popen`; see that class's "
"documentation for more powerful ways to manage and communicate with "
"subprocesses."
msgstr ""

#: ../../library/os.rst:4339
msgid ":ref:`Availability <availability>`: not Emscripten, not WASI."
msgstr ":ref:`適用 <availability>`：非 Emscripten、非 WASI。"

#: ../../library/os.rst:4342
msgid ""
"The :ref:`Python UTF-8 Mode <utf8-mode>` affects encodings used for *cmd* "
"and pipe contents."
msgstr ""

#: ../../library/os.rst:4345
msgid ""
":func:`popen` is a simple wrapper around :class:`subprocess.Popen`. Use :"
"class:`subprocess.Popen` or :func:`subprocess.run` to control options like "
"encodings."
msgstr ""

#: ../../library/os.rst:4354
msgid "Wraps the :c:func:`!posix_spawn` C library API for use from Python."
msgstr ""

#: ../../library/os.rst:4356
msgid ""
"Most users should use :func:`subprocess.run` instead of :func:`posix_spawn`."
msgstr ""

#: ../../library/os.rst:4358
msgid ""
"The positional-only arguments *path*, *args*, and *env* are similar to :func:"
"`execve`."
msgstr ""

#: ../../library/os.rst:4361
msgid ""
"The *path* parameter is the path to the executable file.  The *path* should "
"contain a directory.  Use :func:`posix_spawnp` to pass an executable file "
"without directory."
msgstr ""

#: ../../library/os.rst:4365
msgid ""
"The *file_actions* argument may be a sequence of tuples describing actions "
"to take on specific file descriptors in the child process between the C "
"library implementation's :c:func:`fork` and :c:func:`exec` steps. The first "
"item in each tuple must be one of the three type indicator listed below "
"describing the remaining tuple elements:"
msgstr ""

#: ../../library/os.rst:4373
msgid "(``os.POSIX_SPAWN_OPEN``, *fd*, *path*, *flags*, *mode*)"
msgstr "(``os.POSIX_SPAWN_OPEN``, *fd*, *path*, *flags*, *mode*)"

#: ../../library/os.rst:4375
msgid "Performs ``os.dup2(os.open(path, flags, mode), fd)``."
msgstr ""

#: ../../library/os.rst:4379
msgid "(``os.POSIX_SPAWN_CLOSE``, *fd*)"
msgstr "(``os.POSIX_SPAWN_CLOSE``, *fd*)"

#: ../../library/os.rst:4381
msgid "Performs ``os.close(fd)``."
msgstr ""

#: ../../library/os.rst:4385
msgid "(``os.POSIX_SPAWN_DUP2``, *fd*, *new_fd*)"
msgstr "(``os.POSIX_SPAWN_DUP2``, *fd*, *new_fd*)"

#: ../../library/os.rst:4387
msgid "Performs ``os.dup2(fd, new_fd)``."
msgstr ""

#: ../../library/os.rst:4389
msgid ""
"These tuples correspond to the C library :c:func:`!"
"posix_spawn_file_actions_addopen`, :c:func:`!"
"posix_spawn_file_actions_addclose`, and :c:func:`!"
"posix_spawn_file_actions_adddup2` API calls used to prepare for the :c:func:"
"`!posix_spawn` call itself."
msgstr ""

#: ../../library/os.rst:4395
msgid ""
"The *setpgroup* argument will set the process group of the child to the "
"value specified. If the value specified is 0, the child's process group ID "
"will be made the same as its process ID. If the value of *setpgroup* is not "
"set, the child will inherit the parent's process group ID. This argument "
"corresponds to the C library :c:macro:`!POSIX_SPAWN_SETPGROUP` flag."
msgstr ""

#: ../../library/os.rst:4401
msgid ""
"If the *resetids* argument is ``True`` it will reset the effective UID and "
"GID of the child to the real UID and GID of the parent process. If the "
"argument is ``False``, then the child retains the effective UID and GID of "
"the parent. In either case, if the set-user-ID and set-group-ID permission "
"bits are enabled on the executable file, their effect will override the "
"setting of the effective UID and GID. This argument corresponds to the C "
"library :c:macro:`!POSIX_SPAWN_RESETIDS` flag."
msgstr ""

#: ../../library/os.rst:4409
msgid ""
"If the *setsid* argument is ``True``, it will create a new session ID for "
"``posix_spawn``. *setsid* requires :c:macro:`!POSIX_SPAWN_SETSID` or :c:"
"macro:`!POSIX_SPAWN_SETSID_NP` flag. Otherwise, :exc:`NotImplementedError` "
"is raised."
msgstr ""

#: ../../library/os.rst:4414
msgid ""
"The *setsigmask* argument will set the signal mask to the signal set "
"specified. If the parameter is not used, then the child inherits the "
"parent's signal mask. This argument corresponds to the C library :c:macro:`!"
"POSIX_SPAWN_SETSIGMASK` flag."
msgstr ""

#: ../../library/os.rst:4419
msgid ""
"The *sigdef* argument will reset the disposition of all signals in the set "
"specified. This argument corresponds to the C library :c:macro:`!"
"POSIX_SPAWN_SETSIGDEF` flag."
msgstr ""

#: ../../library/os.rst:4423
msgid ""
"The *scheduler* argument must be a tuple containing the (optional) scheduler "
"policy and an instance of :class:`sched_param` with the scheduler "
"parameters. A value of ``None`` in the place of the scheduler policy "
"indicates that is not being provided. This argument is a combination of the "
"C library :c:macro:`!POSIX_SPAWN_SETSCHEDPARAM` and :c:macro:`!"
"POSIX_SPAWN_SETSCHEDULER` flags."
msgstr ""

#: ../../library/os.rst:4430 ../../library/os.rst:4446
msgid ""
"Raises an :ref:`auditing event <auditing>` ``os.posix_spawn`` with arguments "
"``path``, ``argv``, ``env``."
msgstr ""
"引發一個附帶引數 ``path``、``argv``、``env`` 的\\ :ref:`稽核事件 <auditing>` "
"``os.posix_spawn``。"

#: ../../library/os.rst:4440
msgid "Wraps the :c:func:`!posix_spawnp` C library API for use from Python."
msgstr ""

#: ../../library/os.rst:4442
msgid ""
"Similar to :func:`posix_spawn` except that the system searches for the "
"*executable* file in the list of directories specified by the :envvar:`PATH` "
"environment variable (in the same way as for ``execvp(3)``)."
msgstr ""

#: ../../library/os.rst:4452
msgid "See :func:`posix_spawn` documentation."
msgstr "見 :func:`posix_spawn` 文件。"

#: ../../library/os.rst:4458
msgid ""
"Register callables to be executed when a new child process is forked using :"
"func:`os.fork` or similar process cloning APIs. The parameters are optional "
"and keyword-only. Each specifies a different call point."
msgstr ""

#: ../../library/os.rst:4463
msgid "*before* is a function called before forking a child process."
msgstr ""

#: ../../library/os.rst:4464
msgid ""
"*after_in_parent* is a function called from the parent process after forking "
"a child process."
msgstr ""

#: ../../library/os.rst:4466
msgid "*after_in_child* is a function called from the child process."
msgstr ""

#: ../../library/os.rst:4468
msgid ""
"These calls are only made if control is expected to return to the Python "
"interpreter.  A typical :mod:`subprocess` launch will not trigger them as "
"the child is not going to re-enter the interpreter."
msgstr ""

#: ../../library/os.rst:4472
msgid ""
"Functions registered for execution before forking are called in reverse "
"registration order.  Functions registered for execution after forking "
"(either in the parent or in the child) are called in registration order."
msgstr ""

#: ../../library/os.rst:4477
msgid ""
"Note that :c:func:`fork` calls made by third-party C code may not call those "
"functions, unless it explicitly calls :c:func:`PyOS_BeforeFork`, :c:func:"
"`PyOS_AfterFork_Parent` and :c:func:`PyOS_AfterFork_Child`."
msgstr ""

#: ../../library/os.rst:4481
msgid "There is no way to unregister a function."
msgstr ""

#: ../../library/os.rst:4497
msgid "Execute the program *path* in a new process."
msgstr ""

#: ../../library/os.rst:4499
msgid ""
"(Note that the :mod:`subprocess` module provides more powerful facilities "
"for spawning new processes and retrieving their results; using that module "
"is preferable to using these functions.  Check especially the :ref:"
"`subprocess-replacements` section.)"
msgstr ""

#: ../../library/os.rst:4504
msgid ""
"If *mode* is :const:`P_NOWAIT`, this function returns the process id of the "
"new process; if *mode* is :const:`P_WAIT`, returns the process's exit code "
"if it exits normally, or ``-signal``, where *signal* is the signal that "
"killed the process.  On Windows, the process id will actually be the process "
"handle, so can be used with the :func:`waitpid` function."
msgstr ""

#: ../../library/os.rst:4510
msgid ""
"Note on VxWorks, this function doesn't return ``-signal`` when the new "
"process is killed. Instead it raises OSError exception."
msgstr ""

#: ../../library/os.rst:4513
msgid ""
"The \"l\" and \"v\" variants of the :func:`spawn\\* <spawnl>` functions "
"differ in how command-line arguments are passed.  The \"l\" variants are "
"perhaps the easiest to work with if the number of parameters is fixed when "
"the code is written; the individual parameters simply become additional "
"parameters to the :func:`!spawnl\\*` functions.  The \"v\" variants are good "
"when the number of parameters is variable, with the arguments being passed "
"in a list or tuple as the *args* parameter.  In either case, the arguments "
"to the child process must start with the name of the command being run."
msgstr ""

#: ../../library/os.rst:4522
msgid ""
"The variants which include a second \"p\" near the end (:func:`spawnlp`, :"
"func:`spawnlpe`, :func:`spawnvp`, and :func:`spawnvpe`) will use the :envvar:"
"`PATH` environment variable to locate the program *file*.  When the "
"environment is being replaced (using one of the :func:`spawn\\*e <spawnl>` "
"variants, discussed in the next paragraph), the new environment is used as "
"the source of the :envvar:`PATH` variable.  The other variants, :func:"
"`spawnl`, :func:`spawnle`, :func:`spawnv`, and :func:`spawnve`, will not use "
"the :envvar:`PATH` variable to locate the executable; *path* must contain an "
"appropriate absolute or relative path."
msgstr ""

#: ../../library/os.rst:4532
msgid ""
"For :func:`spawnle`, :func:`spawnlpe`, :func:`spawnve`, and :func:`spawnvpe` "
"(note that these all end in \"e\"), the *env* parameter must be a mapping "
"which is used to define the environment variables for the new process (they "
"are used instead of the current process' environment); the functions :func:"
"`spawnl`, :func:`spawnlp`, :func:`spawnv`, and :func:`spawnvp` all cause the "
"new process to inherit the environment of the current process.  Note that "
"keys and values in the *env* dictionary must be strings; invalid keys or "
"values will cause the function to fail, with a return value of ``127``."
msgstr ""

#: ../../library/os.rst:4541
msgid ""
"As an example, the following calls to :func:`spawnlp` and :func:`spawnvpe` "
"are equivalent::"
msgstr ""

#: ../../library/os.rst:4550
msgid ""
"Raises an :ref:`auditing event <auditing>` ``os.spawn`` with arguments "
"``mode``, ``path``, ``args``, ``env``."
msgstr ""
"引發一個附帶引數 ``mode``、``path``、``args``、``env`` 的\\ :ref:`稽核事件 "
"<auditing>` ``os.spawn``。"

#: ../../library/os.rst:4554
msgid ""
":func:`spawnlp`, :func:`spawnlpe`, :func:`spawnvp` and :func:`spawnvpe` are "
"not available on Windows.  :func:`spawnle` and :func:`spawnve` are not "
"thread-safe on Windows; we advise you to use the :mod:`subprocess` module "
"instead."
msgstr ""

#: ../../library/os.rst:4566
msgid ""
"Possible values for the *mode* parameter to the :func:`spawn\\* <spawnl>` "
"family of functions.  If either of these values is given, the :func:"
"`spawn\\* <spawnl>` functions will return as soon as the new process has "
"been created, with the process id as the return value."
msgstr ""

#: ../../library/os.rst:4576
msgid ""
"Possible value for the *mode* parameter to the :func:`spawn\\* <spawnl>` "
"family of functions.  If this is given as *mode*, the :func:`spawn\\* "
"<spawnl>` functions will not return until the new process has run to "
"completion and will return the exit code of the process the run is "
"successful, or ``-signal`` if a signal kills the process."
msgstr ""

#: ../../library/os.rst:4588
msgid ""
"Possible values for the *mode* parameter to the :func:`spawn\\* <spawnl>` "
"family of functions.  These are less portable than those listed above. :"
"const:`P_DETACH` is similar to :const:`P_NOWAIT`, but the new process is "
"detached from the console of the calling process. If :const:`P_OVERLAY` is "
"used, the current process will be replaced; the :func:`spawn\\* <spawnl>` "
"function will not return."
msgstr ""

#: ../../library/os.rst:4599
msgid "Start a file with its associated application."
msgstr ""

#: ../../library/os.rst:4601
msgid ""
"When *operation* is not specified, this acts like double-clicking the file "
"in Windows Explorer, or giving the file name as an argument to the :program:"
"`start` command from the interactive command shell: the file is opened with "
"whatever application (if any) its extension is associated."
msgstr ""

#: ../../library/os.rst:4606
msgid ""
"When another *operation* is given, it must be a \"command verb\" that "
"specifies what should be done with the file. Common verbs documented by "
"Microsoft are ``'open'``, ``'print'`` and  ``'edit'`` (to be used on files) "
"as well as ``'explore'`` and ``'find'`` (to be used on directories)."
msgstr ""

#: ../../library/os.rst:4611
msgid ""
"When launching an application, specify *arguments* to be passed as a single "
"string. This argument may have no effect when using this function to launch "
"a document."
msgstr ""

#: ../../library/os.rst:4615
msgid ""
"The default working directory is inherited, but may be overridden by the "
"*cwd* argument. This should be an absolute path. A relative *path* will be "
"resolved against this argument."
msgstr ""

#: ../../library/os.rst:4619
msgid ""
"Use *show_cmd* to override the default window style. Whether this has any "
"effect will depend on the application being launched. Values are integers as "
"supported by the Win32 :c:func:`!ShellExecute` function."
msgstr ""

#: ../../library/os.rst:4623
msgid ""
":func:`startfile` returns as soon as the associated application is launched. "
"There is no option to wait for the application to close, and no way to "
"retrieve the application's exit status.  The *path* parameter is relative to "
"the current directory or *cwd*.  If you want to use an absolute path, make "
"sure the first character is not a slash (``'/'``)  Use :mod:`pathlib` or "
"the :func:`os.path.normpath` function to ensure that paths are properly "
"encoded for Win32."
msgstr ""

#: ../../library/os.rst:4631
msgid ""
"To reduce interpreter startup overhead, the Win32 :c:func:`!ShellExecute` "
"function is not resolved until this function is first called.  If the "
"function cannot be resolved, :exc:`NotImplementedError` will be raised."
msgstr ""

#: ../../library/os.rst:4635
msgid ""
"Raises an :ref:`auditing event <auditing>` ``os.startfile`` with arguments "
"``path``, ``operation``."
msgstr ""
"引發一個附帶引數 ``path``、``operation`` 的\\ :ref:`稽核事件 <auditing>` "
"``os.startfile``。"

#: ../../library/os.rst:4637
msgid ""
"Raises an :ref:`auditing event <auditing>` ``os.startfile/2`` with arguments "
"``path``, ``operation``, ``arguments``, ``cwd``, ``show_cmd``."
msgstr ""
"引發一個附帶引數 ``path``、``operation``、``arguments``、``cwd``、"
"``show_cmd`` 的\\ :ref:`稽核事件 <auditing>` ``os.startfile/2``。"

#: ../../library/os.rst:4641
msgid ""
"Added the *arguments*, *cwd* and *show_cmd* arguments, and the ``os."
"startfile/2`` audit event."
msgstr ""

#: ../../library/os.rst:4648
msgid ""
"Execute the command (a string) in a subshell.  This is implemented by "
"calling the Standard C function :c:func:`system`, and has the same "
"limitations. Changes to :data:`sys.stdin`, etc. are not reflected in the "
"environment of the executed command. If *command* generates any output, it "
"will be sent to the interpreter standard output stream. The C standard does "
"not specify the meaning of the return value of the C function, so the return "
"value of the Python function is system-dependent."
msgstr ""

#: ../../library/os.rst:4656
msgid ""
"On Unix, the return value is the exit status of the process encoded in the "
"format specified for :func:`wait`."
msgstr ""

#: ../../library/os.rst:4659
msgid ""
"On Windows, the return value is that returned by the system shell after "
"running *command*.  The shell is given by the Windows environment variable :"
"envvar:`COMSPEC`: it is usually :program:`cmd.exe`, which returns the exit "
"status of the command run; on systems using a non-native shell, consult your "
"shell documentation."
msgstr ""

#: ../../library/os.rst:4665
msgid ""
"The :mod:`subprocess` module provides more powerful facilities for spawning "
"new processes and retrieving their results; using that module is preferable "
"to using this function.  See the :ref:`subprocess-replacements` section in "
"the :mod:`subprocess` documentation for some helpful recipes."
msgstr ""

#: ../../library/os.rst:4670
msgid ""
"On Unix, :func:`waitstatus_to_exitcode` can be used to convert the result "
"(exit status) into an exit code. On Windows, the result is directly the exit "
"code."
msgstr ""

#: ../../library/os.rst:4674
msgid ""
"Raises an :ref:`auditing event <auditing>` ``os.system`` with argument "
"``command``."
msgstr ""
"引發一個附帶引數 ``command`` 的\\ :ref:`稽核事件 <auditing>` ``os.system``。"

#: ../../library/os.rst:4681
msgid ""
"Returns the current global process times. The return value is an object with "
"five attributes:"
msgstr ""

#: ../../library/os.rst:4684
msgid ":attr:`!user` - user time"
msgstr ":attr:`!user` - 使用者時間"

#: ../../library/os.rst:4685
msgid ":attr:`!system` - system time"
msgstr ":attr:`!system` - 系統時間"

#: ../../library/os.rst:4686
msgid ":attr:`!children_user` - user time of all child processes"
msgstr ":attr:`!children_user` - 所有子行程的使用者時間"

#: ../../library/os.rst:4687
msgid ":attr:`!children_system` - system time of all child processes"
msgstr ":attr:`!children_system` - 所有子行程的系統時間"

#: ../../library/os.rst:4688
msgid ":attr:`!elapsed` - elapsed real time since a fixed point in the past"
msgstr ""

#: ../../library/os.rst:4690
msgid ""
"For backwards compatibility, this object also behaves like a five-tuple "
"containing :attr:`!user`, :attr:`!system`, :attr:`!children_user`, :attr:`!"
"children_system`, and :attr:`!elapsed` in that order."
msgstr ""

#: ../../library/os.rst:4694
msgid ""
"See the Unix manual page :manpage:`times(2)` and `times(3) <https://man."
"freebsd.org/cgi/man.cgi?time(3)>`_ manual page on Unix or `the "
"GetProcessTimes MSDN <https://docs.microsoft.com/windows/win32/api/"
"processthreadsapi/nf-processthreadsapi-getprocesstimes>`_ on Windows. On "
"Windows, only :attr:`!user` and :attr:`!system` are known; the other "
"attributes are zero."
msgstr ""

#: ../../library/os.rst:4708
msgid ""
"Wait for completion of a child process, and return a tuple containing its "
"pid and exit status indication: a 16-bit number, whose low byte is the "
"signal number that killed the process, and whose high byte is the exit "
"status (if the signal number is zero); the high bit of the low byte is set "
"if a core file was produced."
msgstr ""

#: ../../library/os.rst:4714
msgid ""
"If there are no children that could be waited for, :exc:`ChildProcessError` "
"is raised."
msgstr ""

#: ../../library/os.rst:4717 ../../library/os.rst:4792
msgid ""
":func:`waitstatus_to_exitcode` can be used to convert the exit status into "
"an exit code."
msgstr ""

#: ../../library/os.rst:4724
msgid ""
"The other :func:`!wait*` functions documented below can be used to wait for "
"the completion of a specific child process and have more options. :func:"
"`waitpid` is the only one also available on Windows."
msgstr ""

#: ../../library/os.rst:4731
msgid "Wait for the completion of a child process."
msgstr ""

#: ../../library/os.rst:4733
msgid ""
"*idtype* can be :data:`P_PID`, :data:`P_PGID`, :data:`P_ALL`, or (on Linux) :"
"data:`P_PIDFD`. The interpretation of *id* depends on it; see their "
"individual descriptions."
msgstr ""

#: ../../library/os.rst:4736
msgid ""
"*options* is an OR combination of flags.  At least one of :data:`WEXITED`, :"
"data:`WSTOPPED` or :data:`WCONTINUED` is required; :data:`WNOHANG` and :data:"
"`WNOWAIT` are additional optional flags."
msgstr ""

#: ../../library/os.rst:4740
msgid ""
"The return value is an object representing the data contained in the :c:type:"
"`siginfo_t` structure with the following attributes:"
msgstr ""

#: ../../library/os.rst:4743
msgid ":attr:`!si_pid` (process ID)"
msgstr ""

#: ../../library/os.rst:4744
msgid ":attr:`!si_uid` (real user ID of the child)"
msgstr ""

#: ../../library/os.rst:4745
msgid ":attr:`!si_signo` (always :const:`~signal.SIGCHLD`)"
msgstr ""

#: ../../library/os.rst:4746
msgid ""
":attr:`!si_status` (the exit status or signal number, depending on :attr:`!"
"si_code`)"
msgstr ""

#: ../../library/os.rst:4747
msgid ":attr:`!si_code` (see :data:`CLD_EXITED` for possible values)"
msgstr ""

#: ../../library/os.rst:4749
msgid ""
"If :data:`WNOHANG` is specified and there are no matching children in the "
"requested state, ``None`` is returned. Otherwise, if there are no matching "
"children that could be waited for, :exc:`ChildProcessError` is raised."
msgstr ""

#: ../../library/os.rst:4757
msgid "This function is not available on macOS."
msgstr ""

#: ../../library/os.rst:4764
msgid "The details of this function differ on Unix and Windows."
msgstr ""

#: ../../library/os.rst:4766
msgid ""
"On Unix: Wait for completion of a child process given by process id *pid*, "
"and return a tuple containing its process id and exit status indication "
"(encoded as for :func:`wait`).  The semantics of the call are affected by "
"the value of the integer *options*, which should be ``0`` for normal "
"operation."
msgstr ""

#: ../../library/os.rst:4771
msgid ""
"If *pid* is greater than ``0``, :func:`waitpid` requests status information "
"for that specific process.  If *pid* is ``0``, the request is for the status "
"of any child in the process group of the current process.  If *pid* is "
"``-1``, the request pertains to any child of the current process.  If *pid* "
"is less than ``-1``, status is requested for any process in the process "
"group ``-pid`` (the absolute value of *pid*)."
msgstr ""

#: ../../library/os.rst:4778
msgid ""
"*options* is an OR combination of flags.  If it contains :data:`WNOHANG` and "
"there are no matching children in the requested state, ``(0, 0)`` is "
"returned.  Otherwise, if there are no matching children that could be waited "
"for, :exc:`ChildProcessError` is raised.  Other options that can be used "
"are :data:`WUNTRACED` and :data:`WCONTINUED`."
msgstr ""

#: ../../library/os.rst:4784
msgid ""
"On Windows: Wait for completion of a process given by process handle *pid*, "
"and return a tuple containing *pid*, and its exit status shifted left by 8 "
"bits (shifting makes cross-platform use of the function easier). A *pid* "
"less than or equal to ``0`` has no special meaning on Windows, and raises an "
"exception. The value of integer *options* has no effect. *pid* can refer to "
"any process whose id is known, not necessarily a child process. The :func:"
"`spawn\\* <spawnl>` functions called with :const:`P_NOWAIT` return suitable "
"process handles."
msgstr ""

#: ../../library/os.rst:4805
msgid ""
"Similar to :func:`waitpid`, except no process id argument is given and a 3-"
"element tuple containing the child's process id, exit status indication, and "
"resource usage information is returned.  Refer to :func:`resource.getrusage` "
"for details on resource usage information.  The *options* argument is the "
"same as that provided to :func:`waitpid` and :func:`wait4`."
msgstr ""

#: ../../library/os.rst:4812 ../../library/os.rst:4826
msgid ""
":func:`waitstatus_to_exitcode` can be used to convert the exit status into "
"an exitcode."
msgstr ""

#: ../../library/os.rst:4820
msgid ""
"Similar to :func:`waitpid`, except a 3-element tuple, containing the child's "
"process id, exit status indication, and resource usage information is "
"returned.  Refer to :func:`resource.getrusage` for details on resource usage "
"information.  The arguments to :func:`wait4` are the same as those provided "
"to :func:`waitpid`."
msgstr ""

#: ../../library/os.rst:4837
msgid ""
"These are the possible values for *idtype* in :func:`waitid`. They affect "
"how *id* is interpreted:"
msgstr ""

#: ../../library/os.rst:4840
msgid ":data:`!P_PID` - wait for the child whose PID is *id*."
msgstr ""

#: ../../library/os.rst:4841
msgid ":data:`!P_PGID` - wait for any child whose progress group ID is *id*."
msgstr ""

#: ../../library/os.rst:4842
msgid ":data:`!P_ALL` - wait for any child; *id* is ignored."
msgstr ""

#: ../../library/os.rst:4843
msgid ""
":data:`!P_PIDFD` - wait for the child identified by the file descriptor *id* "
"(a process file descriptor created with :func:`pidfd_open`)."
msgstr ""

#: ../../library/os.rst:4848
msgid ":data:`!P_PIDFD` is only available on Linux >= 5.4."
msgstr ""

#: ../../library/os.rst:4851
msgid "The :data:`!P_PIDFD` constant."
msgstr ""

#: ../../library/os.rst:4857
msgid ""
"This *options* flag for :func:`waitpid`, :func:`wait3`, :func:`wait4`, and :"
"func:`waitid` causes child processes to be reported if they have been "
"continued from a job control stop since they were last reported."
msgstr ""

#: ../../library/os.rst:4866
msgid ""
"This *options* flag for :func:`waitid` causes child processes that have "
"terminated to be reported."
msgstr ""

#: ../../library/os.rst:4869
msgid ""
"The other ``wait*`` functions always report children that have terminated, "
"so this option is not available for them."
msgstr ""

#: ../../library/os.rst:4879
msgid ""
"This *options* flag for :func:`waitid` causes child processes that have been "
"stopped by the delivery of a signal to be reported."
msgstr ""

#: ../../library/os.rst:4882 ../../library/os.rst:4914
msgid "This option is not available for the other ``wait*`` functions."
msgstr ""

#: ../../library/os.rst:4891
msgid ""
"This *options* flag for :func:`waitpid`, :func:`wait3`, and :func:`wait4` "
"causes child processes to also be reported if they have been stopped but "
"their current state has not been reported since they were stopped."
msgstr ""

#: ../../library/os.rst:4895
msgid "This option is not available for :func:`waitid`."
msgstr ""

#: ../../library/os.rst:4902
msgid ""
"This *options* flag causes :func:`waitpid`, :func:`wait3`, :func:`wait4`, "
"and :func:`waitid` to return right away if no child process status is "
"available immediately."
msgstr ""

#: ../../library/os.rst:4911
msgid ""
"This *options* flag causes :func:`waitid` to leave the child in a waitable "
"state, so that a later :func:`!wait*` call can be used to retrieve the child "
"status information again."
msgstr ""

#: ../../library/os.rst:4926
msgid ""
"These are the possible values for :attr:`!si_code` in the result returned "
"by :func:`waitid`."
msgstr ""

#: ../../library/os.rst:4933
msgid "Added :data:`CLD_KILLED` and :data:`CLD_STOPPED` values."
msgstr ""

#: ../../library/os.rst:4939
msgid "Convert a wait status to an exit code."
msgstr ""

#: ../../library/os.rst:4941
msgid "On Unix:"
msgstr ""

#: ../../library/os.rst:4943
msgid ""
"If the process exited normally (if ``WIFEXITED(status)`` is true), return "
"the process exit status (return ``WEXITSTATUS(status)``): result greater "
"than or equal to 0."
msgstr ""

#: ../../library/os.rst:4946
msgid ""
"If the process was terminated by a signal (if ``WIFSIGNALED(status)`` is "
"true), return ``-signum`` where *signum* is the number of the signal that "
"caused the process to terminate (return ``-WTERMSIG(status)``): result less "
"than 0."
msgstr ""

#: ../../library/os.rst:4950
msgid "Otherwise, raise a :exc:`ValueError`."
msgstr ""

#: ../../library/os.rst:4952
msgid "On Windows, return *status* shifted right by 8 bits."
msgstr ""

#: ../../library/os.rst:4954
msgid ""
"On Unix, if the process is being traced or if :func:`waitpid` was called "
"with :data:`WUNTRACED` option, the caller must first check if "
"``WIFSTOPPED(status)`` is true. This function must not be called if "
"``WIFSTOPPED(status)`` is true."
msgstr ""

#: ../../library/os.rst:4961
msgid ""
":func:`WIFEXITED`, :func:`WEXITSTATUS`, :func:`WIFSIGNALED`, :func:"
"`WTERMSIG`, :func:`WIFSTOPPED`, :func:`WSTOPSIG` functions."
msgstr ""

#: ../../library/os.rst:4969
msgid ""
"The following functions take a process status code as returned by :func:"
"`system`, :func:`wait`, or :func:`waitpid` as a parameter.  They may be used "
"to determine the disposition of a process."
msgstr ""

#: ../../library/os.rst:4975
msgid ""
"Return ``True`` if a core dump was generated for the process, otherwise "
"return ``False``."
msgstr ""

#: ../../library/os.rst:4978 ../../library/os.rst:5044
msgid "This function should be employed only if :func:`WIFSIGNALED` is true."
msgstr ""

#: ../../library/os.rst:4985
msgid ""
"Return ``True`` if a stopped child has been resumed by delivery of :const:"
"`~signal.SIGCONT` (if the process has been continued from a job control "
"stop), otherwise return ``False``."
msgstr ""

#: ../../library/os.rst:4989
msgid "See :data:`WCONTINUED` option."
msgstr "參閱 :data:`WCONTINUED` 選項。"

#: ../../library/os.rst:4996
msgid ""
"Return ``True`` if the process was stopped by delivery of a signal, "
"otherwise return ``False``."
msgstr ""

#: ../../library/os.rst:4999
msgid ""
":func:`WIFSTOPPED` only returns ``True`` if the :func:`waitpid` call was "
"done using :data:`WUNTRACED` option or when the process is being traced "
"(see :manpage:`ptrace(2)`)."
msgstr ""

#: ../../library/os.rst:5007
msgid ""
"Return ``True`` if the process was terminated by a signal, otherwise return "
"``False``."
msgstr ""

#: ../../library/os.rst:5015
msgid ""
"Return ``True`` if the process exited terminated normally, that is, by "
"calling ``exit()`` or ``_exit()``, or by returning from ``main()``; "
"otherwise return ``False``."
msgstr ""

#: ../../library/os.rst:5024
msgid "Return the process exit status."
msgstr ""

#: ../../library/os.rst:5026
msgid "This function should be employed only if :func:`WIFEXITED` is true."
msgstr ""

#: ../../library/os.rst:5033
msgid "Return the signal which caused the process to stop."
msgstr ""

#: ../../library/os.rst:5035
msgid "This function should be employed only if :func:`WIFSTOPPED` is true."
msgstr ""

#: ../../library/os.rst:5042
msgid "Return the number of the signal that caused the process to terminate."
msgstr ""

#: ../../library/os.rst:5050
msgid "Interface to the scheduler"
msgstr ""

#: ../../library/os.rst:5052
msgid ""
"These functions control how a process is allocated CPU time by the operating "
"system. They are only available on some Unix platforms. For more detailed "
"information, consult your Unix manpages."
msgstr ""

#: ../../library/os.rst:5058
msgid ""
"The following scheduling policies are exposed if they are supported by the "
"operating system."
msgstr ""

#: ../../library/os.rst:5063
msgid "The default scheduling policy."
msgstr ""

#: ../../library/os.rst:5067
msgid ""
"Scheduling policy for CPU-intensive processes that tries to preserve "
"interactivity on the rest of the computer."
msgstr ""

#: ../../library/os.rst:5072
msgid "Scheduling policy for extremely low priority background tasks."
msgstr ""

#: ../../library/os.rst:5076
msgid "Scheduling policy for sporadic server programs."
msgstr ""

#: ../../library/os.rst:5080
msgid "A First In First Out scheduling policy."
msgstr ""

#: ../../library/os.rst:5084
msgid "A round-robin scheduling policy."
msgstr ""

#: ../../library/os.rst:5088
msgid ""
"This flag can be OR'ed with any other scheduling policy. When a process with "
"this flag set forks, its child's scheduling policy and priority are reset to "
"the default."
msgstr ""

#: ../../library/os.rst:5095
msgid ""
"This class represents tunable scheduling parameters used in :func:"
"`sched_setparam`, :func:`sched_setscheduler`, and :func:`sched_getparam`. It "
"is immutable."
msgstr ""

#: ../../library/os.rst:5099
msgid "At the moment, there is only one possible parameter:"
msgstr ""

#: ../../library/os.rst:5103
msgid "The scheduling priority for a scheduling policy."
msgstr ""

#: ../../library/os.rst:5108
msgid ""
"Get the minimum priority value for *policy*. *policy* is one of the "
"scheduling policy constants above."
msgstr ""

#: ../../library/os.rst:5114
msgid ""
"Get the maximum priority value for *policy*. *policy* is one of the "
"scheduling policy constants above."
msgstr ""

#: ../../library/os.rst:5120
msgid ""
"Set the scheduling policy for the process with PID *pid*. A *pid* of 0 means "
"the calling process. *policy* is one of the scheduling policy constants "
"above. *param* is a :class:`sched_param` instance."
msgstr ""

#: ../../library/os.rst:5127
msgid ""
"Return the scheduling policy for the process with PID *pid*. A *pid* of 0 "
"means the calling process. The result is one of the scheduling policy "
"constants above."
msgstr ""

#: ../../library/os.rst:5134
msgid ""
"Set the scheduling parameters for the process with PID *pid*. A *pid* of 0 "
"means the calling process. *param* is a :class:`sched_param` instance."
msgstr ""

#: ../../library/os.rst:5140
msgid ""
"Return the scheduling parameters as a :class:`sched_param` instance for the "
"process with PID *pid*. A *pid* of 0 means the calling process."
msgstr ""

#: ../../library/os.rst:5146
msgid ""
"Return the round-robin quantum in seconds for the process with PID *pid*. A "
"*pid* of 0 means the calling process."
msgstr ""

#: ../../library/os.rst:5152
msgid "Voluntarily relinquish the CPU."
msgstr ""

#: ../../library/os.rst:5157
msgid ""
"Restrict the process with PID *pid* (or the current process if zero) to a "
"set of CPUs.  *mask* is an iterable of integers representing the set of CPUs "
"to which the process should be restricted."
msgstr ""

#: ../../library/os.rst:5164
msgid "Return the set of CPUs the process with PID *pid* is restricted to."
msgstr ""

#: ../../library/os.rst:5166
msgid ""
"If *pid* is zero, return the set of CPUs the calling thread of the current "
"process is restricted to."
msgstr ""

#: ../../library/os.rst:5173
msgid "Miscellaneous System Information"
msgstr ""

#: ../../library/os.rst:5178
msgid ""
"Return string-valued system configuration values. *name* specifies the "
"configuration value to retrieve; it may be a string which is the name of a "
"defined system value; these names are specified in a number of standards "
"(POSIX, Unix 95, Unix 98, and others).  Some platforms define additional "
"names as well. The names known to the host operating system are given as the "
"keys of the ``confstr_names`` dictionary.  For configuration variables not "
"included in that mapping, passing an integer for *name* is also accepted."
msgstr ""

#: ../../library/os.rst:5186
msgid ""
"If the configuration value specified by *name* isn't defined, ``None`` is "
"returned."
msgstr ""

#: ../../library/os.rst:5189
msgid ""
"If *name* is a string and is not known, :exc:`ValueError` is raised.  If a "
"specific value for *name* is not supported by the host system, even if it is "
"included in ``confstr_names``, an :exc:`OSError` is raised with :const:"
"`errno.EINVAL` for the error number."
msgstr ""

#: ../../library/os.rst:5199
msgid ""
"Dictionary mapping names accepted by :func:`confstr` to the integer values "
"defined for those names by the host operating system. This can be used to "
"determine the set of names known to the system."
msgstr ""

#: ../../library/os.rst:5208
msgid ""
"Return the number of logical CPUs in the system. Returns ``None`` if "
"undetermined."
msgstr ""

#: ../../library/os.rst:5211
msgid ""
"This number is not equivalent to the number of logical CPUs the current "
"process can use. ``len(os.sched_getaffinity(0))`` gets the number of logical "
"CPUs the calling thread of the current process is restricted to"
msgstr ""

#: ../../library/os.rst:5220
msgid ""
"Return the number of processes in the system run queue averaged over the "
"last 1, 5, and 15 minutes or raises :exc:`OSError` if the load average was "
"unobtainable."
msgstr ""

#: ../../library/os.rst:5229
msgid ""
"Return integer-valued system configuration values. If the configuration "
"value specified by *name* isn't defined, ``-1`` is returned.  The comments "
"regarding the *name* parameter for :func:`confstr` apply here as well; the "
"dictionary that provides information on the known names is given by "
"``sysconf_names``."
msgstr ""

#: ../../library/os.rst:5239
msgid ""
"Dictionary mapping names accepted by :func:`sysconf` to the integer values "
"defined for those names by the host operating system. This can be used to "
"determine the set of names known to the system."
msgstr ""

#: ../../library/os.rst:5245
msgid "Add ``'SC_MINSIGSTKSZ'`` name."
msgstr ""

#: ../../library/os.rst:5248
msgid ""
"The following data values are used to support path manipulation operations.  "
"These are defined for all platforms."
msgstr ""

#: ../../library/os.rst:5251
msgid ""
"Higher-level operations on pathnames are defined in the :mod:`os.path` "
"module."
msgstr ""

#: ../../library/os.rst:5257
msgid ""
"The constant string used by the operating system to refer to the current "
"directory. This is ``'.'`` for Windows and POSIX. Also available via :mod:"
"`os.path`."
msgstr ""

#: ../../library/os.rst:5265
msgid ""
"The constant string used by the operating system to refer to the parent "
"directory. This is ``'..'`` for Windows and POSIX. Also available via :mod:"
"`os.path`."
msgstr ""

#: ../../library/os.rst:5274
msgid ""
"The character used by the operating system to separate pathname components. "
"This is ``'/'`` for POSIX and ``'\\\\'`` for Windows.  Note that knowing "
"this is not sufficient to be able to parse or concatenate pathnames --- use :"
"func:`os.path.split` and :func:`os.path.join` --- but it is occasionally "
"useful. Also available via :mod:`os.path`."
msgstr ""

#: ../../library/os.rst:5284
msgid ""
"An alternative character used by the operating system to separate pathname "
"components, or ``None`` if only one separator character exists.  This is set "
"to ``'/'`` on Windows systems where ``sep`` is a backslash. Also available "
"via :mod:`os.path`."
msgstr ""

#: ../../library/os.rst:5293
msgid ""
"The character which separates the base filename from the extension; for "
"example, the ``'.'`` in :file:`os.py`. Also available via :mod:`os.path`."
msgstr ""

#: ../../library/os.rst:5301
msgid ""
"The character conventionally used by the operating system to separate search "
"path components (as in :envvar:`PATH`), such as ``':'`` for POSIX or ``';'`` "
"for Windows. Also available via :mod:`os.path`."
msgstr ""

#: ../../library/os.rst:5308
msgid ""
"The default search path used by :func:`exec\\*p\\* <execl>` and :func:"
"`spawn\\*p\\* <spawnl>` if the environment doesn't have a ``'PATH'`` key. "
"Also available via :mod:`os.path`."
msgstr ""

#: ../../library/os.rst:5315
msgid ""
"The string used to separate (or, rather, terminate) lines on the current "
"platform.  This may be a single character, such as ``'\\n'`` for POSIX, or "
"multiple characters, for example, ``'\\r\\n'`` for Windows. Do not use *os."
"linesep* as a line terminator when writing files opened in text mode (the "
"default); use a single ``'\\n'`` instead, on all platforms."
msgstr ""

#: ../../library/os.rst:5324
msgid ""
"The file path of the null device. For example: ``'/dev/null'`` for POSIX, "
"``'nul'`` for Windows.  Also available via :mod:`os.path`."
msgstr ""

#: ../../library/os.rst:5335
msgid ""
"Flags for use with the :func:`~sys.setdlopenflags` and :func:`~sys."
"getdlopenflags` functions.  See the Unix manual page :manpage:`dlopen(3)` "
"for what the different flags mean."
msgstr ""

#: ../../library/os.rst:5343
msgid "Random numbers"
msgstr ""

#: ../../library/os.rst:5348
msgid ""
"Get up to *size* random bytes. The function can return less bytes than "
"requested."
msgstr ""

#: ../../library/os.rst:5351
msgid ""
"These bytes can be used to seed user-space random number generators or for "
"cryptographic purposes."
msgstr ""

#: ../../library/os.rst:5354
msgid ""
"``getrandom()`` relies on entropy gathered from device drivers and other "
"sources of environmental noise. Unnecessarily reading large quantities of "
"data will have a negative impact on  other users  of the ``/dev/random`` and "
"``/dev/urandom`` devices."
msgstr ""

#: ../../library/os.rst:5359
msgid ""
"The flags argument is a bit mask that can contain zero or more of the "
"following values ORed together: :py:const:`os.GRND_RANDOM` and :py:data:"
"`GRND_NONBLOCK`."
msgstr ""

#: ../../library/os.rst:5363
msgid ""
"See also the `Linux getrandom() manual page <https://man7.org/linux/man-"
"pages/man2/getrandom.2.html>`_."
msgstr ""

#: ../../library/os.rst:5366
msgid ":ref:`Availability <availability>`: Linux >= 3.17."
msgstr ":ref:`適用 <availability>`：Linux 3.17 以上。"

#: ../../library/os.rst:5372
msgid ""
"Return a bytestring of *size* random bytes suitable for cryptographic use."
msgstr ""

#: ../../library/os.rst:5374
msgid ""
"This function returns random bytes from an OS-specific randomness source.  "
"The returned data should be unpredictable enough for cryptographic "
"applications, though its exact quality depends on the OS implementation."
msgstr ""

#: ../../library/os.rst:5378
msgid ""
"On Linux, if the ``getrandom()`` syscall is available, it is used in "
"blocking mode: block until the system urandom entropy pool is initialized "
"(128 bits of entropy are collected by the kernel). See the :pep:`524` for "
"the rationale. On Linux, the :func:`getrandom` function can be used to get "
"random bytes in non-blocking mode (using the :data:`GRND_NONBLOCK` flag) or "
"to poll until the system urandom entropy pool is initialized."
msgstr ""

#: ../../library/os.rst:5385
msgid ""
"On a Unix-like system, random bytes are read from the ``/dev/urandom`` "
"device. If the ``/dev/urandom`` device is not available or not readable, "
"the :exc:`NotImplementedError` exception is raised."
msgstr ""

#: ../../library/os.rst:5389
msgid "On Windows, it will use ``BCryptGenRandom()``."
msgstr ""

#: ../../library/os.rst:5392
msgid ""
"The :mod:`secrets` module provides higher level functions. For an easy-to-"
"use interface to the random number generator provided by your platform, "
"please see :class:`random.SystemRandom`."
msgstr ""

#: ../../library/os.rst:5396
msgid ""
"On Linux 3.17 and newer, the ``getrandom()`` syscall is now used when "
"available.  On OpenBSD 5.6 and newer, the C ``getentropy()`` function is now "
"used. These functions avoid the usage of an internal file descriptor."
msgstr ""

#: ../../library/os.rst:5402
msgid ""
"On Linux, if the ``getrandom()`` syscall blocks (the urandom entropy pool is "
"not initialized yet), fall back on reading ``/dev/urandom``."
msgstr ""

#: ../../library/os.rst:5406
msgid ""
"On Linux, ``getrandom()`` is now used in blocking mode to increase the "
"security."
msgstr ""

#: ../../library/os.rst:5410
msgid ""
"On Windows, ``BCryptGenRandom()`` is used instead of ``CryptGenRandom()`` "
"which is deprecated."
msgstr ""

#: ../../library/os.rst:5416
msgid ""
"By  default, when reading from ``/dev/random``, :func:`getrandom` blocks if "
"no random bytes are available, and when reading from ``/dev/urandom``, it "
"blocks if the entropy pool has not yet been initialized."
msgstr ""

#: ../../library/os.rst:5420
msgid ""
"If the :py:data:`GRND_NONBLOCK` flag is set, then :func:`getrandom` does not "
"block in these cases, but instead immediately raises :exc:`BlockingIOError`."
msgstr ""

#: ../../library/os.rst:5427
msgid ""
"If  this  bit  is  set,  then  random bytes are drawn from the ``/dev/"
"random`` pool instead of the ``/dev/urandom`` pool."
msgstr ""

#: ../../library/os.rst:363 ../../library/os.rst:529 ../../library/os.rst:731
msgid "user"
msgstr "user（使用者）"

#: ../../library/os.rst:363
msgid "effective id"
msgstr ""

#: ../../library/os.rst:372 ../../library/os.rst:438 ../../library/os.rst:447
#: ../../library/os.rst:456 ../../library/os.rst:470 ../../library/os.rst:666
#: ../../library/os.rst:4235 ../../library/os.rst:4262
msgid "process"
msgstr "process"

#: ../../library/os.rst:372 ../../library/os.rst:438
msgid "group"
msgstr "group（群組）"

#: ../../library/os.rst:447 ../../library/os.rst:529
msgid "id"
msgstr "id"

#: ../../library/os.rst:456
msgid "id of parent"
msgstr ""

#: ../../library/os.rst:470 ../../library/os.rst:666
msgid "scheduling priority"
msgstr "scheduling priority（排程優先權）"

#: ../../library/os.rst:552 ../../library/os.rst:796
msgid "environment variables"
msgstr "environment variables（環境變數）"

#: ../../library/os.rst:552
msgid "setting"
msgstr "setting（設定）"

#: ../../library/os.rst:731
msgid "id, setting"
msgstr "id, setting（設定）"

#: ../../library/os.rst:764
msgid "gethostname() (in module socket)"
msgstr "gethostname()（於 socket 模組）"

#: ../../library/os.rst:764
msgid "gethostbyaddr() (in module socket)"
msgstr "gethostbyaddr()（於 socket 模組）"

#: ../../library/os.rst:796 ../../library/os.rst:2584
msgid "deleting"
msgstr "deleting（刪除）"

#: ../../library/os.rst:1338 ../../library/os.rst:2954
msgid "module"
msgstr "module（模組）"

#: ../../library/os.rst:1338
msgid "pty"
msgstr "pty"

#: ../../library/os.rst:1979 ../../library/os.rst:2383
#: ../../library/os.rst:2584 ../../library/os.rst:3488
#: ../../library/os.rst:3587
msgid "directory"
msgstr "directory（目錄）"

#: ../../library/os.rst:1979
msgid "changing"
msgstr "changing（改變）"

#: ../../library/os.rst:2383
msgid "creating"
msgstr "creating（建立）"

#: ../../library/os.rst:2383
msgid "UNC paths"
msgstr "UNC paths（UNC 路徑）"

#: ../../library/os.rst:2383
msgid "and os.makedirs()"
msgstr "以及 os.makedirs()"

#: ../../library/os.rst:2954
msgid "stat"
msgstr "stat"

#: ../../library/os.rst:3488 ../../library/os.rst:3587
msgid "walking"
msgstr ""

#: ../../library/os.rst:3488 ../../library/os.rst:3587
msgid "traversal"
msgstr "traversal（遍歷）"

#: ../../library/os.rst:4235 ../../library/os.rst:4262
msgid "killing"
msgstr ""

#: ../../library/os.rst:4235 ../../library/os.rst:4262
msgid "signalling"
msgstr "signalling（信號）"

#: ../../library/os.rst:5254 ../../library/os.rst:5290
msgid ". (dot)"
msgstr ". （點）"

#: ../../library/os.rst:5254 ../../library/os.rst:5262
#: ../../library/os.rst:5270 ../../library/os.rst:5281
#: ../../library/os.rst:5290
msgid "in pathnames"
msgstr "於 pathnames（路徑名稱）中"

#: ../../library/os.rst:5262
msgid ".."
msgstr ".."

#: ../../library/os.rst:5270 ../../library/os.rst:5281
msgid "/ (slash)"
msgstr "/ （斜線）"

#: ../../library/os.rst:5271
msgid "\\ (backslash)"
msgstr "\\ （反斜線）"

#: ../../library/os.rst:5271
msgid "in pathnames (Windows)"
msgstr "in pathnames (Windows)（在路徑名稱中 (Windows)）"

#: ../../library/os.rst:5297
msgid ": (colon)"
msgstr ": （冒號）"

#: ../../library/os.rst:5297
msgid "path separator (POSIX)"
msgstr "path separator (POSIX)（路徑分隔器 (POSIX)）"

#: ../../library/os.rst:5297
msgid "; (semicolon)"
msgstr "; （分號）"
