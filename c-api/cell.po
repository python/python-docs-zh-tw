# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2022, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
# aminzai <lagunawang@gmail.com>, 2015
# Liang-Bo Wang <me@liang2.tw>, 2015
# Matt Wang <mattwang44@gmail.com>, 2021
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3.13\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-07-10 00:04+0000\n"
"PO-Revision-Date: 2022-10-16 15:33+0800\n"
"Last-Translator: Matt Wang <mattwang44@gmail.com>\n"
"Language-Team: Chinese - TAIWAN (https://github.com/python/python-docs-zh-"
"tw)\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Poedit 3.1.1\n"

#: ../../c-api/cell.rst:6
msgid "Cell Objects"
msgstr "Cell 物件"

#: ../../c-api/cell.rst:8
msgid ""
"\"Cell\" objects are used to implement variables referenced by multiple "
"scopes. For each such variable, a cell object is created to store the value; "
"the local variables of each stack frame that references the value contains a "
"reference to the cells from outer scopes which also use that variable.  When "
"the value is accessed, the value contained in the cell is used instead of "
"the cell object itself.  This de-referencing of the cell object requires "
"support from the generated byte-code; these are not automatically de-"
"referenced when accessed. Cell objects are not likely to be useful elsewhere."
msgstr ""
"\"Cell\" 物件用於實現被多個作用域所參照 (reference) 的變數。對於每個這樣的變"
"數，都會有個 cell 物件為了儲存該值而被建立；參照該值的每個 stack frame 中的區"
"域性變數包含外部作用域的 cell 參照，它同樣使用了該變數。存取該值時，將使用 "
"cell 中包含的值而不是 cell 物件本身。這種對 cell 物件的去除參照 (de-"
"reference) 需要生成的位元組碼 (byte-code) 有支援；存取時不會自動去除參照。"
"cell 物件在其他地方可能不太有用。"

#: ../../c-api/cell.rst:20
msgid "The C structure used for cell objects."
msgstr "Cell 物件所用之 C 結構。"

#: ../../c-api/cell.rst:25
msgid "The type object corresponding to cell objects."
msgstr "對應 cell 物件的物件型別。"

#: ../../c-api/cell.rst:30
msgid ""
"Return true if *ob* is a cell object; *ob* must not be ``NULL``.  This "
"function always succeeds."
msgstr ""
"如果 *ob* 是一個 cell 物件則回傳真值；*ob* 必須不為 ``NULL``。此函式總是會成"
"功執行。"

#: ../../c-api/cell.rst:36
msgid ""
"Create and return a new cell object containing the value *ob*. The parameter "
"may be ``NULL``."
msgstr "建立並回傳一個包含 *ob* 的新 cell 物件。參數可以為 ``NULL``。"

#: ../../c-api/cell.rst:42
msgid ""
"Return the contents of the cell *cell*, which can be ``NULL``. If *cell* is "
"not a cell object, returns ``NULL`` with an exception set."
msgstr ""
"回傳 cell 物件 *cell* 的內容，其可能為 ``NULL``。如果 *cell* 不是一個 cell 物"
"件，則將回傳 ``NULL`` 並設定例外。"

#: ../../c-api/cell.rst:48
msgid ""
"Return the contents of the cell *cell*, but without checking that *cell* is "
"non-``NULL`` and a cell object."
msgstr ""
"回傳 cell 物件 *cell* 的內容，但是不檢查 *cell* 是否非 ``NULL`` 並且為一個 "
"cell 物件。"

#: ../../c-api/cell.rst:54
msgid ""
"Set the contents of the cell object *cell* to *value*.  This releases the "
"reference to any current content of the cell. *value* may be ``NULL``.  "
"*cell* must be non-``NULL``."
msgstr ""
"將 cell 物件 *cell* 的內容設為 *value*。這將釋放任何對 cell 物件當前內容的參"
"照。*value* 可以為 ``NULL``。*cell* 必須不為 ``NULL``。"

#: ../../c-api/cell.rst:58
msgid ""
"On success, return ``0``. If *cell* is not a cell object, set an exception "
"and return ``-1``."
msgstr ""
"在成功時回傳 ``0``。如果 *cell* 不是一個 cell 物件，則將設定例外並回傳 "
"``-1``。"

#: ../../c-api/cell.rst:64
msgid ""
"Sets the value of the cell object *cell* to *value*.  No reference counts "
"are adjusted, and no checks are made for safety; *cell* must be non-``NULL`` "
"and must be a cell object."
msgstr ""
"將 cell 物件 *cell* 的值設為 *value*。不會調整參照計數，並且不會進行任何安全"
"檢查；*cell* 必須為非 ``NULL`` 並且為一個 cell 物件。"
