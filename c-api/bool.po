# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2022, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
# Ching-Lung Chuang, 2015
# Matt Wang <mattwang44@gmail.com>, 2021
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3.12\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-07-29 10:36+0000\n"
"PO-Revision-Date: 2021-12-09 20:47+0800\n"
"Last-Translator: Matt Wang <mattwang44@gmail.com>\n"
"Language-Team: Chinese - TAIWAN (https://github.com/python/python-docs-zh-"
"tw)\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Poedit 3.0\n"

#: ../../c-api/bool.rst:6
msgid "Boolean Objects"
msgstr "Boolean（布林）物件"

#: ../../c-api/bool.rst:8
msgid ""
"Booleans in Python are implemented as a subclass of integers.  There are "
"only two booleans, :c:data:`Py_False` and :c:data:`Py_True`.  As such, the "
"normal creation and deletion functions don't apply to booleans.  The "
"following macros are available, however."
msgstr ""
"Python 中的 boolean 是以整數子類別化來實現的。只有 :c:data:`Py_False` 和 :c:"
"data:`Py_True` 兩個 boolean。因此一般的建立和刪除函式並不適用於 boolean。但下"
"列巨集 (macro) 是可用的。"

#: ../../c-api/bool.rst:16
msgid ""
"This instance of :c:type:`PyTypeObject` represents the Python boolean type; "
"it is the same object as :class:`bool` in the Python layer."
msgstr ""

#: ../../c-api/bool.rst:22
msgid ""
"Return true if *o* is of type :c:data:`PyBool_Type`.  This function always "
"succeeds."
msgstr ""
"如果 *o* 的型別為 :c:data:`PyBool_Type` 則回傳真值。此函式總是會成功執行。"

#: ../../c-api/bool.rst:28
msgid ""
"The Python ``False`` object.  This object has no methods and is `immortal "
"<https://peps.python.org/pep-0683/>`_."
msgstr ""
"Python 的 ``False`` 物件。此物件沒有任何方法且為\\ `不滅的 (immortal) "
"<https://peps.python.org/pep-0683/>`_。"

#: ../../c-api/bool.rst:31
msgid ":c:data:`Py_False` is immortal."
msgstr ":c:data:`Py_False` 為不滅的。"

#: ../../c-api/bool.rst:37
msgid ""
"The Python ``True`` object.  This object has no methods and is `immortal "
"<https://peps.python.org/pep-0683/>`_."
msgstr ""
"Python 的 ``True`` 物件。此物件沒有任何方法且為\\ `不滅的 (immortal) "
"<https://peps.python.org/pep-0683/>`_。"

#: ../../c-api/bool.rst:40
msgid ":c:data:`Py_True` is immortal."
msgstr ":c:data:`Py_True` 為不滅的。"

#: ../../c-api/bool.rst:46
msgid "Return :c:data:`Py_False` from a function."
msgstr "從函式回傳 :c:data:`Py_False`。"

#: ../../c-api/bool.rst:51
msgid "Return :c:data:`Py_True` from a function."
msgstr "從函式回傳 :c:data:`Py_True`。"

#: ../../c-api/bool.rst:56
msgid ""
"Return :c:data:`Py_True` or :c:data:`Py_False`, depending on the truth value "
"of *v*."
msgstr "根據 *v* 的實際值來回傳 :c:data:`Py_True` 或者 :c:data:`Py_False`。"
