# Copyright (C) 2001-2023, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
# Nkeys Syu <nkeys1324@gmail.com>, 2016
# Matt Wang <mattwang44@gmail.com>, 2023
msgid ""
msgstr ""
"Project-Id-Version: Python 3.13\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-09-23 07:52+0800\n"
"PO-Revision-Date: 2023-08-24 00:55+0800\n"
"Last-Translator: Matt Wang <mattwang44@gmail.com>\n"
"Language-Team: Chinese - TAIWAN (https://github.com/python/python-docs-zh-"
"tw)\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Poedit 3.2.2\n"

#: ../../c-api/list.rst:6
msgid "List Objects"
msgstr "List（串列）物件"

#: ../../c-api/list.rst:13
msgid "This subtype of :c:type:`PyObject` represents a Python list object."
msgstr ":c:type:`PyObject` 的這個子型別表示 Python 的 list（串列）物件。"

#: ../../c-api/list.rst:18
msgid ""
"This instance of :c:type:`PyTypeObject` represents the Python list type. "
"This is the same object as :class:`list` in the Python layer."
msgstr ""
"此 :c:type:`PyTypeObject` 實例表示 Python 的 list 型別。這與 Python 層中的 :"
"class:`list` 是同一個物件。"

#: ../../c-api/list.rst:24
msgid ""
"Return true if *p* is a list object or an instance of a subtype of the list "
"type.  This function always succeeds."
msgstr ""
"如果 *p* 是一個 list 物件或者是 list 型別之子型別的實例，就回傳 true。這個函"
"式永遠會成功執行。"

#: ../../c-api/list.rst:30
msgid ""
"Return true if *p* is a list object, but not an instance of a subtype of the "
"list type.  This function always succeeds."
msgstr ""
"如果 *p* 是一個 list 物件但不是 list 型別的子型別的實例，就回傳 true。這個函"
"式永遠會成功執行。"

#: ../../c-api/list.rst:36
msgid "Return a new list of length *len* on success, or ``NULL`` on failure."
msgstr "成功時回傳長度為 *len* 的新串列，失敗時回傳 ``NULL``。"

#: ../../c-api/list.rst:40
#, fuzzy
msgid ""
"If *len* is greater than zero, the returned list object's items are set to "
"``NULL``. Thus you cannot use abstract API functions such as :c:func:"
"`PySequence_SetItem` or expose the object to Python code before setting all "
"items to a real object with :c:func:`PyList_SetItem` or :c:func:"
"`PyList_SET_ITEM()`. The following APIs are safe APIs before the list is "
"fully initialized: :c:func:`PyList_SetItem()` and :c:func:"
"`PyList_SET_ITEM()`."
msgstr ""
"如果 *len* 大於零，則回傳的串列物件之項目將被設定為 ``NULL``。因此，在使用 :"
"c:func:`PyList_SetItem` 來將所有項目設定為一個真實物件前，你無法使用像是 :c:"
"func:`PySequence_SetItem` 的使用抽象 API 函式，也不能將物件暴露 (expose) 給 "
"Python 程式碼。"

#: ../../c-api/list.rst:53
msgid ""
"Return the length of the list object in *list*; this is equivalent to "
"``len(list)`` on a list object."
msgstr "回傳 *list* 串列物件的長度；這相當於串列物件的 ``len(list)``。"

#: ../../c-api/list.rst:59
msgid "Similar to :c:func:`PyList_Size`, but without error checking."
msgstr "與 :c:func:`PyList_Size` 類似，但沒有錯誤檢查。"

#: ../../c-api/list.rst:64
#, fuzzy
msgid ""
"Return the object at position *index* in the list pointed to by *list*.  The "
"position must be non-negative; indexing from the end of the list is not "
"supported.  If *index* is out of bounds (:code:`<0 or >=len(list)`), return "
"``NULL`` and set an :exc:`IndexError` exception."
msgstr ""
"回傳 *list* 指向的串列中位於 *index* 位置的物件。該位置不可為負數；並不支援從"
"串列尾末開始索引。如果 *index* 超出邊界範圍（<0 或 >=len(list)）則回傳 "
"``NULL`` 並設定 :exc:`IndexError` 例外。"

#: ../../c-api/list.rst:74
msgid ""
"Like :c:func:`PyList_GetItemRef`, but returns a :term:`borrowed reference` "
"instead of a :term:`strong reference`."
msgstr ""

#: ../../c-api/list.rst:80
msgid "Similar to :c:func:`PyList_GetItem`, but without error checking."
msgstr "與 :c:func:`PyList_GetItem` 類似，但沒有錯誤檢查。"

#: ../../c-api/list.rst:85
msgid ""
"Set the item at index *index* in list to *item*.  Return ``0`` on success. "
"If *index* is out of bounds, return ``-1`` and set an :exc:`IndexError` "
"exception."
msgstr ""
"將串列中索引 *index* 處的項目設定為 *item*。成功時回傳 ``0``。如果 *index* 超"
"出邊界範圍則回傳 ``-1`` 並設定一個 :exc:`IndexError` 例外。"

#: ../../c-api/list.rst:91
msgid ""
"This function \"steals\" a reference to *item* and discards a reference to "
"an item already in the list at the affected position."
msgstr ""
"此函式「竊取」對 *item* 的參照，並丟棄對串列中受影響位置上已存在項目的參照。"

#: ../../c-api/list.rst:97
msgid ""
"Macro form of :c:func:`PyList_SetItem` without error checking. This is "
"normally only used to fill in new lists where there is no previous content."
msgstr ""
":c:func:`PyList_SetItem` 的巨集形式，沒有錯誤檢查。這通常僅用於填充沒有已存在"
"內容的新串列。"

#: ../../c-api/list.rst:100
msgid ""
"Bounds checking is performed as an assertion if Python is built in :ref:"
"`debug mode <debug-build>` or :option:`with assertions <--with-assertions>`."
msgstr ""

#: ../../c-api/list.rst:106
msgid ""
"This macro \"steals\" a reference to *item*, and, unlike :c:func:"
"`PyList_SetItem`, does *not* discard a reference to any item that is being "
"replaced; any reference in *list* at position *i* will be leaked."
msgstr ""
"該巨集「竊取」對 *item* 的參照，並且與 :c:func:`PyList_SetItem` 不同的是，它"
"\\ *不會*\\ 丟棄對任意被替換項目的參照；*list* 中位置 *i* 的任何參照都將被洩"
"漏 (leak)。"

#: ../../c-api/list.rst:114
msgid ""
"Insert the item *item* into list *list* in front of index *index*.  Return "
"``0`` if successful; return ``-1`` and set an exception if unsuccessful. "
"Analogous to ``list.insert(index, item)``."
msgstr ""
"將項目 *item* 插入串列 *list* 中索引 *index* 的位置之前。如果成功則回傳 "
"``0``；如果失敗則回傳 ``-1`` 並設定例外。類似於 ``list.insert(index, "
"item)``。"

#: ../../c-api/list.rst:121
msgid ""
"Append the object *item* at the end of list *list*. Return ``0`` if "
"successful; return ``-1`` and set an exception if unsuccessful.  Analogous "
"to ``list.append(item)``."
msgstr ""
"將物件 *item* 附加到串列 *list* 的最後面。如果成功則回傳 ``0``；如果不成功，"
"則回傳 ``-1`` 並設定例外。類似於 ``list.append(item)``。"

#: ../../c-api/list.rst:128
msgid ""
"Return a list of the objects in *list* containing the objects *between* "
"*low* and *high*.  Return ``NULL`` and set an exception if unsuccessful.  "
"Analogous to ``list[low:high]``.  Indexing from the end of the list is not "
"supported."
msgstr ""
"回傳 *list* 中的物件串列，其中包含 *low* 和 *high* *之間*\\ 的物件。如果沒有"
"成功則回傳 ``NULL`` 並設定例外。類似於 ``list[low:high]``。不支援從串列尾末開"
"始索引。"

#: ../../c-api/list.rst:135
msgid ""
"Set the slice of *list* between *low* and *high* to the contents of "
"*itemlist*.  Analogous to ``list[low:high] = itemlist``. The *itemlist* may "
"be ``NULL``, indicating the assignment of an empty list (slice deletion). "
"Return ``0`` on success, ``-1`` on failure.  Indexing from the end of the "
"list is not supported."
msgstr ""
"將 *low* 和 *high* 之間的 *list* 切片設定為 *itemlist* 的內容。類似於 "
"``list[low:high] = itemlist``。*itemlist* 可能為 ``NULL``，表示分配一個空串列"
"（切片刪除）。成功時回傳 ``0``，失敗時則回傳 ``-1``。不支援從串列尾末開始索"
"引。"

#: ../../c-api/list.rst:144
msgid ""
"Extend *list* with the contents of *iterable*.  This is the same as "
"``PyList_SetSlice(list, PY_SSIZE_T_MAX, PY_SSIZE_T_MAX, iterable)`` and "
"analogous to ``list.extend(iterable)`` or ``list += iterable``."
msgstr ""

#: ../../c-api/list.rst:148
msgid ""
"Raise an exception and return ``-1`` if *list* is not a :class:`list` "
"object. Return 0 on success."
msgstr ""

#: ../../c-api/list.rst:156
msgid ""
"Remove all items from *list*.  This is the same as ``PyList_SetSlice(list, "
"0, PY_SSIZE_T_MAX, NULL)`` and analogous to ``list.clear()`` or ``del "
"list[:]``."
msgstr ""

#: ../../c-api/list.rst:160
msgid ""
"Raise an exception and return ``-1`` if *list* is not a :class:`list` "
"object.  Return 0 on success."
msgstr ""

#: ../../c-api/list.rst:168
msgid ""
"Sort the items of *list* in place.  Return ``0`` on success, ``-1`` on "
"failure.  This is equivalent to ``list.sort()``."
msgstr ""
"對 *list* 的項目進行原地 (in place) 排序。成功時回傳 ``0``，失敗時回傳 "
"``-1``。這相當於 ``list.sort()``。"

#: ../../c-api/list.rst:174
msgid ""
"Reverse the items of *list* in place.  Return ``0`` on success, ``-1`` on "
"failure.  This is the equivalent of ``list.reverse()``."
msgstr ""
"原地反轉 *list* 的項目。成功時回傳 ``0``，失敗時回傳 ``-1``。這相當於 ``list."
"reverse()``。"

#: ../../c-api/list.rst:182
msgid ""
"Return a new tuple object containing the contents of *list*; equivalent to "
"``tuple(list)``."
msgstr ""
"回傳一個新的 tuple（元組）物件，其中包含 *list* 的內容；相當於 "
"``tuple(list)``。"

#: ../../c-api/list.rst:8
msgid "object"
msgstr "object（物件）"

#: ../../c-api/list.rst:8
msgid "list"
msgstr "list（串列）"

#: ../../c-api/list.rst:51 ../../c-api/list.rst:180
msgid "built-in function"
msgstr "built-in function（內建函式）"

#: ../../c-api/list.rst:51
msgid "len"
msgstr "len"

#: ../../c-api/list.rst:180
msgid "tuple"
msgstr "tuple（元組）"
