# Copyright (C) 2001-2024, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
# Matt Wang <mattwang44@gmail.com>, 2024
msgid ""
msgstr ""
"Project-Id-Version: Python 3.13\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-09-23 07:52+0800\n"
"PO-Revision-Date: 2024-05-11 14:32+0800\n"
"Last-Translator: Matt Wang <mattwang44@gmail.com>\n"
"Language-Team: Chinese - TAIWAN (https://github.com/python/python-docs-zh-"
"tw)\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../c-api/mapping.rst:6
msgid "Mapping Protocol"
msgstr "對映協定"

#: ../../c-api/mapping.rst:8
msgid ""
"See also :c:func:`PyObject_GetItem`, :c:func:`PyObject_SetItem` and :c:func:"
"`PyObject_DelItem`."
msgstr ""
"另請參閱 :c:func:`PyObject_GetItem`、:c:func:`PyObject_SetItem` 和 :c:func:"
"`PyObject_DelItem`。"

#: ../../c-api/mapping.rst:14
msgid ""
"Return ``1`` if the object provides the mapping protocol or supports "
"slicing, and ``0`` otherwise.  Note that it returns ``1`` for Python classes "
"with a :meth:`~object.__getitem__` method, since in general it is impossible "
"to determine what type of keys the class supports. This function always "
"succeeds."
msgstr ""
"如果物件有提供對映協定或支援切片 (slicing) 則回傳 ``1``，否則回傳 ``0``。請注"
"意，對於具有 :meth:`~object.__getitem__` 方法的 Python 類別，它會回傳 ``1``，"
"因為通常無法確定該類別支援什麼類型的鍵。這個函式總會是成功的。"

#: ../../c-api/mapping.rst:25
msgid ""
"Returns the number of keys in object *o* on success, and ``-1`` on failure. "
"This is equivalent to the Python expression ``len(o)``."
msgstr ""
"成功時回傳物件 *o* 中的鍵數，失敗時回傳 ``-1``。這相當於 Python 運算式 "
"``len(o)``。"

#: ../../c-api/mapping.rst:31
msgid ""
"This is the same as :c:func:`PyObject_GetItem`, but *key* is specified as a :"
"c:expr:`const char*` UTF-8 encoded bytes string, rather than a :c:expr:"
"`PyObject*`."
msgstr ""
"這與 :c:func:`PyObject_GetItem` 相同，但 *key* 被指定為 :c:expr:`const "
"char*` UTF-8 編碼位元組字串，而不是 :c:expr:`PyObject*`。"

#: ../../c-api/mapping.rst:38
msgid ""
"Variant of :c:func:`PyObject_GetItem` which doesn't raise :exc:`KeyError` if "
"the key is not found."
msgstr ""

#: ../../c-api/mapping.rst:41
msgid ""
"If the key is found, return ``1`` and set *\\*result* to a new :term:`strong "
"reference` to the corresponding value. If the key is not found, return ``0`` "
"and set *\\*result* to ``NULL``; the :exc:`KeyError` is silenced. If an "
"error other than :exc:`KeyError` is raised, return ``-1`` and set "
"*\\*result* to ``NULL``."
msgstr ""

#: ../../c-api/mapping.rst:53
#, fuzzy
msgid ""
"This is the same as :c:func:`PyMapping_GetOptionalItem`, but *key* is "
"specified as a :c:expr:`const char*` UTF-8 encoded bytes string, rather than "
"a :c:expr:`PyObject*`."
msgstr ""
"這與 :c:func:`PyMapping_HasKey` 相同，但 *key* 被指定為 :c:expr:`const "
"char*` UTF-8 編碼位元組字串，而不是 :c:expr:`PyObject*`。"

#: ../../c-api/mapping.rst:62
msgid ""
"This is the same as :c:func:`PyObject_SetItem`, but *key* is specified as a :"
"c:expr:`const char*` UTF-8 encoded bytes string, rather than a :c:expr:"
"`PyObject*`."
msgstr ""
"這與 :c:func:`PyObject_SetItem` 相同，但 *key* 被指定為 :c:expr:`const "
"char*` UTF-8 編碼位元組字串，而不是 :c:expr:`PyObject*`。"

#: ../../c-api/mapping.rst:69
msgid "This is an alias of :c:func:`PyObject_DelItem`."
msgstr "這是 :c:func:`PyObject_DelItem` 的別名。"

#: ../../c-api/mapping.rst:74
msgid ""
"This is the same as :c:func:`PyObject_DelItem`, but *key* is specified as a :"
"c:expr:`const char*` UTF-8 encoded bytes string, rather than a :c:expr:"
"`PyObject*`."
msgstr ""
"這與 :c:func:`PyObject_DelItem` 相同，但 *key* 被指定為 :c:expr:`const "
"char*` UTF-8 編碼位元組字串，而不是 :c:expr:`PyObject*`。"

#: ../../c-api/mapping.rst:81
#, fuzzy
msgid ""
"Return ``1`` if the mapping object has the key *key* and ``0`` otherwise. "
"This is equivalent to the Python expression ``key in o``. On failure, return "
"``-1``."
msgstr ""
"如果對映物件具有鍵 *key* 則回傳 ``1``，否則回傳 ``0``。這相當於 Python 運算"
"式 ``key in o``。這個函式總會是成功的。"

#: ../../c-api/mapping.rst:90
#, fuzzy
msgid ""
"This is the same as :c:func:`PyMapping_HasKeyWithError`, but *key* is "
"specified as a :c:expr:`const char*` UTF-8 encoded bytes string, rather than "
"a :c:expr:`PyObject*`."
msgstr ""
"這與 :c:func:`PyMapping_HasKey` 相同，但 *key* 被指定為 :c:expr:`const "
"char*` UTF-8 編碼位元組字串，而不是 :c:expr:`PyObject*`。"

#: ../../c-api/mapping.rst:99
msgid ""
"Return ``1`` if the mapping object has the key *key* and ``0`` otherwise. "
"This is equivalent to the Python expression ``key in o``. This function "
"always succeeds."
msgstr ""
"如果對映物件具有鍵 *key* 則回傳 ``1``，否則回傳 ``0``。這相當於 Python 運算"
"式 ``key in o``。這個函式總會是成功的。"

#: ../../c-api/mapping.rst:105
#, fuzzy
msgid ""
"Exceptions which occur when this calls :meth:`~object.__getitem__` method "
"are silently ignored. For proper error handling, use :c:func:"
"`PyMapping_HasKeyWithError`, :c:func:`PyMapping_GetOptionalItem` or :c:func:"
"`PyObject_GetItem()` instead."
msgstr ""
"當它呼叫 :meth:`~object.__getitem__` 方法時發生的例外將被默默忽略。為了適當地"
"處理錯誤，請改用 :c:func:`PyObject_GetItem()`。"

#: ../../c-api/mapping.rst:113
msgid ""
"This is the same as :c:func:`PyMapping_HasKey`, but *key* is specified as a :"
"c:expr:`const char*` UTF-8 encoded bytes string, rather than a :c:expr:"
"`PyObject*`."
msgstr ""
"這與 :c:func:`PyMapping_HasKey` 相同，但 *key* 被指定為 :c:expr:`const "
"char*` UTF-8 編碼位元組字串，而不是 :c:expr:`PyObject*`。"

#: ../../c-api/mapping.rst:119
#, fuzzy
msgid ""
"Exceptions that occur when this calls :meth:`~object.__getitem__` method or "
"while creating the temporary :class:`str` object are silently ignored. For "
"proper error handling, use :c:func:`PyMapping_HasKeyStringWithError`, :c:"
"func:`PyMapping_GetOptionalItemString` or :c:func:`PyMapping_GetItemString` "
"instead."
msgstr ""
"當它呼叫 :meth:`~object.__getitem__` 方法或建立臨時 :class:`str` 物件時發生的"
"例外將被默默忽略。為了適當地處理錯誤，請改用 :c:func:"
"`PyMapping_GetItemString`。"

#: ../../c-api/mapping.rst:129
msgid ""
"On success, return a list of the keys in object *o*.  On failure, return "
"``NULL``."
msgstr "成功時回傳一個物件 *o* 內之鍵的串列，失敗時回傳 ``NULL``。"

#: ../../c-api/mapping.rst:132 ../../c-api/mapping.rst:141
#: ../../c-api/mapping.rst:150
msgid "Previously, the function returned a list or a tuple."
msgstr "在以前，該函式會回傳串列或元組。"

#: ../../c-api/mapping.rst:138
msgid ""
"On success, return a list of the values in object *o*.  On failure, return "
"``NULL``."
msgstr "成功時回傳物件 *o* 中值的串列。失敗時回傳 ``NULL``。"

#: ../../c-api/mapping.rst:147
msgid ""
"On success, return a list of the items in object *o*, where each item is a "
"tuple containing a key-value pair.  On failure, return ``NULL``."
msgstr ""
"成功時回傳物件 *o* 內之項目的串列，其中每個項目都是包含鍵值對的元組。失敗時回"
"傳 ``NULL``。"

#: ../../c-api/mapping.rst:23
msgid "built-in function"
msgstr "built-in function（內建函式）"

#: ../../c-api/mapping.rst:23
msgid "len"
msgstr "len"
