# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2022, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
# Ching-Lung Chuang, 2015
# Liang-Bo Wang <me@liang2.tw>, 2015
# Matt Wang <mattwang44@gmail.com>, 2023
msgid ""
msgstr ""
"Project-Id-Version: Python 3.13\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-08-22 00:03+0000\n"
"PO-Revision-Date: 2023-07-01 04:14+0800\n"
"Last-Translator: Matt Wang <mattwang44@gmail.com>\n"
"Language-Team: Chinese - TAIWAN (https://github.com/python/python-docs-zh-"
"tw)\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Poedit 3.3.1\n"

#: ../../c-api/datetime.rst:6
msgid "DateTime Objects"
msgstr "DateTime 物件"

#: ../../c-api/datetime.rst:8
msgid ""
"Various date and time objects are supplied by the :mod:`datetime` module. "
"Before using any of these functions, the header file :file:`datetime.h` must "
"be included in your source (note that this is not included by :file:`Python."
"h`), and the macro :c:macro:`!PyDateTime_IMPORT` must be invoked, usually as "
"part of the module initialisation function.  The macro puts a pointer to a C "
"structure into a static variable, :c:data:`!PyDateTimeAPI`, that is used by "
"the following macros."
msgstr ""
":mod:`datetime` 模組提供各種日期和時間物件。在使用任何這些函式之前，必須將標"
"頭檔 :file:`datetime.h` 引入於原始碼中（請注意，:file:`Python.h` 並無引入該標"
"頭檔），且巨集 :c:macro:`!PyDateTime_IMPORT` 必須被調用，而這通常作為模組初始"
"化函式的一部分。該巨集將指向 C 結構的指標放入靜態變數 :c:data:`!"
"PyDateTimeAPI` 中，該變數會被以下巨集使用。"

#: ../../c-api/datetime.rst:18
msgid "This subtype of :c:type:`PyObject` represents a Python date object."
msgstr ""

#: ../../c-api/datetime.rst:22
msgid "This subtype of :c:type:`PyObject` represents a Python datetime object."
msgstr ""

#: ../../c-api/datetime.rst:26
msgid "This subtype of :c:type:`PyObject` represents a Python time object."
msgstr ""

#: ../../c-api/datetime.rst:30
msgid ""
"This subtype of :c:type:`PyObject` represents the difference between two "
"datetime values."
msgstr ""

#: ../../c-api/datetime.rst:34
msgid ""
"This instance of :c:type:`PyTypeObject` represents the Python date type; it "
"is the same object as :class:`datetime.date` in the Python layer."
msgstr ""

#: ../../c-api/datetime.rst:39
msgid ""
"This instance of :c:type:`PyTypeObject` represents the Python datetime type; "
"it is the same object as :class:`datetime.datetime` in the Python layer."
msgstr ""

#: ../../c-api/datetime.rst:44
msgid ""
"This instance of :c:type:`PyTypeObject` represents the Python time type; it "
"is the same object as :class:`datetime.time` in the Python layer."
msgstr ""

#: ../../c-api/datetime.rst:49
msgid ""
"This instance of :c:type:`PyTypeObject` represents Python type for the "
"difference between two datetime values; it is the same object as :class:"
"`datetime.timedelta` in the Python layer."
msgstr ""

#: ../../c-api/datetime.rst:55
msgid ""
"This instance of :c:type:`PyTypeObject` represents the Python time zone info "
"type; it is the same object as :class:`datetime.tzinfo` in the Python layer."
msgstr ""

#: ../../c-api/datetime.rst:59
msgid "Macro for access to the UTC singleton:"
msgstr "用於存取 UTC 單例 (singleton) 的巨集："

#: ../../c-api/datetime.rst:63
msgid ""
"Returns the time zone singleton representing UTC, the same object as :attr:"
"`datetime.timezone.utc`."
msgstr ""
"回傳表示 UTC 的時區單例，是與 :attr:`datetime.timezone.utc` 相同的物件。"

#: ../../c-api/datetime.rst:69
msgid "Type-check macros:"
msgstr "型別檢查巨集："

#: ../../c-api/datetime.rst:73
msgid ""
"Return true if *ob* is of type :c:data:`PyDateTime_DateType` or a subtype "
"of :c:data:`!PyDateTime_DateType`.  *ob* must not be ``NULL``.  This "
"function always succeeds."
msgstr ""
"如果 *ob* 的型別為 :c:data:`PyDateTime_DateType` 或 :c:data:`!"
"PyDateTime_DateType` 的子型別，則回傳 true。 *ob* 不得為 ``NULL``。這個函式一"
"定會執行成功。"

#: ../../c-api/datetime.rst:80
msgid ""
"Return true if *ob* is of type :c:data:`PyDateTime_DateType`. *ob* must not "
"be ``NULL``.  This function always succeeds."
msgstr ""
"如果 *ob* 的型別為 :c:data:`PyDateTime_DateType`，則回傳 true。 *ob* 不得為 "
"``NULL``。這個函式一定會執行成功。"

#: ../../c-api/datetime.rst:86
msgid ""
"Return true if *ob* is of type :c:data:`PyDateTime_DateTimeType` or a "
"subtype of :c:data:`!PyDateTime_DateTimeType`.  *ob* must not be ``NULL``.  "
"This function always succeeds."
msgstr ""
"如果 *ob* 的型別為 :c:data:`PyDateTime_DateTimeType` 或 :c:data:`!"
"PyDateTime_DateTimeType` 的子型別，則回傳 true。*ob* 不得為 ``NULL``。這個函"
"式一定會執行成功。"

#: ../../c-api/datetime.rst:93
msgid ""
"Return true if *ob* is of type :c:data:`PyDateTime_DateTimeType`. *ob* must "
"not be ``NULL``.  This function always succeeds."
msgstr ""
"如果 *ob* 的型別為 :c:data:`PyDateTime_DateTimeType`，則回傳 true。*ob* 不得"
"為 ``NULL``。這個函式一定會執行成功。"

#: ../../c-api/datetime.rst:99
msgid ""
"Return true if *ob* is of type :c:data:`PyDateTime_TimeType` or a subtype "
"of :c:data:`!PyDateTime_TimeType`.  *ob* must not be ``NULL``.  This "
"function always succeeds."
msgstr ""
"如果 *ob* 的型別為 :c:data:`PyDateTime_TimeType` 或 :c:data:`!"
"PyDateTime_TimeType` 的子型別，則回傳 true。*ob* 不得為 ``NULL``。這個函式一"
"定會執行成功。"

#: ../../c-api/datetime.rst:106
msgid ""
"Return true if *ob* is of type :c:data:`PyDateTime_TimeType`. *ob* must not "
"be ``NULL``.  This function always succeeds."
msgstr ""
"如果 *ob* 的型別為 :c:data:`PyDateTime_TimeType`，則回傳 true。*ob* 不得為 "
"``NULL``。這個函式一定會執行成功。"

#: ../../c-api/datetime.rst:112
msgid ""
"Return true if *ob* is of type :c:data:`PyDateTime_DeltaType` or a subtype "
"of :c:data:`!PyDateTime_DeltaType`.  *ob* must not be ``NULL``.  This "
"function always succeeds."
msgstr ""
"如果 *ob* 的型別為 :c:data:`PyDateTime_DeltaType` 或 :c:data:`!"
"PyDateTime_DeltaType` 的子型別，則回傳 true。*ob* 不得為 ``NULL``。這個函式一"
"定會執行成功。"

#: ../../c-api/datetime.rst:119
msgid ""
"Return true if *ob* is of type :c:data:`PyDateTime_DeltaType`. *ob* must not "
"be ``NULL``.  This function always succeeds."
msgstr ""
"如果 *ob* 的型別為 :c:data:`PyDateTime_DeltaType`，則回傳 true。*ob* 不得為 "
"``NULL``。這個函式一定會執行成功。"

#: ../../c-api/datetime.rst:125
msgid ""
"Return true if *ob* is of type :c:data:`PyDateTime_TZInfoType` or a subtype "
"of :c:data:`!PyDateTime_TZInfoType`.  *ob* must not be ``NULL``.  This "
"function always succeeds."
msgstr ""
"如果 *ob* 的型別為 :c:data:`PyDateTime_TZInfoType` 或 :c:data:`!"
"PyDateTime_TZInfoType` 的子型別，則回傳 true。*ob* 不得為 ``NULL``。這個函式"
"一定會執行成功。"

#: ../../c-api/datetime.rst:132
msgid ""
"Return true if *ob* is of type :c:data:`PyDateTime_TZInfoType`. *ob* must "
"not be ``NULL``.  This function always succeeds."
msgstr ""
"如果 *ob* 的型別為 :c:data:`PyDateTime_TZInfoType`，則回傳 true。 *ob* 不得"
"為 ``NULL``。這個函式一定會執行成功。"

#: ../../c-api/datetime.rst:136
msgid "Macros to create objects:"
msgstr "建立物件的巨集："

#: ../../c-api/datetime.rst:140
msgid ""
"Return a :class:`datetime.date` object with the specified year, month and "
"day."
msgstr "回傳一個有特定年、月、日的物件 :class:`datetime.date`。"

#: ../../c-api/datetime.rst:145
msgid ""
"Return a :class:`datetime.datetime` object with the specified year, month, "
"day, hour, minute, second and microsecond."
msgstr ""
"回傳一個有特定年、月、日、時、分、秒、微秒的物件 :class:`datetime.datetime`。"

#: ../../c-api/datetime.rst:151
msgid ""
"Return a :class:`datetime.datetime` object with the specified year, month, "
"day, hour, minute, second, microsecond and fold."
msgstr ""
"回傳一個有特定年、月、日、時、分、秒、微秒與 fold（時間折疊）的物件 :class:"
"`datetime.datetime`。"

#: ../../c-api/datetime.rst:159
msgid ""
"Return a :class:`datetime.time` object with the specified hour, minute, "
"second and microsecond."
msgstr "回傳一個有特定時、分、秒、微秒的物件 :class:`datetime.date`。"

#: ../../c-api/datetime.rst:165
msgid ""
"Return a :class:`datetime.time` object with the specified hour, minute, "
"second, microsecond and fold."
msgstr ""
"回傳一個有特定時、分、秒、微秒與 fold（時間折疊）的物件 :class:`datetime."
"time`。"

#: ../../c-api/datetime.rst:173
msgid ""
"Return a :class:`datetime.timedelta` object representing the given number of "
"days, seconds and microseconds.  Normalization is performed so that the "
"resulting number of microseconds and seconds lie in the ranges documented "
"for :class:`datetime.timedelta` objects."
msgstr ""
"回傳一個 :class:`datetime.timedelta` 物件，表示給定的天數、秒數和微秒數。執行"
"標準化 (normalization) 以便生成的微秒數和秒數位於 :class:`datetime."
"timedelta` 物件記錄的範圍內。"

#: ../../c-api/datetime.rst:181
msgid ""
"Return a :class:`datetime.timezone` object with an unnamed fixed offset "
"represented by the *offset* argument."
msgstr ""
"回傳一個 :class:`datetime.timezone` 物件，其未命名的固定偏移量由 *offset* 引"
"數表示。"

#: ../../c-api/datetime.rst:189
msgid ""
"Return a :class:`datetime.timezone` object with a fixed offset represented "
"by the *offset* argument and with tzname *name*."
msgstr ""
"回傳一個 :class:`datetime.timezone` 物件，其固定偏移量由 *offset* 引數表示，"
"並帶有 tzname *name*。"

#: ../../c-api/datetime.rst:195
msgid ""
"Macros to extract fields from date objects.  The argument must be an "
"instance of :c:type:`PyDateTime_Date`, including subclasses (such as :c:type:"
"`PyDateTime_DateTime`).  The argument must not be ``NULL``, and the type is "
"not checked:"
msgstr ""
"從 date 物件中提取欄位的巨集。引數必須是個 :c:type:`PyDateTime_Date` 的實例，"
"包括子類別（例如 :c:type:`PyDateTime_DateTime`）。引數不得為 ``NULL``，並且不"
"會檢查型別："

#: ../../c-api/datetime.rst:202
msgid "Return the year, as a positive int."
msgstr "回傳年份，為正整數。"

#: ../../c-api/datetime.rst:207
msgid "Return the month, as an int from 1 through 12."
msgstr "回傳月份，為正整數，從 1 到 12。"

#: ../../c-api/datetime.rst:212
msgid "Return the day, as an int from 1 through 31."
msgstr "回傳日期，為正整數，從 1 到 31。"

#: ../../c-api/datetime.rst:215
msgid ""
"Macros to extract fields from datetime objects.  The argument must be an "
"instance of :c:type:`PyDateTime_DateTime`, including subclasses. The "
"argument must not be ``NULL``, and the type is not checked:"
msgstr ""
"從 datetime 物件中提取欄位的巨集。引數必須是個 :c:type:`PyDateTime_DateTime` "
"的實例，包括子類別。引數不得為 ``NULL``，並且不會檢查型別："

#: ../../c-api/datetime.rst:221 ../../c-api/datetime.rst:259
msgid "Return the hour, as an int from 0 through 23."
msgstr "回傳小時，為正整數，從 0 到 23。"

#: ../../c-api/datetime.rst:226 ../../c-api/datetime.rst:264
msgid "Return the minute, as an int from 0 through 59."
msgstr "回傳分鐘，為正整數，從 0 到 59。"

#: ../../c-api/datetime.rst:231 ../../c-api/datetime.rst:269
msgid "Return the second, as an int from 0 through 59."
msgstr "回傳秒，為正整數，從0 到59。"

#: ../../c-api/datetime.rst:236 ../../c-api/datetime.rst:274
msgid "Return the microsecond, as an int from 0 through 999999."
msgstr "回傳微秒，為正整數，從 0 到 999999。"

#: ../../c-api/datetime.rst:241 ../../c-api/datetime.rst:279
msgid "Return the fold, as an int from 0 through 1."
msgstr "回傳 fold，為 0 或 1 的正整數。"

#: ../../c-api/datetime.rst:248 ../../c-api/datetime.rst:286
msgid "Return the tzinfo (which may be ``None``)."
msgstr "回傳 tzinfo（可能是 ``None``）。"

#: ../../c-api/datetime.rst:253
msgid ""
"Macros to extract fields from time objects.  The argument must be an "
"instance of :c:type:`PyDateTime_Time`, including subclasses. The argument "
"must not be ``NULL``, and the type is not checked:"
msgstr ""
"從 time 物件中提取欄位的巨集。引數必須是個 :c:type:`PyDateTime_Time` 的實例，"
"包括子類別。引數不得為 ``NULL``，並且不會檢查型別："

#: ../../c-api/datetime.rst:291
msgid ""
"Macros to extract fields from time delta objects.  The argument must be an "
"instance of :c:type:`PyDateTime_Delta`, including subclasses. The argument "
"must not be ``NULL``, and the type is not checked:"
msgstr ""
"從 time delta 物件中提取欄位的巨集。引數必須是個 :c:type:`PyDateTime_Delta` "
"的實例，包括子類別。引數不能為 ``NULL``，並且不會檢查型別："

#: ../../c-api/datetime.rst:297
msgid "Return the number of days, as an int from -999999999 to 999999999."
msgstr "以 -999999999 到 999999999 之間的整數形式回傳天數。"

#: ../../c-api/datetime.rst:304
msgid "Return the number of seconds, as an int from 0 through 86399."
msgstr "以 0 到 86399 之間的整數形式回傳秒數。"

#: ../../c-api/datetime.rst:311
msgid "Return the number of microseconds, as an int from 0 through 999999."
msgstr "以 0 到 999999 之間的整數形式回傳微秒數。"

#: ../../c-api/datetime.rst:316
msgid "Macros for the convenience of modules implementing the DB API:"
msgstr "為了方便模組實作 DB API 的巨集："

#: ../../c-api/datetime.rst:320
msgid ""
"Create and return a new :class:`datetime.datetime` object given an argument "
"tuple suitable for passing to :meth:`datetime.datetime.fromtimestamp`."
msgstr ""
"給定一個適合傳遞給 :meth:`datetime.datetime.fromtimestamp` 的引數元組，建立並"
"回傳一個新的 :class:`datetime.datetime` 物件。"

#: ../../c-api/datetime.rst:326
msgid ""
"Create and return a new :class:`datetime.date` object given an argument "
"tuple suitable for passing to :meth:`datetime.date.fromtimestamp`."
msgstr ""
"給定一個適合傳遞給 :meth:`datetime.date.fromtimestamp` 的引數元組，建立並回傳"
"一個新的 :class:`datetime.date` 物件。"
