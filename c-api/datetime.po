# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2021, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
# Ching-Lung Chuang, 2015
# Liang-Bo Wang <me@liang2.tw>, 2015
msgid ""
msgstr ""
"Project-Id-Version: Python 3.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-10-26 16:47+0000\n"
"PO-Revision-Date: 2017-09-22 18:26+0000\n"
"Last-Translator: Liang-Bo Wang <me@liang2.tw>\n"
"Language-Team: Chinese - TAIWAN (https://github.com/python/python-docs-zh-"
"tw)\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../c-api/datetime.rst:6
msgid "DateTime Objects"
msgstr "DateTime 物件"

#: ../../c-api/datetime.rst:8
msgid ""
"Various date and time objects are supplied by the :mod:`datetime` module. "
"Before using any of these functions, the header file :file:`datetime.h` must "
"be included in your source (note that this is not included by :file:`Python."
"h`), and the macro :c:macro:`PyDateTime_IMPORT` must be invoked, usually as "
"part of the module initialisation function.  The macro puts a pointer to a C "
"structure into a static variable, :c:data:`PyDateTimeAPI`, that is used by "
"the following macros."
msgstr ""

#: ../../c-api/datetime.rst:16
msgid "Macro for access to the UTC singleton:"
msgstr ""

#: ../../c-api/datetime.rst:20
msgid ""
"Returns the time zone singleton representing UTC, the same object as :attr:"
"`datetime.timezone.utc`."
msgstr ""

#: ../../c-api/datetime.rst:26
msgid "Type-check macros:"
msgstr ""

#: ../../c-api/datetime.rst:30
msgid ""
"Return true if *ob* is of type :c:data:`PyDateTime_DateType` or a subtype "
"of :c:data:`PyDateTime_DateType`.  *ob* must not be ``NULL``.  This function "
"always succeeds."
msgstr ""

#: ../../c-api/datetime.rst:37
msgid ""
"Return true if *ob* is of type :c:data:`PyDateTime_DateType`. *ob* must not "
"be ``NULL``.  This function always succeeds."
msgstr ""

#: ../../c-api/datetime.rst:43
msgid ""
"Return true if *ob* is of type :c:data:`PyDateTime_DateTimeType` or a "
"subtype of :c:data:`PyDateTime_DateTimeType`.  *ob* must not be ``NULL``.  "
"This function always succeeds."
msgstr ""

#: ../../c-api/datetime.rst:50
msgid ""
"Return true if *ob* is of type :c:data:`PyDateTime_DateTimeType`. *ob* must "
"not be ``NULL``.  This function always succeeds."
msgstr ""

#: ../../c-api/datetime.rst:56
msgid ""
"Return true if *ob* is of type :c:data:`PyDateTime_TimeType` or a subtype "
"of :c:data:`PyDateTime_TimeType`.  *ob* must not be ``NULL``.  This function "
"always succeeds."
msgstr ""

#: ../../c-api/datetime.rst:63
msgid ""
"Return true if *ob* is of type :c:data:`PyDateTime_TimeType`. *ob* must not "
"be ``NULL``.  This function always succeeds."
msgstr ""

#: ../../c-api/datetime.rst:69
msgid ""
"Return true if *ob* is of type :c:data:`PyDateTime_DeltaType` or a subtype "
"of :c:data:`PyDateTime_DeltaType`.  *ob* must not be ``NULL``.  This "
"function always succeeds."
msgstr ""

#: ../../c-api/datetime.rst:76
msgid ""
"Return true if *ob* is of type :c:data:`PyDateTime_DeltaType`. *ob* must not "
"be ``NULL``.  This function always succeeds."
msgstr ""

#: ../../c-api/datetime.rst:82
msgid ""
"Return true if *ob* is of type :c:data:`PyDateTime_TZInfoType` or a subtype "
"of :c:data:`PyDateTime_TZInfoType`.  *ob* must not be ``NULL``.  This "
"function always succeeds."
msgstr ""

#: ../../c-api/datetime.rst:89
msgid ""
"Return true if *ob* is of type :c:data:`PyDateTime_TZInfoType`. *ob* must "
"not be ``NULL``.  This function always succeeds."
msgstr ""

#: ../../c-api/datetime.rst:93
msgid "Macros to create objects:"
msgstr ""

#: ../../c-api/datetime.rst:97
#, fuzzy
msgid ""
"Return a :class:`datetime.date` object with the specified year, month and "
"day."
msgstr "回傳一個具體的年、月、日物件 ``datetime.date``\\ 。"

#: ../../c-api/datetime.rst:102
#, fuzzy
msgid ""
"Return a :class:`datetime.datetime` object with the specified year, month, "
"day, hour, minute, second and microsecond."
msgstr "回傳一個具體的年、月、日物件 ``datetime.date``\\ 。"

#: ../../c-api/datetime.rst:108
#, fuzzy
msgid ""
"Return a :class:`datetime.datetime` object with the specified year, month, "
"day, hour, minute, second, microsecond and fold."
msgstr "回傳一個具體的年、月、日物件 ``datetime.date``\\ 。"

#: ../../c-api/datetime.rst:116
#, fuzzy
msgid ""
"Return a :class:`datetime.time` object with the specified hour, minute, "
"second and microsecond."
msgstr "回傳一個具體的年、月、日物件 ``datetime.date``\\ 。"

#: ../../c-api/datetime.rst:122
#, fuzzy
msgid ""
"Return a :class:`datetime.time` object with the specified hour, minute, "
"second, microsecond and fold."
msgstr "回傳一個具體的年、月、日物件 ``datetime.date``\\ 。"

#: ../../c-api/datetime.rst:130
msgid ""
"Return a :class:`datetime.timedelta` object representing the given number of "
"days, seconds and microseconds.  Normalization is performed so that the "
"resulting number of microseconds and seconds lie in the ranges documented "
"for :class:`datetime.timedelta` objects."
msgstr ""

#: ../../c-api/datetime.rst:137
msgid ""
"Return a :class:`datetime.timezone` object with an unnamed fixed offset "
"represented by the *offset* argument."
msgstr ""

#: ../../c-api/datetime.rst:144
msgid ""
"Return a :class:`datetime.timezone` object with a fixed offset represented "
"by the *offset* argument and with tzname *name*."
msgstr ""

#: ../../c-api/datetime.rst:150
msgid ""
"Macros to extract fields from date objects.  The argument must be an "
"instance of :c:data:`PyDateTime_Date`, including subclasses (such as :c:data:"
"`PyDateTime_DateTime`).  The argument must not be ``NULL``, and the type is "
"not checked:"
msgstr ""

#: ../../c-api/datetime.rst:157
msgid "Return the year, as a positive int."
msgstr "回傳年份，為正整數。"

#: ../../c-api/datetime.rst:162
msgid "Return the month, as an int from 1 through 12."
msgstr "回傳月份，為正整數，從 1 到 12。"

#: ../../c-api/datetime.rst:167
msgid "Return the day, as an int from 1 through 31."
msgstr "回傳日期，為正整數，從 1 到 31。"

#: ../../c-api/datetime.rst:170
msgid ""
"Macros to extract fields from datetime objects.  The argument must be an "
"instance of :c:data:`PyDateTime_DateTime`, including subclasses. The "
"argument must not be ``NULL``, and the type is not checked:"
msgstr ""

#: ../../c-api/datetime.rst:176 ../../c-api/datetime.rst:205
msgid "Return the hour, as an int from 0 through 23."
msgstr "回傳小時，為正整數，從 0 到 23。"

#: ../../c-api/datetime.rst:181 ../../c-api/datetime.rst:210
msgid "Return the minute, as an int from 0 through 59."
msgstr "回傳分鐘，為正整數，從 0 到 59。"

#: ../../c-api/datetime.rst:186 ../../c-api/datetime.rst:215
msgid "Return the second, as an int from 0 through 59."
msgstr "回傳秒，為正整數，從0 到59。"

#: ../../c-api/datetime.rst:191 ../../c-api/datetime.rst:220
msgid "Return the microsecond, as an int from 0 through 999999."
msgstr "回傳微秒，為正整數，從 0 到 999999。"

#: ../../c-api/datetime.rst:195 ../../c-api/datetime.rst:224
msgid "Return the tzinfo (which may be ``None``)."
msgstr ""

#: ../../c-api/datetime.rst:199
msgid ""
"Macros to extract fields from time objects.  The argument must be an "
"instance of :c:data:`PyDateTime_Time`, including subclasses. The argument "
"must not be ``NULL``, and the type is not checked:"
msgstr ""

#: ../../c-api/datetime.rst:229
msgid ""
"Macros to extract fields from time delta objects.  The argument must be an "
"instance of :c:data:`PyDateTime_Delta`, including subclasses. The argument "
"must not be ``NULL``, and the type is not checked:"
msgstr ""

#: ../../c-api/datetime.rst:235
msgid "Return the number of days, as an int from -999999999 to 999999999."
msgstr ""

#: ../../c-api/datetime.rst:242
msgid "Return the number of seconds, as an int from 0 through 86399."
msgstr ""

#: ../../c-api/datetime.rst:249
msgid "Return the number of microseconds, as an int from 0 through 999999."
msgstr ""

#: ../../c-api/datetime.rst:254
msgid "Macros for the convenience of modules implementing the DB API:"
msgstr ""

#: ../../c-api/datetime.rst:258
msgid ""
"Create and return a new :class:`datetime.datetime` object given an argument "
"tuple suitable for passing to :meth:`datetime.datetime.fromtimestamp()`."
msgstr ""

#: ../../c-api/datetime.rst:264
msgid ""
"Create and return a new :class:`datetime.date` object given an argument "
"tuple suitable for passing to :meth:`datetime.date.fromtimestamp()`."
msgstr ""
