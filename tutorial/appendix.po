# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2018, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
# Leon H., 2017
msgid ""
msgstr ""
"Project-Id-Version: Python 3.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-06-26 18:54+0800\n"
"PO-Revision-Date: 2021-06-24 17:59+0800\n"
"Last-Translator: Leon H.\n"
"Language-Team: Chinese - TAIWAN (https://github.com/python/python-docs-zh-"
"tw)\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Poedit 3.0\n"

#: ../../tutorial/appendix.rst:5
msgid "Appendix"
msgstr "附錄"

#: ../../tutorial/appendix.rst:11
msgid "Interactive Mode"
msgstr "互動模式"

#: ../../tutorial/appendix.rst:16
msgid "Error Handling"
msgstr "錯誤處理"

#: ../../tutorial/appendix.rst:18
msgid ""
"When an error occurs, the interpreter prints an error message and a stack "
"trace. In interactive mode, it then returns to the primary prompt; when "
"input came from a file, it exits with a nonzero exit status after printing "
"the stack trace. (Exceptions handled by an :keyword:`except` clause in a :"
"keyword:`try` statement are not errors in this context.)  Some errors are "
"unconditionally fatal and cause an exit with a nonzero exit; this applies to "
"internal inconsistencies and some cases of running out of memory.  All error "
"messages are written to the standard error stream; normal output from "
"executed commands is written to standard output."
msgstr ""
"當一個錯誤發生時，直譯器會打印一個錯誤信息和堆棧跟踪。在交互式模式下，它將返"
"回主提示符；當輸入來自文件時，它在打印堆棧跟踪後以非零退出狀態退出。 (由\\ :"
"keyword:`except`\\ 子句在 \\ :keyword:`try`\\  語句中處理的異常在這種情況下不"
"是錯誤。) 有些錯誤是無條件致命的，會導致非零退出；這適用於內部不一致和一些內"
"存耗盡的情況。所有的錯誤信息都被寫入標準錯誤流；被執行命令的正常輸出被寫入標"
"準輸出。"

#: ../../tutorial/appendix.rst:28
msgid ""
"Typing the interrupt character (usually :kbd:`Control-C` or :kbd:`Delete`) "
"to the primary or secondary prompt cancels the input and returns to the "
"primary prompt. [#]_ Typing an interrupt while a command is executing raises "
"the :exc:`KeyboardInterrupt` exception, which may be handled by a :keyword:"
"`try` statement."
msgstr ""
"向主提示符或副提示符輸入中斷字符（通常是\\ :kbd:`Control-C`\\ 或\\ :kbd:"
"`Delete`\\ ）會取消輸入並返回到主提示符。 [#]_ 在命令執行過程中輸入一個中斷，"
"會引發\\ :ex:`KeyboardInterrupt`\\ 異常，但可以通過\\ :keyword:`try`\\ 語句來"
"處理。"

#: ../../tutorial/appendix.rst:38
msgid "Executable Python Scripts"
msgstr "可執行的 Python 腳本"

#: ../../tutorial/appendix.rst:40
msgid ""
"On BSD'ish Unix systems, Python scripts can be made directly executable, "
"like shell scripts, by putting the line ::"
msgstr ""
"在 BSD’ish Unix 系統上，Python 腳本可以直接執行，就像 shell 腳本一樣，通過放"
"置以下行：\n"
"\n"
"::"

#: ../../tutorial/appendix.rst:45
msgid ""
"(assuming that the interpreter is on the user's :envvar:`PATH`) at the "
"beginning of the script and giving the file an executable mode.  The ``#!`` "
"must be the first two characters of the file.  On some platforms, this first "
"line must end with a Unix-style line ending (``'\\n'``), not a Windows "
"(``'\\r\\n'``) line ending.  Note that the hash, or pound, character, "
"``'#'``, is used to start a comment in Python."
msgstr ""
"（假設直譯器在用戶的 \\ :envvar:`PATH`\\  上）在腳本的開頭並給文件一個可執行"
"模式。 ``#!`` 必須是文件的前兩個字符。 在某些平台上，第一行必須以 Unix 樣式的"
"行結尾 (``’\\n’``) 結尾，而不是 Windows (``’\\r\\n’``) 行結尾。 請注意，井"
"號“‘#”用於在 Python 中開始註釋。"

#: ../../tutorial/appendix.rst:52
msgid ""
"The script can be given an executable mode, or permission, using the :"
"program:`chmod` command."
msgstr "可以使用\\ :program:`chmod`\\  命令為腳本賦予可執行模式或權限。"

#: ../../tutorial/appendix.rst:59
msgid ""
"On Windows systems, there is no notion of an \"executable mode\".  The "
"Python installer automatically associates ``.py`` files with ``python.exe`` "
"so that a double-click on a Python file will run it as a script.  The "
"extension can also be ``.pyw``, in that case, the console window that "
"normally appears is suppressed."
msgstr ""
"在Windows系統上，沒有「可執行模式」的概念。 Python安裝程序會自動將``.py``文件"
"與``python.exe``聯繫起來，這樣雙擊Python文件就會作為腳本運行。擴展名也可以是"
"`.pyw``，在這種情況下，通常出現的控制台窗口會被抑制了。"

#: ../../tutorial/appendix.rst:69
msgid "The Interactive Startup File"
msgstr "交互式啟動文件"

#: ../../tutorial/appendix.rst:71
msgid ""
"When you use Python interactively, it is frequently handy to have some "
"standard commands executed every time the interpreter is started.  You can "
"do this by setting an environment variable named :envvar:`PYTHONSTARTUP` to "
"the name of a file containing your start-up commands.  This is similar to "
"the :file:`.profile` feature of the Unix shells."
msgstr ""
"當你交互式地使用 Python 時，每次啟動解釋器時執行一些標準命令是非常方便的。你"
"可以通過設置一個名為\\ :envvar:`PYTHONSTARTUP`\\  的環境變量來實現，該變量是"
"一個包含啟動命令的文件名。這類似於Unix shells的\\ :file:`.profile`\\ 功能。"

#: ../../tutorial/appendix.rst:77
msgid ""
"This file is only read in interactive sessions, not when Python reads "
"commands from a script, and not when :file:`/dev/tty` is given as the "
"explicit source of commands (which otherwise behaves like an interactive "
"session).  It is executed in the same namespace where interactive commands "
"are executed, so that objects that it defines or imports can be used without "
"qualification in the interactive session. You can also change the prompts "
"``sys.ps1`` and ``sys.ps2`` in this file."
msgstr ""
"這個文件只在交互式會話中被讀取，而不是當Python 從腳本中讀取命令時，也不是當"
"\\ :file:`/dev/tty`\\ 被作為命令的明確來源時(否則表現得像一個交互式會話)。它"
"在執行交互式命令的同一命名空間中執行，因此它所定義或導入的對象可以在交互式會"
"話中不加限定地使用。你也可以在這個文件中改變``sys.ps1``和``sys.ps2``的提示。"

#: ../../tutorial/appendix.rst:85
msgid ""
"If you want to read an additional start-up file from the current directory, "
"you can program this in the global start-up file using code like ``if os."
"path.isfile('.pythonrc.py'): exec(open('.pythonrc.py').read())``. If you "
"want to use the startup file in a script, you must do this explicitly in the "
"script::"
msgstr ""
"如果你想從當前目錄中讀取一個額外的啟動文件，你可以在全局啟動文件中使用類似"
"``if os.path.isfile(‘.pythonrc.py’): exec(open(‘.pythonrc.py ‘).read()``的代"
"碼進行編程。如果你想在一個腳本中使用啟動文件，你必須在腳本中明確地這樣做：\n"
"\n"
"::"

#: ../../tutorial/appendix.rst:102
msgid "The Customization Modules"
msgstr "自定義模組"

#: ../../tutorial/appendix.rst:104
msgid ""
"Python provides two hooks to let you customize it: :mod:`sitecustomize` and :"
"mod:`usercustomize`.  To see how it works, you need first to find the "
"location of your user site-packages directory.  Start Python and run this "
"code::"
msgstr ""
"Python提供了兩個鉤子（Hooks）讓你自定義： \\ :mod:`sitecustomize`\\  和 \\ :"
"mod:`usercustomize`\\ 。要看它是如何工作的，你首先需要找到你的 site-packages "
"的位置。啟動Python並運行這段代碼：\n"
"\n"
"::"

#: ../../tutorial/appendix.rst:112
msgid ""
"Now you can create a file named :file:`usercustomize.py` in that directory "
"and put anything you want in it.  It will affect every invocation of Python, "
"unless it is started with the :option:`-s` option to disable the automatic "
"import."
msgstr ""
"現在，您可以在該目錄中創建一個名為 \\ :file:`usercustomize.py`\\  的文件，並"
"將您想要的任何內容放入其中。 它會影響 Python 的每次調用，除非它以 \\ :option:"
"`-s`\\ 選項啟動以禁用自動導入。"

#: ../../tutorial/appendix.rst:116
msgid ""
":mod:`sitecustomize` works in the same way, but is typically created by an "
"administrator of the computer in the global site-packages directory, and is "
"imported before :mod:`usercustomize`.  See the documentation of the :mod:"
"`site` module for more details."
msgstr ""
"\\ :mod:`sitecustomize`\\ 的工作方式相同，但通常是由計算機的管理員在全局 "
"site-packages目錄下創建，並在\\ :mod:`usercustomize`\\ 之前導入。更多細節請參"
"閱\\ :mod:`site`\\ 模塊的文檔。"

#: ../../tutorial/appendix.rst:123
msgid "Footnotes"
msgstr "註解"

#: ../../tutorial/appendix.rst:124
msgid "A problem with the GNU Readline package may prevent this."
msgstr "GNU Readline軟件包的一個問題可能會阻止這一點。"
