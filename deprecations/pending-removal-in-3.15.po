# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2024, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3.13\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-09-24 07:20+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../deprecations/pending-removal-in-3.15.rst:2
msgid "Pending Removal in Python 3.15"
msgstr "Python 3.15 中待移除的項目"

#: ../../deprecations/pending-removal-in-3.15.rst:4
msgid ":mod:`ctypes`:"
msgstr ""

#: ../../deprecations/pending-removal-in-3.15.rst:6
msgid ""
"The undocumented :func:`!ctypes.SetPointerType` function has been deprecated "
"since Python 3.13."
msgstr ""

#: ../../deprecations/pending-removal-in-3.15.rst:9
msgid ":mod:`http.server`:"
msgstr ""

#: ../../deprecations/pending-removal-in-3.15.rst:11
#, fuzzy
msgid ""
"The obsolete and rarely used :class:`~http.server.CGIHTTPRequestHandler` has "
"been deprecated since Python 3.13. No direct replacement exists. *Anything* "
"is better than CGI to interface a web server with a request handler."
msgstr ""
":class:`http.server.CGIHTTPRequestHandler` 將會被移除，連同其相關的 ``--"
"cgi`` 旗標到 ``python -m http.server``。它已經過時且很少被使用。沒有直接的替"
"代方案。*任何東西*\\ 都比 CGI 更好的來介接一個帶有請求處理器的網頁伺服器。"

#: ../../deprecations/pending-removal-in-3.15.rst:17
msgid ""
"The :option:`!--cgi` flag to the :program:`python -m http.server` command-"
"line interface has been deprecated since Python 3.13."
msgstr ""

#: ../../deprecations/pending-removal-in-3.15.rst:20
#, fuzzy
msgid ":class:`locale`:"
msgstr ":class:`typing.NamedTuple`："

#: ../../deprecations/pending-removal-in-3.15.rst:22
#, fuzzy
msgid ""
"The :func:`~locale.getdefaultlocale` function has been deprecated since "
"Python 3.11. Its removal was originally planned for Python 3.13 (:gh:"
"`90817`), but has been postponed to Python 3.15. Use :func:`~locale."
"getlocale`, :func:`~locale.setlocale`, and :func:`~locale.getencoding` "
"instead. (Contributed by Hugo van Kemenade in :gh:`111187`.)"
msgstr ""
":class:`locale`：:func:`locale.getdefaultlocale` 已在 Python 3.11 中被棄用，"
"原本計劃在 Python 3.13 中移除 (:gh:`90817`)，但被延後至 Python 3.15。請改用 :"
"func:`locale.setlocale`、:func:`locale.getencoding` 和 :func:`locale."
"getlocale`。 (由 Hugo van Kemenade 於 :gh:`111187` 貢獻。)"

#: ../../deprecations/pending-removal-in-3.15.rst:30
msgid ":mod:`pathlib`:"
msgstr ""

#: ../../deprecations/pending-removal-in-3.15.rst:32
#, fuzzy
msgid ""
":meth:`.PurePath.is_reserved` has been deprecated since Python 3.13. Use :"
"func:`os.path.isreserved` to detect reserved paths on Windows."
msgstr ""
":mod:`pathlib`：:meth:`pathlib.PurePath.is_reserved` 已被棄用並計劃在 Python "
"3.15 中移除。請用 :func:`os.path.isreserved` 來偵測 Windows 上的保留路徑。"

#: ../../deprecations/pending-removal-in-3.15.rst:36
msgid ":mod:`platform`:"
msgstr ""

#: ../../deprecations/pending-removal-in-3.15.rst:38
msgid ""
":func:`~platform.java_ver` has been deprecated since Python 3.13. This "
"function is only useful for Jython support, has a confusing API, and is "
"largely untested."
msgstr ""

#: ../../deprecations/pending-removal-in-3.15.rst:42
msgid ":mod:`threading`:"
msgstr ""

#: ../../deprecations/pending-removal-in-3.15.rst:44
msgid ""
":func:`~threading.RLock` will take no arguments in Python 3.15. Passing any "
"arguments has been deprecated since Python 3.14, as the  Python version does "
"not permit any arguments, but the C version allows any number of positional "
"or keyword arguments, ignoring every argument."
msgstr ""

#: ../../deprecations/pending-removal-in-3.15.rst:50
msgid ":mod:`typing`:"
msgstr ""

#: ../../deprecations/pending-removal-in-3.15.rst:52
#, fuzzy
msgid ""
"The undocumented keyword argument syntax for creating :class:`~typing."
"NamedTuple` classes (e.g. ``Point = NamedTuple(\"Point\", x=int, y=int)``) "
"has been deprecated since Python 3.13. Use the class-based syntax or the "
"functional syntax instead."
msgstr ""
"用於建立 :class:`!NamedTuple` 類別的未以文件記錄之關鍵字引數語法 (``NT = "
"NamedTuple(\"NT\", x=int)``) 已棄用，並將在 3.15 中被禁止。請改用基於類別的語"
"法或函式語法 (functional syntax)。"

#: ../../deprecations/pending-removal-in-3.15.rst:58
msgid ""
"The :func:`typing.no_type_check_decorator` decorator function has been "
"deprecated since Python 3.13. After eight years in the :mod:`typing` module, "
"it has yet to be supported by any major type checker."
msgstr ""

#: ../../deprecations/pending-removal-in-3.15.rst:63
msgid ":mod:`wave`:"
msgstr ""

#: ../../deprecations/pending-removal-in-3.15.rst:65
#, fuzzy
msgid ""
"The :meth:`~wave.Wave_read.getmark`, :meth:`!setmark`, and :meth:`~wave."
"Wave_read.getmarkers` methods of the :class:`~wave.Wave_read` and :class:"
"`~wave.Wave_write` classes have been deprecated since Python 3.13."
msgstr ""
":mod:`wave`：已棄用 :class:`wave.Wave_read` 和 :class:`wave.Wave_write` 類別"
"的 ``getmark()``、``setmark()`` 和 ``getmarkers()`` 方法。它們將在 Python "
"3.15 中被移除。 (由 Victor Stinner 於 :gh:`105096` 貢獻。)"

#~ msgid ""
#~ ":mod:`platform`: :func:`~platform.java_ver` is deprecated and will be "
#~ "removed in 3.15. It was largely untested, had a confusing API, and was "
#~ "only useful for Jython support. (Contributed by Nikita Sobolev in :gh:"
#~ "`116349`.)"
#~ msgstr ""
#~ ":mod:`platform`：:func:`~platform.java_ver` 已被棄用並將在 3.15 中移除。它"
#~ "幾乎沒有被測試過，API 令人困惑並且只對 Jython 支援有用。 (由 Nikita "
#~ "Sobolev 於 :gh:`116349` 貢獻。)"

#~ msgid ""
#~ ":mod:`threading`: Passing any arguments to :func:`threading.RLock` is now "
#~ "deprecated. C version allows any numbers of args and kwargs, but they are "
#~ "just ignored. Python version does not allow any arguments. All arguments "
#~ "will be removed from :func:`threading.RLock` in Python 3.15. (Contributed "
#~ "by Nikita Sobolev in :gh:`102029`.)"
#~ msgstr ""
#~ ":mod:`threading`：對 :func:`threading.RLock` 傳遞任何引數現在已被棄用。C "
#~ "版本允許任意數量的引數和關鍵字引數，但它們會被忽略。Python 版本不允許任何"
#~ "引數。所有引數將在 Python 3.15 中從 :func:`threading.RLock` 中移除。 (由 "
#~ "Nikita Sobolev 於 :gh:`102029` 貢獻。)"

#~ msgid ""
#~ "When using the functional syntax to create a :class:`!NamedTuple` class, "
#~ "failing to pass a value to the *fields* parameter (``NT = "
#~ "NamedTuple(\"NT\")``) is deprecated. Passing ``None`` to the *fields* "
#~ "parameter (``NT = NamedTuple(\"NT\", None)``) is also deprecated. Both "
#~ "will be disallowed in Python 3.15. To create a :class:`!NamedTuple` class "
#~ "with 0 fields, use ``class NT(NamedTuple): pass`` or ``NT = "
#~ "NamedTuple(\"NT\", [])``."
#~ msgstr ""
#~ "當使用函式語法來建立 :class:`!NamedTuple` 類別時，沒將值傳遞給 *fields* 參"
#~ "數的方式 (``NT = NamedTuple(\"NT\")``) 已被棄用，將 ``None`` 傳遞給 "
#~ "*fields* 參數（``NT = NamedTuple(\"NT\", None)``）也已被棄用。這兩者將在 "
#~ "Python 3.15 中會被禁止。要建立一個沒有欄位的 :class:`!NamedTuple` 類別，請"
#~ "使用 ``class NT(NamedTuple): pass`` 或 ``NT = NamedTuple(\"NT\", [])``。"

#~ msgid ""
#~ ":class:`typing.TypedDict`: When using the functional syntax to create a :"
#~ "class:`!TypedDict` class, failing to pass a value to the *fields* "
#~ "parameter (``TD = TypedDict(\"TD\")``) is deprecated. Passing ``None`` to "
#~ "the *fields* parameter (``TD = TypedDict(\"TD\", None)``) is also "
#~ "deprecated. Both will be disallowed in Python 3.15. To create a :class:`!"
#~ "TypedDict` class with 0 fields, use ``class TD(TypedDict): pass`` or ``TD "
#~ "= TypedDict(\"TD\", {})``."
#~ msgstr ""
#~ ":class:`typing.TypedDict`：當使用函式語法來建立 :class:`!TypedDict` 類別"
#~ "時，沒將值傳遞給 *fields* 參數的方式（``TD = TypedDict(\"TD\")``）已被棄"
#~ "用，將 ``None`` 傳遞給 *fields* 參數（``TD = TypedDict(\"TD\", None)``）也"
#~ "已被棄用。這兩者將在 Python 3.15 中會被禁止。要建立一個沒有欄位的 :class:"
#~ "`!TypedDict` 類別，請使用 ``class TD(TypedDict): pass`` 或 ``TD = "
#~ "TypedDict(\"TD\", {})``。"
