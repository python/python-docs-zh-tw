# Copyright (C) 2001-2024, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3.13\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-10-15 00:14+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../deprecations/pending-removal-in-3.14.rst:2
msgid "Pending Removal in Python 3.14"
msgstr "Python 3.14 中待移除的項目"

#: ../../deprecations/pending-removal-in-3.14.rst:4
msgid "The import system:"
msgstr "引入系統 (import system)："

#: ../../deprecations/pending-removal-in-3.14.rst:6
msgid ""
"Setting :attr:`~module.__loader__` on a module while failing to set :attr:"
"`__spec__.loader <importlib.machinery.ModuleSpec.loader>` is deprecated. In "
"Python 3.14, :attr:`!__loader__` will cease to be set or taken into "
"consideration by the import system or the standard library."
msgstr ""
"在模組上設定 :attr:`~module.__loader__` 而沒有設定 :attr:`__spec__.loader "
"<importlib.machinery.ModuleSpec.loader>` 的做法已被棄用。在 Python 3.14 中，"
"引入系統或標準函式庫將不再設定或考慮 :attr:`!__loader__` 。"

#: ../../deprecations/pending-removal-in-3.14.rst:11
msgid ""
":mod:`argparse`: The *type*, *choices*, and *metavar* parameters of :class:`!"
"argparse.BooleanOptionalAction` are deprecated and will be removed in 3.14. "
"(Contributed by Nikita Sobolev in :gh:`92248`.)"
msgstr ""
":mod:`argparse`：:class:`!argparse.BooleanOptionalAction` 的 *type*、"
"*choices* 和 *metavar* 參數已被棄用，將在 3.14 中移除。 (由 Nikita Sobolev "
"於 :gh:`92248` 貢獻。)"

#: ../../deprecations/pending-removal-in-3.14.rst:16
msgid ""
":mod:`ast`: The following features have been deprecated in documentation "
"since Python 3.8, now cause a :exc:`DeprecationWarning` to be emitted at "
"runtime when they are accessed or used, and will be removed in Python 3.14:"
msgstr ""
":mod:`ast`：自 Python 3.8 起，下列功能已在文件中被棄用，現在在存取或使用時會"
"於 runtime 發出 :exc:`DeprecationWarning`，並將在 Python 3.14 中移除："

#: ../../deprecations/pending-removal-in-3.14.rst:20
msgid ":class:`!ast.Num`"
msgstr ":class:`!ast.Num`"

#: ../../deprecations/pending-removal-in-3.14.rst:21
msgid ":class:`!ast.Str`"
msgstr ":class:`!ast.Str`"

#: ../../deprecations/pending-removal-in-3.14.rst:22
msgid ":class:`!ast.Bytes`"
msgstr ":class:`!ast.Bytes`"

#: ../../deprecations/pending-removal-in-3.14.rst:23
msgid ":class:`!ast.NameConstant`"
msgstr ":class:`!ast.NameConstant`"

#: ../../deprecations/pending-removal-in-3.14.rst:24
msgid ":class:`!ast.Ellipsis`"
msgstr ":class:`!ast.Ellipsis`"

#: ../../deprecations/pending-removal-in-3.14.rst:26
msgid ""
"Use :class:`ast.Constant` instead. (Contributed by Serhiy Storchaka in :gh:"
"`90953`.)"
msgstr ""
"請改用 :class:`ast.Constant`。（由 Serhiy Storchaka 於 :gh:`90953` 貢獻。）"

#: ../../deprecations/pending-removal-in-3.14.rst:29
msgid ":mod:`asyncio`:"
msgstr ":mod:`asyncio`："

#: ../../deprecations/pending-removal-in-3.14.rst:31
msgid ""
"The child watcher classes :class:`~asyncio.MultiLoopChildWatcher`, :class:"
"`~asyncio.FastChildWatcher`, :class:`~asyncio.AbstractChildWatcher` and :"
"class:`~asyncio.SafeChildWatcher` are deprecated and will be removed in "
"Python 3.14. (Contributed by Kumar Aditya in :gh:`94597`.)"
msgstr ""
"已棄用並將在 Python 3.14 中移除的 child watcher 類別：:class:`~asyncio."
"MultiLoopChildWatcher`、:class:`~asyncio.FastChildWatcher`、:class:`~asyncio."
"AbstractChildWatcher` 和 :class:`~asyncio.SafeChildWatcher`。 (由 Kumar "
"Aditya 於 :gh:`94597` 貢獻。)"

#: ../../deprecations/pending-removal-in-3.14.rst:37
msgid ""
":func:`asyncio.set_child_watcher`, :func:`asyncio.get_child_watcher`, :meth:"
"`asyncio.AbstractEventLoopPolicy.set_child_watcher` and :meth:`asyncio."
"AbstractEventLoopPolicy.get_child_watcher` are deprecated and will be "
"removed in Python 3.14. (Contributed by Kumar Aditya in :gh:`94597`.)"
msgstr ""
":func:`asyncio.set_child_watcher`、:func:`asyncio.get_child_watcher`、:meth:"
"`asyncio.AbstractEventLoopPolicy.set_child_watcher` 和 :meth:`asyncio."
"AbstractEventLoopPolicy.get_child_watcher` 已被棄用並將在 Python 3.14 中移"
"除。（由 Kumar Aditya 於 :gh:`94597` 貢獻。）"

#: ../../deprecations/pending-removal-in-3.14.rst:43
msgid ""
"The :meth:`~asyncio.get_event_loop` method of the default event loop policy "
"now emits a :exc:`DeprecationWarning` if there is no current event loop set "
"and it decides to create one. (Contributed by Serhiy Storchaka and Guido van "
"Rossum in :gh:`100160`.)"
msgstr ""
"預設事件迴圈策略的 :meth:`~asyncio.get_event_loop` 方法現在會在沒有設定目前事"
"件迴圈且決定建立一個時發出 :exc:`DeprecationWarning`。 (由 Serhiy Storchaka "
"和 Guido van Rossum 於 :gh:`100160` 貢獻。)"

#: ../../deprecations/pending-removal-in-3.14.rst:48
msgid ""
":mod:`collections.abc`: Deprecated :class:`~collections.abc.ByteString`. "
"Prefer :class:`!Sequence` or :class:`~collections.abc.Buffer`. For use in "
"typing, prefer a union, like ``bytes | bytearray``, or :class:`collections."
"abc.Buffer`. (Contributed by Shantanu Jain in :gh:`91896`.)"
msgstr ""
":mod:`collections.abc`：已棄用 :class:`~collections.abc.ByteString`。請改用 :"
"class:`!Sequence` 或 :class:`~collections.abc.Buffer`。在 typing 中使用時，請"
"改用聯集，如 ``bytes | bytearray``，或 :class:`collections.abc.Buffer`。（由 "
"Shantanu Jain 於 :gh:`91896` 貢獻。）"

#: ../../deprecations/pending-removal-in-3.14.rst:54
msgid ""
":mod:`email`: Deprecated the *isdst* parameter in :func:`email.utils."
"localtime`. (Contributed by Alan Williams in :gh:`72346`.)"
msgstr ""
":mod:`email`：已棄用 :func:`email.utils.localtime` 中的 *isdst* 參數。（由 "
"Alan Williams 於 :gh:`72346` 貢獻。）"

#: ../../deprecations/pending-removal-in-3.14.rst:57
msgid ":mod:`importlib.abc` deprecated classes:"
msgstr ":mod:`importlib.abc` 的已棄用類別："

#: ../../deprecations/pending-removal-in-3.14.rst:59
msgid ":class:`!importlib.abc.ResourceReader`"
msgstr ":class:`!importlib.abc.ResourceReader`"

#: ../../deprecations/pending-removal-in-3.14.rst:60
msgid ":class:`!importlib.abc.Traversable`"
msgstr ":class:`!importlib.abc.Traversable`"

#: ../../deprecations/pending-removal-in-3.14.rst:61
msgid ":class:`!importlib.abc.TraversableResources`"
msgstr ":class:`!importlib.abc.TraversableResources`"

#: ../../deprecations/pending-removal-in-3.14.rst:63
msgid "Use :mod:`importlib.resources.abc` classes instead:"
msgstr "請改用 :mod:`importlib.resources.abc` 類別："

#: ../../deprecations/pending-removal-in-3.14.rst:65
msgid ":class:`importlib.resources.abc.Traversable`"
msgstr ":class:`importlib.resources.abc.Traversable`"

#: ../../deprecations/pending-removal-in-3.14.rst:66
msgid ":class:`importlib.resources.abc.TraversableResources`"
msgstr ":class:`importlib.resources.abc.TraversableResources`"

#: ../../deprecations/pending-removal-in-3.14.rst:68
msgid "(Contributed by Jason R. Coombs and Hugo van Kemenade in :gh:`93963`.)"
msgstr "（由 Jason R. Coombs 和 Hugo van Kemenade 貢獻於 :gh:`93963`。）"

#: ../../deprecations/pending-removal-in-3.14.rst:70
msgid ""
":mod:`itertools` had undocumented, inefficient, historically buggy, and "
"inconsistent support for copy, deepcopy, and pickle operations. This will be "
"removed in 3.14 for a significant reduction in code volume and maintenance "
"burden. (Contributed by Raymond Hettinger in :gh:`101588`.)"
msgstr ""
":mod:`itertools` 有不以文件記錄、效率低下、過去常有 bug 且不一致的 copy、"
"deepcopy 和 pickle 操作支援。將在 3.14 中移除以大幅減少程式碼量和維護負擔。 "
"(由 Raymond Hettinger 於 :gh:`101588` 貢獻。)"

#: ../../deprecations/pending-removal-in-3.14.rst:76
msgid ""
":mod:`multiprocessing`: The default start method will change to a safer one "
"on Linux, BSDs, and other non-macOS POSIX platforms where ``'fork'`` is "
"currently the default (:gh:`84559`). Adding a runtime warning about this was "
"deemed too disruptive as the majority of code is not expected to care. Use "
"the :func:`~multiprocessing.get_context` or :func:`~multiprocessing."
"set_start_method` APIs to explicitly specify when your code *requires* "
"``'fork'``.  See :ref:`multiprocessing-start-methods`."
msgstr ""
":mod:`multiprocessing`：預設的啟動方法將在 Linux、BSD 和其他非 macOS POSIX 平"
"台上更改為更安全的 方法，目前 ``'fork'`` 是預設值 (:gh:`84559`)。對此增加一"
"個 runtime 警告被認為太過擾人，因為 大多數程式碼不會在意。請使用 :func:"
"`~multiprocessing.get_context` 或 :func:`~multiprocessing.set_start_method` "
"API 來明確指定你的程式碼何時\\ *需要* ``'fork'``。請參閱 :ref:"
"`multiprocessing-start-methods`。"

#: ../../deprecations/pending-removal-in-3.14.rst:84
msgid ""
":mod:`pathlib`: :meth:`~pathlib.PurePath.is_relative_to` and :meth:`~pathlib."
"PurePath.relative_to`: passing additional arguments is deprecated."
msgstr ""
":mod:`pathlib`：已棄用 :meth:`~pathlib.PurePath.is_relative_to` 和 :meth:"
"`~pathlib.PurePath.relative_to`：額外引數的傳遞已被棄用。"

#: ../../deprecations/pending-removal-in-3.14.rst:88
msgid ""
":mod:`pkgutil`: :func:`~pkgutil.find_loader` and :func:`~pkgutil.get_loader` "
"now raise :exc:`DeprecationWarning`; use :func:`importlib.util.find_spec` "
"instead. (Contributed by Nikita Sobolev in :gh:`97850`.)"
msgstr ""
":mod:`pkgutil`：:func:`~pkgutil.find_loader` 和 :func:`~pkgutil.get_loader` "
"現在會引發 :exc:`DeprecationWarning`；請改用 :func:`importlib.util."
"find_spec`。 (由 Nikita Sobolev 於 :gh:`97850` 貢獻。)"

#: ../../deprecations/pending-removal-in-3.14.rst:93
msgid ":mod:`pty`:"
msgstr ":mod:`pty`："

#: ../../deprecations/pending-removal-in-3.14.rst:95
msgid "``master_open()``: use :func:`pty.openpty`."
msgstr "``master_open()``：請用 :func:`pty.openpty`。"

#: ../../deprecations/pending-removal-in-3.14.rst:96
msgid "``slave_open()``: use :func:`pty.openpty`."
msgstr "``slave_open()``：請用 :func:`pty.openpty`。"

#: ../../deprecations/pending-removal-in-3.14.rst:98
msgid ":mod:`sqlite3`:"
msgstr ":mod:`sqlite3`："

#: ../../deprecations/pending-removal-in-3.14.rst:100
msgid ":data:`~sqlite3.version` and :data:`~sqlite3.version_info`."
msgstr ":data:`~sqlite3.version` 和 :data:`~sqlite3.version_info`。"

#: ../../deprecations/pending-removal-in-3.14.rst:102
msgid ""
":meth:`~sqlite3.Cursor.execute` and :meth:`~sqlite3.Cursor.executemany` if :"
"ref:`named placeholders <sqlite3-placeholders>` are used and *parameters* is "
"a sequence instead of a :class:`dict`."
msgstr ""
":meth:`~sqlite3.Cursor.execute` 和 :meth:`~sqlite3.Cursor.executemany`，如果"
"使用 :ref:`named placeholders <sqlite3-placeholders>` 且 *parameters* 是序列"
"而不是 :class:`dict`。"

#: ../../deprecations/pending-removal-in-3.14.rst:106
msgid ""
"date and datetime adapter, date and timestamp converter: see the :mod:"
"`sqlite3` documentation for suggested replacement recipes."
msgstr ""
"date 和 datetime 的適配器 (adapter)、date 和 timestamp 轉換器 (converter)：請"
"參閱 :mod:`sqlite3` 文件以獲得建議的替代方案。"

#: ../../deprecations/pending-removal-in-3.14.rst:109
msgid ""
":class:`types.CodeType`: Accessing :attr:`~codeobject.co_lnotab` was "
"deprecated in :pep:`626` since 3.10 and was planned to be removed in 3.12, "
"but it only got a proper :exc:`DeprecationWarning` in 3.12. May be removed "
"in 3.14. (Contributed by Nikita Sobolev in :gh:`101866`.)"
msgstr ""
":class:`types.CodeType`：自 3.10 起，存取 :attr:`~codeobject.co_lnotab` 已"
"在 :pep:`626` 中被棄用，並計劃在 3.12 中移除，但只在 3.12 中於適當時發出 :"
"exc:`DeprecationWarning`。可能在 3.14 中移除。（由 Nikita Sobolev 於 :gh:"
"`101866` 貢獻。）"

#: ../../deprecations/pending-removal-in-3.14.rst:116
msgid ""
":mod:`typing`: :class:`~typing.ByteString`, deprecated since Python 3.9, now "
"causes a :exc:`DeprecationWarning` to be emitted when it is used."
msgstr ""
":mod:`typing`：自 Python 3.9 起已被棄用的 :class:`~typing.ByteString` 現在在"
"使用時會發出 :exc:`DeprecationWarning`。"

#: ../../deprecations/pending-removal-in-3.14.rst:119
msgid ""
":mod:`urllib`: :class:`!urllib.parse.Quoter` is deprecated: it was not "
"intended to be a public API. (Contributed by Gregory P. Smith in :gh:"
"`88168`.)"
msgstr ""
":mod:`urllib`：:class:`!urllib.parse.Quoter` 已被棄用：它並非預期的公開 API。"
"(由 Gregory P. Smith 於 :gh:`88168` 貢獻。)"
