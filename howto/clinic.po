# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2022, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: Python 3.12\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-10-13 00:03+0000\n"
"PO-Revision-Date: 2018-05-23 14:36+0000\n"
"Last-Translator: Adrian Liaw <adrianliaw2000@gmail.com>\n"
"Language-Team: Chinese - TAIWAN (https://github.com/python/python-docs-zh-"
"tw)\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../howto/clinic.rst:8
msgid "Argument Clinic How-To"
msgstr ""

#: ../../howto/clinic.rst:13
msgid ""
"The Argument Clinic How-TO has been moved to the `Python Developer's Guide "
"<https://devguide.python.org/development-tools/clinic/>`__."
msgstr ""

#~ msgid "author"
#~ msgstr "作者"

#~ msgid "Larry Hastings"
#~ msgstr "Larry Hastings"

#~ msgid "**Source code:** :source:`Tools/clinic/clinic.py`."
#~ msgstr "**原始碼：** :source:`Tools/clinic/clinic.py`。"

#~ msgid "Abstract"
#~ msgstr "摘要"

#~ msgid "Notes:"
#~ msgstr "註解："

#~ msgid "*c_default*"
#~ msgstr "*c_default*"

#~ msgid "*annotation*"
#~ msgstr "*annotation*"

#~ msgid "*unused*"
#~ msgstr "*unused*"

#~ msgid "*accept*"
#~ msgstr "*accept*"

#~ msgid "*bitwise*"
#~ msgstr "*bitwise*"

#~ msgid "*converter*"
#~ msgstr "*converter*"

#~ msgid "*encoding*"
#~ msgstr "*encoding*"

#~ msgid "*subclass_of*"
#~ msgstr "*subclass_of*"

#~ msgid "*zeroes*"
#~ msgstr "*zeroes*"

#~ msgid "``'B'``"
#~ msgstr "``'B'``"

#~ msgid "``unsigned_char(bitwise=True)``"
#~ msgstr "``unsigned_char(bitwise=True)``"

#~ msgid "``'b'``"
#~ msgstr "``'b'``"

#~ msgid "``unsigned_char``"
#~ msgstr "``unsigned_char``"

#~ msgid "``'c'``"
#~ msgstr "``'c'``"

#~ msgid "``char``"
#~ msgstr "``char``"

#~ msgid "``'C'``"
#~ msgstr "``'C'``"

#~ msgid "``int(accept={str})``"
#~ msgstr "``int(accept={str})``"

#~ msgid "``'d'``"
#~ msgstr "``'d'``"

#~ msgid "``double``"
#~ msgstr "``double``"

#~ msgid "``'D'``"
#~ msgstr "``'D'``"

#~ msgid "``Py_complex``"
#~ msgstr "``Py_complex``"

#~ msgid "``'es'``"
#~ msgstr "``'es'``"

#~ msgid "``str(encoding='name_of_encoding')``"
#~ msgstr "``str(encoding='name_of_encoding')``"

#~ msgid "``'es#'``"
#~ msgstr "``'es#'``"

#~ msgid "``str(encoding='name_of_encoding', zeroes=True)``"
#~ msgstr "``str(encoding='name_of_encoding', zeroes=True)``"

#~ msgid "``'et'``"
#~ msgstr "``'et'``"

#~ msgid "``str(encoding='name_of_encoding', accept={bytes, bytearray, str})``"
#~ msgstr ""
#~ "``str(encoding='name_of_encoding', accept={bytes, bytearray, str})``"

#~ msgid "``'et#'``"
#~ msgstr "``'et#'``"

#~ msgid "``'f'``"
#~ msgstr "``'f'``"

#~ msgid "``float``"
#~ msgstr "``float``"

#~ msgid "``'h'``"
#~ msgstr "``'h'``"

#~ msgid "``short``"
#~ msgstr "``short``"

#~ msgid "``'H'``"
#~ msgstr "``'H'``"

#~ msgid "``unsigned_short(bitwise=True)``"
#~ msgstr "``unsigned_short(bitwise=True)``"

#~ msgid "``'i'``"
#~ msgstr "``'i'``"

#~ msgid "``int``"
#~ msgstr "``int``"

#~ msgid "``'I'``"
#~ msgstr "``'I'``"

#~ msgid "``unsigned_int(bitwise=True)``"
#~ msgstr "``unsigned_int(bitwise=True)``"

#~ msgid "``'k'``"
#~ msgstr "``'k'``"

#~ msgid "``unsigned_long(bitwise=True)``"
#~ msgstr "``unsigned_long(bitwise=True)``"

#~ msgid "``'K'``"
#~ msgstr "``'K'``"

#~ msgid "``unsigned_long_long(bitwise=True)``"
#~ msgstr "``unsigned_long_long(bitwise=True)``"

#~ msgid "``'l'``"
#~ msgstr "``'l'``"

#~ msgid "``long``"
#~ msgstr "``long``"

#~ msgid "``'L'``"
#~ msgstr "``'L'``"

#~ msgid "``long long``"
#~ msgstr "``long long``"

#~ msgid "``'n'``"
#~ msgstr "``'n'``"

#~ msgid "``Py_ssize_t``"
#~ msgstr "``Py_ssize_t``"

#~ msgid "``'O'``"
#~ msgstr "``'O'``"

#~ msgid "``object``"
#~ msgstr "``object``"

#~ msgid "``'O!'``"
#~ msgstr "``'O!'``"

#~ msgid "``object(subclass_of='&PySomething_Type')``"
#~ msgstr "``object(subclass_of='&PySomething_Type')``"

#~ msgid "``'O&'``"
#~ msgstr "``'O&'``"

#~ msgid "``object(converter='name_of_c_function')``"
#~ msgstr "``object(converter='name_of_c_function')``"

#~ msgid "``'p'``"
#~ msgstr "``'p'``"

#~ msgid "``bool``"
#~ msgstr "``bool``"

#~ msgid "``'S'``"
#~ msgstr "``'S'``"

#~ msgid "``PyBytesObject``"
#~ msgstr "``PyBytesObject``"

#~ msgid "``'s'``"
#~ msgstr "``'s'``"

#~ msgid "``str``"
#~ msgstr "``str``"

#~ msgid "``'s#'``"
#~ msgstr "``'s#'``"

#~ msgid "``str(zeroes=True)``"
#~ msgstr "``str(zeroes=True)``"

#~ msgid "``'s*'``"
#~ msgstr "``'s*'``"

#~ msgid "``Py_buffer(accept={buffer, str})``"
#~ msgstr "``Py_buffer(accept={buffer, str})``"

#~ msgid "``'U'``"
#~ msgstr "``'U'``"

#~ msgid "``unicode``"
#~ msgstr "``unicode``"

#~ msgid "``'u'``"
#~ msgstr "``'u'``"

#~ msgid "``wchar_t``"
#~ msgstr "``wchar_t``"

#~ msgid "``'u#'``"
#~ msgstr "``'u#'``"

#~ msgid "``wchar_t(zeroes=True)``"
#~ msgstr "``wchar_t(zeroes=True)``"

#~ msgid "``'w*'``"
#~ msgstr "``'w*'``"

#~ msgid "``Py_buffer(accept={rwbuffer})``"
#~ msgstr "``Py_buffer(accept={rwbuffer})``"

#~ msgid "``'Y'``"
#~ msgstr "``'Y'``"

#~ msgid "``PyByteArrayObject``"
#~ msgstr "``PyByteArrayObject``"

#~ msgid "``'y'``"
#~ msgstr "``'y'``"

#~ msgid "``str(accept={bytes})``"
#~ msgstr "``str(accept={bytes})``"

#~ msgid "``'y#'``"
#~ msgstr "``'y#'``"

#~ msgid "``str(accept={robuffer}, zeroes=True)``"
#~ msgstr "``str(accept={robuffer}, zeroes=True)``"

#~ msgid "``'y*'``"
#~ msgstr "``'y*'``"

#~ msgid "``Py_buffer``"
#~ msgstr "``Py_buffer``"

#~ msgid "``'Z'``"
#~ msgstr "``'Z'``"

#~ msgid "``wchar_t(accept={str, NoneType})``"
#~ msgstr "``wchar_t(accept={str, NoneType})``"

#~ msgid "``'Z#'``"
#~ msgstr "``'Z#'``"

#~ msgid "``wchar_t(accept={str, NoneType}, zeroes=True)``"
#~ msgstr "``wchar_t(accept={str, NoneType}, zeroes=True)``"

#~ msgid "``'z'``"
#~ msgstr "``'z'``"

#~ msgid "``str(accept={str, NoneType})``"
#~ msgstr "``str(accept={str, NoneType})``"

#~ msgid "``'z#'``"
#~ msgstr "``'z#'``"

#~ msgid "``str(accept={str, NoneType}, zeroes=True)``"
#~ msgstr "``str(accept={str, NoneType}, zeroes=True)``"

#~ msgid "``'z*'``"
#~ msgstr "``'z*'``"

#~ msgid "``Py_buffer(accept={buffer, str, NoneType})``"
#~ msgstr "``Py_buffer(accept={buffer, str, NoneType})``"

#~ msgid "``True``, ``False``, and ``None``"
#~ msgstr "``True``、``False`` 和 ``None``"

#~ msgid "See also :pep:`573`."
#~ msgstr "也請見 :pep:`573`\\ 。"

#~ msgid "``block``"
#~ msgstr "``block``"

#~ msgid "``buffer``"
#~ msgstr "``buffer``"

#~ msgid "``file``"
#~ msgstr "``file``"

#~ msgid "``two-pass``"
#~ msgstr "``two-pass``"

#~ msgid "``suppress``"
#~ msgstr "``suppress``"

#~ msgid "``partial-buffer``"
#~ msgstr "``partial-buffer``"

#~ msgid "{path}"
#~ msgstr "{path}"

#~ msgid "{dirname}"
#~ msgstr "{dirname}"

#~ msgid "{basename}"
#~ msgstr "{basename}"

#~ msgid "{basename_root}"
#~ msgstr "{basename_root}"

#~ msgid "{basename_extension}"
#~ msgstr "{basename_extension}"

#~ msgid "``{block comment start}``"
#~ msgstr "``{block comment start}``"

#~ msgid "``{block comment end}``"
#~ msgstr "``{block comment end}``"

#~ msgid "``type``"
#~ msgstr "``type``"

#~ msgid "``default``"
#~ msgstr "``default``"

#~ msgid "``py_default``"
#~ msgstr "``py_default``"

#~ msgid "``c_ignored_default``"
#~ msgstr "``c_ignored_default``"

#~ msgid "``impl_by_reference``"
#~ msgstr "``impl_by_reference``"

#~ msgid "``parse_by_reference``"
#~ msgstr "``parse_by_reference``"

#~ msgid "Py_buffer"
#~ msgstr "Py_buffer"
