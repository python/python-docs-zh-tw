# Copyright (C) 2001-2018, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
# Jeff Huang <s8321414@gmail.com>, 2018.
msgid ""
msgstr ""
"Project-Id-Version: Python 3.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-06-26 18:54+0800\n"
"PO-Revision-Date: 2018-10-13 10:46+0800\n"
"Last-Translator: Jeff Huang <s8321414@gmail.com>\n"
"Language-Team: Chinese <zh-l10n@linux.org.tw>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Lokalize 2.0\n"

#: ../../using/unix.rst:7
msgid "Using Python on Unix platforms"
msgstr "在 Unix 平臺上使用 Python"

#: ../../using/unix.rst:13
msgid "Getting and installing the latest version of Python"
msgstr "取得並安裝最新版本的 Python"

#: ../../using/unix.rst:16
msgid "On Linux"
msgstr "在 Linux 上"

#: ../../using/unix.rst:18
msgid ""
"Python comes preinstalled on most Linux distributions, and is available as a "
"package on all others.  However there are certain features you might want to "
"use that are not available on your distro's package.  You can easily compile "
"the latest version of Python from source."
msgstr ""
"Python 在大多數的 Linux 散佈版上都已預先安裝好了，剩下未預先"
"安裝的版本也多半會以軟體包的型式提供安裝。然而某些您想要使用"
"的功能可能沒有在您的散佈版軟體包中提供。您可以從原始碼很簡單"
"地編譯 Python 的最新版本。"

#: ../../using/unix.rst:23
msgid ""
"In the event that Python doesn't come preinstalled and isn't in the "
"repositories as well, you can easily make packages for your own distro.  "
"Have a look at the following links:"
msgstr ""
"如果 Python 沒有預先安裝，也不在軟體庫中，"
"您可以很簡單地為自己的散佈版建立軟體包。"
"看看下面的連結："

#: ../../using/unix.rst:29
msgid "https://www.debian.org/doc/manuals/maint-guide/first.en.html"
msgstr "https://www.debian.org/doc/manuals/maint-guide/first.zh-tw.html"

#: ../../using/unix.rst:30
msgid "for Debian users"
msgstr "為 Debian 使用者撰寫"

#: ../../using/unix.rst:31
msgid "https://en.opensuse.org/Portal:Packaging"
msgstr "https://zh.opensuse.org/Portal:%E6%89%93%E5%8C%85"

#: ../../using/unix.rst:32
msgid "for OpenSuse users"
msgstr "為 OpenSuse 使用者撰寫"

#: ../../using/unix.rst:33
msgid ""
"https://docs-old.fedoraproject.org/en-US/Fedora_Draft_Documentation/0.1/html/"
"RPM_Guide/ch-creating-rpms.html"
msgstr ""
"https://docs-old.fedoraproject.org/en-US/Fedora_Draft_Documentation/0.1/html/"
"RPM_Guide/ch-creating-rpms.html"

#: ../../using/unix.rst:34
msgid "for Fedora users"
msgstr "為 Fedora 使用者撰寫"

#: ../../using/unix.rst:35
msgid "http://www.slackbook.org/html/package-management-making-packages.html"
msgstr "http://www.slackbook.org/html/package-management-making-packages.html"

#: ../../using/unix.rst:36
msgid "for Slackware users"
msgstr "為 Slackware 使用者撰寫"

#: ../../using/unix.rst:40
msgid "On FreeBSD and OpenBSD"
msgstr "在 FreeBSD 與 OpenBSD 上"

#: ../../using/unix.rst:42
msgid "FreeBSD users, to add the package use::"
msgstr "對 FreeBSD 使用者來說，要新增軟體包請使用："

#: ../../using/unix.rst:46
msgid "OpenBSD users, to add the package use::"
msgstr "對 OpenBSD 使用者來說，要新增軟體包請使用："

#: ../../using/unix.rst:52
msgid "For example i386 users get the 2.5.1 version of Python using::"
msgstr "舉例來說，i386 使用者要取得 2.5.1 版的 Python 請使用："

#: ../../using/unix.rst:58
msgid "On OpenSolaris"
msgstr "在 OpenSolaris 上"

#: ../../using/unix.rst:60
msgid ""
"You can get Python from `OpenCSW <https://www.opencsw.org/>`_.  Various "
"versions of Python are available and can be installed with e.g. ``pkgutil -i "
"python27``."
msgstr ""
"您可以從 `OpenCSW <https://www.opencsw.org/>`_ 取得 Python。"
"Python 的許多版本可以使用 ``pkgutil -i python27`` 進行安裝。"

#: ../../using/unix.rst:67
msgid "Building Python"
msgstr "建構 Python"

#: ../../using/unix.rst:69
msgid ""
"If you want to compile CPython yourself, first thing you should do is get "
"the `source <https://www.python.org/downloads/source/>`_. You can download "
"either the latest release's source or just grab a fresh `clone <https://"
"devguide.python.org/setup/#getting-the-source-code>`_.  (If you want to "
"contribute patches, you will need a clone.)"
msgstr ""
"如果您想要自行編譯 CPython，您所要做的第一件事是取得"
"`原始碼 <https://www.python.org/downloads/source/>`_。您可以下載最新版本的原始碼"
"或抓取新鮮的`再製 <https://devguide.python.org/setup/#getting-the-source-code>`_。"
"（若您想要貢獻修補程式，您就必須使用再製。）"

#: ../../using/unix.rst:75
msgid "The build process consists in the usual ::"
msgstr "建構過程通常包含了 ::"

#: ../../using/unix.rst:81
msgid ""
"invocations. Configuration options and caveats for specific Unix platforms "
"are extensively documented in the :source:`README.rst` file in the root of "
"the Python source tree."
msgstr ""
"來使用。特定 Unix 平臺的設定選項與注意事項都會"
"記載於 Python 原始碼樹根目錄的 :source:`README.rst`"
"檔案中。"

#: ../../using/unix.rst:87
msgid ""
"``make install`` can overwrite or masquerade the :file:`python3` binary. "
"``make altinstall`` is therefore recommended instead of ``make install`` "
"since it only installs :file:`{exec_prefix}/bin/python{version}`."
msgstr ""
"``make install`` 可能會覆寫 :file:`python3` 執行檔。"
"所以我們建議使用 ``make altinstall`` 而非 ``make install``，"
"因為它只安裝了 :file:`{exec_prefix}/bin/python{version}`。"

#: ../../using/unix.rst:93
msgid "Python-related paths and files"
msgstr "與 Python 相關的路徑與檔案"

#: ../../using/unix.rst:95
msgid ""
"These are subject to difference depending on local installation "
"conventions; :envvar:`prefix` (``${prefix}``) and :envvar:`exec_prefix` (``"
"${exec_prefix}``) are installation-dependent and should be interpreted as "
"for GNU software; they may be the same."
msgstr ""
"根據本機上的安裝，這可能會有點不一樣；"
":envvar:`prefix` (``${prefix}``) 與 :envvar:`exec_prefix` (``${exec_prefix}``)"
"是依賴於安裝的，通常會被 GNU 軟體直譯；它們也可能會一樣。"

#: ../../using/unix.rst:100
msgid ""
"For example, on most Linux systems, the default for both is :file:`/usr`."
msgstr "舉例來說，在大多數的 Linux 系統，這兩個的預設值都是 :file:`/usr`。"

#: ../../using/unix.rst:103
msgid "File/directory"
msgstr "檔案／目錄"

#: ../../using/unix.rst:103
msgid "Meaning"
msgstr "含義"

#: ../../using/unix.rst:105
msgid ":file:`{exec_prefix}/bin/python3`"
msgstr ":file:`{exec_prefix}/bin/python3`"

#: ../../using/unix.rst:105
msgid "Recommended location of the interpreter."
msgstr "直譯器的建議所在位置。"

#: ../../using/unix.rst:107
msgid ""
":file:`{prefix}/lib/python{version}`, :file:`{exec_prefix}/lib/"
"python{version}`"
msgstr ""
":file:`{prefix}/lib/python{version}`, :file:`{exec_prefix}/lib/"
"python{version}`"

#: ../../using/unix.rst:107
msgid ""
"Recommended locations of the directories containing the standard modules."
msgstr "包含標準模組的目錄的建議所在位置。"

#: ../../using/unix.rst:110
msgid ""
":file:`{prefix}/include/python{version}`, :file:`{exec_prefix}/include/"
"python{version}`"
msgstr ""
":file:`{prefix}/include/python{version}`, :file:`{exec_prefix}/include/"
"python{version}`"

#: ../../using/unix.rst:110
msgid ""
"Recommended locations of the directories containing the include files needed "
"for developing Python extensions and embedding the interpreter."
msgstr "包含了開發 Python 擴充套件與嵌入直譯器所需檔案的目錄的建議位置。"

#: ../../using/unix.rst:118
msgid "Miscellaneous"
msgstr "其他"

#: ../../using/unix.rst:120
msgid ""
"To easily use Python scripts on Unix, you need to make them executable, e.g. "
"with"
msgstr "要更簡單地在 Unix 上使用 Python 指令稿，您需要將其變為執行檔，例如使用"

#: ../../using/unix.rst:127
msgid ""
"and put an appropriate Shebang line at the top of the script.  A good choice "
"is usually ::"
msgstr "並在指令稿頂端寫上適合的 Shebang 行，下面的例子通常是好選擇 ::"

#: ../../using/unix.rst:132
msgid ""
"which searches for the Python interpreter in the whole :envvar:`PATH`.  "
"However, some Unices may not have the :program:`env` command, so you may "
"need to hardcode ``/usr/bin/python3`` as the interpreter path."
msgstr ""
"它將會在整個 :envvar:`PATH` 中搜尋 Python 直譯器。"
"不過某些類 Unix 系統可能沒有 :program:`env` 指令，"
"所以您可能需要在直譯器的路徑中將其固定為 ``/usr/bin/python3``。"

#: ../../using/unix.rst:136
msgid ""
"To use shell commands in your Python scripts, look at the :mod:`subprocess` "
"module."
msgstr "要在 Python 指令稿中使用 shell 指令，請看 :mod:`subprocess` 模組。"

#: ../../using/unix.rst:140
msgid "Editors and IDEs"
msgstr "編輯器與 IDE"

#: ../../using/unix.rst:142
msgid ""
"There are a number of IDEs that support Python programming language. Many "
"editors and IDEs provide syntax highlighting, debugging tools, and PEP-8 "
"checks."
msgstr ""
"有許多 IDE 支援 Python 程式語言。"
"許多編輯器與 IDE 也提供語法突顯、"
"除錯工具與 PEP-8 檢查。"

#: ../../using/unix.rst:145
msgid ""
"Please go to `Python Editors <https://wiki.python.org/moin/PythonEditors>`_ "
"and `Integrated Development Environments <https://wiki.python.org/moin/"
"IntegratedDevelopmentEnvironments>`_ for a comprehensive list."
msgstr ""
"請到 `Python 編輯器 <https://wiki.python.org/moin/PythonEditors>`_"
"與`整合式開發環境 <https://wiki.python.org/moin/IntegratedDevelopmentEnvironments>`_"
"以取得完整列表。"

