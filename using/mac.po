# Copyright (C) 2001-2024, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
# Ching-Lung Chuang, 2015
# Jason <chairco@gmail.com>, 2016
# Adrian Liaw <adrianliaw2000@gmail.com>, 2018
# Matt Wang <mattwang44@gmail.com>, 2022, 2024
msgid ""
msgstr ""
"Project-Id-Version: Python 3.13\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-09-30 09:19+0000\n"
"PO-Revision-Date: 2022-08-31 22:26+0800\n"
"Last-Translator: Matt Wang <mattwang44@gmail.com>\n"
"Language-Team: Chinese - TAIWAN (https://github.com/python/python-docs-zh-"
"tw)\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Poedit 3.1.1\n"

#: ../../using/mac.rst:6
msgid "Using Python on macOS"
msgstr "於 macOS 使用 Python"

#: ../../using/mac.rst:11
msgid ""
"This document aims to give an overview of macOS-specific behavior you should "
"know about to get started with Python on Mac computers. Python on a Mac "
"running macOS is very similar to Python on other Unix-derived platforms, but "
"there are some differences in installation and some features."
msgstr ""

#: ../../using/mac.rst:16
msgid ""
"There are various ways to obtain and install Python for macOS. Pre-built "
"versions of the most recent versions of Python are available from a number "
"of distributors. Much of this document describes use of the Pythons provided "
"by the CPython release team for download from the `python.org website "
"<https://www.python.org/downloads/>`_. See :ref:`alternative_bundles` for "
"some other options."
msgstr ""

#: ../../using/mac.rst:34
msgid "Using Python for macOS from ``python.org``"
msgstr ""

#: ../../using/mac.rst:37
msgid "Installation steps"
msgstr "安裝步驟"

#: ../../using/mac.rst:39
msgid ""
"For `current Python versions <https://www.python.org/downloads/>`_ (other "
"than those in ``security`` status), the release team produces a **Python for "
"macOS** installer package for each new release. A list of available "
"installers is available `here <https://www.python.org/downloads/macos/>`_. "
"We recommend using the most recent supported Python version where possible. "
"Current installers provide a `universal2 binary <https://en.wikipedia.org/"
"wiki/Universal_binary>`_ build of Python which runs natively on all Macs "
"(Apple Silicon and Intel) that are supported by a wide range of macOS "
"versions, currently typically from at least **macOS 10.13 High Sierra** on."
msgstr ""

#: ../../using/mac.rst:51
msgid ""
"The downloaded file is a standard macOS installer package file (``.pkg``). "
"File integrity information (checksum, size, sigstore signature, etc) for "
"each file is included on the release download page. Installer packages and "
"their contents are signed and notarized with ``Python Software Foundation`` "
"Apple Developer ID certificates to meet `macOS Gatekeeper requirements "
"<https://support.apple.com/en-us/102445>`_."
msgstr ""

#: ../../using/mac.rst:57
msgid ""
"For a default installation, double-click on the downloaded installer package "
"file. This should launch the standard macOS Installer app and display the "
"first of several installer windows steps."
msgstr ""

#: ../../using/mac.rst:63
msgid ""
"Clicking on the **Continue** button brings up the **Read Me** for this "
"installer. Besides other important information, the **Read Me** documents "
"which Python version is going to be installed and on what versions of macOS "
"it is supported. You may need to scroll through to read the whole file. By "
"default, this **Read Me** will also be installed in |"
"usemac_applications_folder_version| and available to read anytime."
msgstr ""

#: ../../using/mac.rst:71
msgid ""
"Clicking on **Continue** proceeds to display the license for Python and for "
"other included software. You will then need to **Agree** to the license "
"terms before proceeding to the next step. This license file will also be "
"installed and available to be read later."
msgstr ""

#: ../../using/mac.rst:78
msgid ""
"After the license terms are accepted, the next step is the **Installation "
"Type** display. For most uses, the standard set of installation operations "
"is appropriate."
msgstr ""

#: ../../using/mac.rst:83
msgid ""
"By pressing the **Customize** button, you can choose to omit or select "
"certain package components of the installer. Click on each package name to "
"see a description of what it installs. To also install support for the "
"optional experimental free-threaded feature, see :ref:`install-freethreaded-"
"macos`."
msgstr ""

#: ../../using/mac.rst:91
msgid ""
"In either case, clicking **Install** will begin the install process by "
"asking permission to install new software. A macOS user name with "
"``Administrator`` privilege is needed as the installed Python will be "
"available to all users of the Mac."
msgstr ""

#: ../../using/mac.rst:95
msgid "When the installation is complete, the **Summary** window will appear."
msgstr ""

#: ../../using/mac.rst:99
msgid ""
"Double-click on the :command:`Install Certificates.command` icon or file in "
"the |usemac_applications_folder_version| window to complete the installation."
msgstr ""

#: ../../using/mac.rst:105
msgid ""
"This will open a temporary :program:`Terminal` shell window that will use "
"the new Python to download and install SSL root certificates for its use."
msgstr ""

#: ../../using/mac.rst:111
msgid ""
"If ``Successfully installed certifi`` and ``update complete`` appears in the "
"terminal window, the installation is complete. Close this terminal window "
"and the installer window."
msgstr ""

#: ../../using/mac.rst:115
msgid "A default install will include:"
msgstr "預設安裝會包含："

#: ../../using/mac.rst:117
msgid ""
"A |usemac_applications_folder_name| folder in your :file:`Applications` "
"folder. In here you find :program:`IDLE`, the development environment that "
"is a standard part of official Python distributions; and :program:`Python "
"Launcher`, which handles double-clicking Python scripts from the macOS "
"`Finder <https://support.apple.com/en-us/HT201732>`_."
msgstr ""
"會有一個 |usemac_applications_folder_name| 資料夾在你的 :file:`Applications` "
"資料夾中。在這裡你可以找到 :program:`IDLE`，它是作為官方 Python 發行版標準組"
"成的開發環境；以及 :program:`Python Launcher`，它負責處理在 `Finder <https://"
"support.apple.com/en-us/HT201732>`_ 中雙擊 Python 腳本的操作。"

#: ../../using/mac.rst:122
msgid ""
"A framework :file:`/Library/Frameworks/Python.framework`, which includes the "
"Python executable and libraries. The installer adds this location to your "
"shell path. To uninstall Python, you can remove these three things. Symlinks "
"to the Python executable are placed in :file:`/usr/local/bin/`."
msgstr ""
":file:`/Library/Frameworks/Python.framework` 框架，包括 Python 可執行檔案 "
"(executable) 和函式庫 (library)。安裝程式將此位置新增到 shell 路徑。要解除安"
"裝 Python ，你可以移除這三個東西。Python 可執行檔案的符號連結 (symlink) 則放"
"在 :file:`/usr/local/bin/` 中。"

#: ../../using/mac.rst:129
msgid ""
"Recent versions of macOS include a :command:`python3` command in :file:`/usr/"
"bin/python3` that links to a usually older and incomplete version of Python "
"provided by and for use by the Apple development tools, :program:`Xcode` or "
"the :program:`Command Line Tools for Xcode`. You should never modify or "
"attempt to delete this installation, as it is Apple-controlled and is used "
"by Apple-provided or third-party software.  If you choose to install a newer "
"Python version from ``python.org``, you will have two different but "
"functional Python installations on your computer that can co-exist. The "
"default installer options should ensure that its :command:`python3` will be "
"used instead of the system :command:`python3`."
msgstr ""

#: ../../using/mac.rst:140
msgid "How to run a Python script"
msgstr "如何執行 Python 腳本"

#: ../../using/mac.rst:142
msgid ""
"There are two ways to invoke the Python interpreter. If you are familiar "
"with using a Unix shell in a terminal window, you can invoke |"
"usemac_python_x_dot_y_literal| or ``python3`` optionally followed by one or "
"more command line options (described in :ref:`using-on-general`). The Python "
"tutorial also has a useful section on :ref:`using Python interactively from "
"a shell <tut-interac>`."
msgstr ""

#: ../../using/mac.rst:149
msgid ""
"You can also invoke the interpreter through an integrated development "
"environment. :ref:`idle` is a basic editor and interpreter environment which "
"is included with the standard distribution of Python. :program:`IDLE` "
"includes a Help menu that allows you to access Python documentation. If you "
"are completely new to Python, you can read the tutorial introduction in that "
"document."
msgstr ""

#: ../../using/mac.rst:157
msgid ""
"There are many other editors and IDEs available, see :ref:`editors` for more "
"information."
msgstr ""

#: ../../using/mac.rst:160
msgid ""
"To run a Python script file from the terminal window, you can invoke the "
"interpreter with the name of the script file:"
msgstr ""

#: ../../using/mac.rst:163
msgid "|usemac_python_x_dot_y_literal| ``myscript.py``"
msgstr ""

#: ../../using/mac.rst:165
msgid "To run your script from the Finder, you can either:"
msgstr "從 Finder 執行你的腳本時，你可以："

#: ../../using/mac.rst:167
msgid "Drag it to :program:`Python Launcher`."
msgstr "把它拖曳到 :program:`Python Launcher`"

#: ../../using/mac.rst:169
msgid ""
"Select :program:`Python Launcher` as the default application to open your "
"script (or any ``.py`` script) through the Finder Info window and double-"
"click it. :program:`Python Launcher` has various preferences to control how "
"your script is launched. Option-dragging allows you to change these for one "
"invocation, or use its ``Preferences`` menu to change things globally."
msgstr ""
"透過 Finder Info 視窗選擇 :program:`Python Launcher` 作為開啟腳本（或任何 ``."
"py`` 腳本）的預設應用程式，然後雙擊腳本。:program:`Python Launcher` 有各種用"
"來控制腳本啟動方式的選項。拖曳選項可以讓你一次更改多個選項，或使用其 "
"``Preferences`` 選單以全域性地更改內容。"

#: ../../using/mac.rst:175
msgid ""
"Be aware that running the script directly from the macOS Finder might "
"produce different results than when running from a terminal window as the "
"script will not be run in the usual shell environment including any setting "
"of environment variables in shell profiles. And, as with any other script or "
"program, be certain of what you are about to run."
msgstr ""

#: ../../using/mac.rst:185
msgid "Alternative Distributions"
msgstr ""

#: ../../using/mac.rst:187
msgid ""
"Besides the standard ``python.org`` for macOS installer, there are third-"
"party distributions for macOS that may include additional functionality. "
"Some popular distributions and their key features:"
msgstr ""

#: ../../using/mac.rst:191
msgid "`ActivePython <https://www.activestate.com/products/python/>`_"
msgstr "`ActivePython <https://www.activestate.com/products/python/>`_"

#: ../../using/mac.rst:192
msgid "Installer with multi-platform compatibility, documentation"
msgstr ""

#: ../../using/mac.rst:194
msgid "`Anaconda <https://www.anaconda.com/download/>`_"
msgstr "`Anaconda <https://www.anaconda.com/download/>`_"

#: ../../using/mac.rst:195
msgid ""
"Popular scientific modules (such as numpy, scipy, and pandas) and the "
"``conda`` package manager."
msgstr ""

#: ../../using/mac.rst:198
msgid "`Homebrew <https://brew.sh>`_"
msgstr "`Homebrew <https://brew.sh>`_"

#: ../../using/mac.rst:199
msgid ""
"Package manager for macOS including multiple versions of Python and many "
"third-party Python-based packages (including numpy, scipy, and pandas)."
msgstr ""

#: ../../using/mac.rst:202
msgid "`MacPorts <https://www.macports.org>`_"
msgstr "`MacPorts <https://www.macports.org>`_"

#: ../../using/mac.rst:203
msgid ""
"Another package manager for macOS including multiple versions of Python and "
"many third-party Python-based packages. May include pre-built versions of "
"Python and many packages for older versions of macOS."
msgstr ""

#: ../../using/mac.rst:207
msgid ""
"Note that distributions might not include the latest versions of Python or "
"other libraries, and are not maintained or supported by the core Python team."
msgstr ""

#: ../../using/mac.rst:213
msgid "Installing Additional Python Packages"
msgstr "安裝額外的 Python 套件"

#: ../../using/mac.rst:215
msgid "Refer to the `Python Packaging User Guide`_ for more information."
msgstr "更多資訊請見 `Python Packaging User Guide`_。"

#: ../../using/mac.rst:225
msgid "GUI Programming"
msgstr "開發 GUI 程式"

#: ../../using/mac.rst:227
msgid ""
"There are several options for building GUI applications on the Mac with "
"Python."
msgstr "於 Mac 上使用 Python 來建立 GUI 應用程式有許多選項。"

#: ../../using/mac.rst:229
msgid ""
"The standard Python GUI toolkit is :mod:`tkinter`, based on the cross-"
"platform Tk toolkit (https://www.tcl.tk). A macOS-native version of Tk is "
"included with the installer."
msgstr ""
"標準的 Python GUI 工具套件是基於跨平臺 Tk 工具套件 (https://www.tcl.tk) 的 :"
"mod:`tkinter`。macOS 原生版本的 Tk 有包含於安裝程式中。"

#: ../../using/mac.rst:233
msgid ""
"*PyObjC* is a Python binding to Apple's Objective-C/Cocoa framework. "
"Information on PyObjC is available from :pypi:`pyobjc`."
msgstr ""
"*PyObjC* 是一個 Apple Objective-C/Cocoa 框架的 Python 繫結 (binding)。有關 "
"PyObjC 的資訊請見 :pypi:`pyobjc`。"

#: ../../using/mac.rst:236
msgid "A number of alternative macOS GUI toolkits are available including:"
msgstr "有許多替代 macOS GUI 工具套件可用，包含："

#: ../../using/mac.rst:238
msgid ""
"`PySide <https://www.qt.io/qt-for-python>`_: Official Python bindings to the "
"`Qt GUI toolkit <https://wiki.qt.io/Qt_for_Python>`_."
msgstr ""
"`PySide <https://www.qt.io/qt-for-python>`_：`Qt GUI 工具包 <https://wiki.qt."
"io/Qt_for_Python>`_\\ 的官方 Python 繫結。"

#: ../../using/mac.rst:241
msgid ""
"`PyQt <https://riverbankcomputing.com/software/pyqt/>`_: Alternative Python "
"bindings to Qt."
msgstr ""
"`PyQt <https://riverbankcomputing.com/software/pyqt/>`_：Qt 的替代 Python 繫"
"結。"

#: ../../using/mac.rst:244
msgid ""
"`Kivy <https://kivy.org>`_: A cross-platform GUI toolkit that supports "
"desktop and mobile platforms."
msgstr ""
"`Kivy <https://kivy.org>`_：一個支援桌面和行動平臺的跨平臺 GUI 工具包。"

#: ../../using/mac.rst:247
msgid ""
"`Toga <https://toga.readthedocs.io>`_: Part of the `BeeWare Project <https://"
"beeware.org>`_; supports desktop, mobile, web and console apps."
msgstr ""
"`Toga <https://toga.readthedocs.io>`_：`BeeWare 專案 <https://beeware."
"org>`_\\ 的一部分；支援桌面、行動、網頁和控制台應用程式。"

#: ../../using/mac.rst:250
msgid ""
"`wxPython <https://wxpython.org>`_: A cross-platform toolkit that supports "
"desktop operating systems."
msgstr ""
"`wxPython <https://wxpython.org>`_：一個支援桌面作業系統的跨平臺工具包。"

#: ../../using/mac.rst:255
msgid "Advanced Topics"
msgstr "進階主題"

#: ../../using/mac.rst:260
msgid "Installing Free-threaded Binaries"
msgstr ""

#: ../../using/mac.rst:262
msgid "(Experimental)"
msgstr ""

#: ../../using/mac.rst:266
msgid ""
"Everything described in this section is considered experimental, and should "
"be expected to change in future releases."
msgstr ""

#: ../../using/mac.rst:269
msgid ""
"The ``python.org`` :ref:`Python for macOS <getting-and-installing-"
"macpython>` installer package can optionally install an additional build of "
"Python |usemac_x_dot_y| that supports :pep:`703`, the experimental free-"
"threading feature (running with the :term:`global interpreter lock` "
"disabled). Check the release page on ``python.org`` for possible updated "
"information."
msgstr ""

#: ../../using/mac.rst:275
msgid ""
"Because this feature is still considered experimental, the support for it is "
"not installed by default. It is packaged as a separate install option, "
"available by clicking the **Customize** button on the **Installation Type** "
"step of the installer as described above."
msgstr ""

#: ../../using/mac.rst:282
msgid ""
"If the box next to the **Free-threaded Python** package name is checked, a "
"separate :file:`PythonT.framework` will also be installed alongside the "
"normal :file:`Python.framework` in :file:`/Library/Frameworks`. This "
"configuration allows a free-threaded Python |usemac_x_dot_y| build to co-"
"exist on your system with a traditional (GIL only) Python |usemac_x_dot_y| "
"build with minimal risk while installing or testing. This installation "
"layout is itself experimental and is subject to change in future releases."
msgstr ""

#: ../../using/mac.rst:290
msgid "Known cautions and limitations:"
msgstr ""

#: ../../using/mac.rst:292
msgid ""
"The **UNIX command-line tools** package, which is selected by default, will "
"install links in :file:`/usr/local/bin` for |"
"usemac_python_x_dot_y_t_literal|, the free-threaded interpreter, and |"
"usemac_python_x_dot_y_t_literal_config|, a configuration utility which may "
"be useful for package builders. Since :file:`/usr/local/bin` is typically "
"included in your shell ``PATH``, in most cases no changes to your ``PATH`` "
"environment variables should be needed to use |"
"usemac_python_x_dot_y_t_literal|."
msgstr ""

#: ../../using/mac.rst:300
msgid ""
"For this release, the **Shell profile updater** package and the :file:"
"`Update Shell Profile.command` in |usemac_applications_folder_version| do "
"not support the free-threaded package."
msgstr ""

#: ../../using/mac.rst:304
msgid ""
"The free-threaded build and the traditional build have separate search paths "
"and separate :file:`site-packages` directories so, by default, if you need a "
"package available in both builds, it may need to be installed in both. The "
"free-threaded package will install a separate instance of :program:`pip` for "
"use with |usemac_python_x_dot_y_t_literal|."
msgstr ""

#: ../../using/mac.rst:310
msgid "To install a package using :command:`pip` without a :command:`venv`:"
msgstr ""

#: ../../using/mac.rst:312
msgid "|usemac_python_x_dot_y_t_literal| ``-m pip install <package_name>``"
msgstr "|usemac_python_x_dot_y_t_literal| ``-m pip install <package_name>``"

#: ../../using/mac.rst:314
msgid ""
"When working with multiple Python environments, it is usually safest and "
"easiest to :ref:`create and use virtual environments <tut-venv>`. This can "
"avoid possible command name conflicts and confusion about which Python is in "
"use:"
msgstr ""

#: ../../using/mac.rst:318
msgid "|usemac_python_x_dot_y_t_literal| ``-m venv <venv_name>``"
msgstr "|usemac_python_x_dot_y_t_literal| ``-m venv <venv_name>``"

#: ../../using/mac.rst:320
msgid "then :command:`activate`."
msgstr "然後 :command:`activate`。"

#: ../../using/mac.rst:322
msgid "To run a free-threaded version of IDLE:"
msgstr "執行 free-threaded（自由執行緒）版本的 IDLE："

#: ../../using/mac.rst:324
msgid "|usemac_python_x_dot_y_t_literal| ``-m idlelib``"
msgstr "|usemac_python_x_dot_y_t_literal| ``-m idlelib``"

#: ../../using/mac.rst:326
msgid ""
"The interpreters in both builds respond to the same :ref:`PYTHON environment "
"variables <using-on-envvars>` which may have unexpected results, for "
"example, if you have ``PYTHONPATH`` set in a shell profile. If necessary, "
"there are :ref:`command line options <using-on-interface-options>` like ``-"
"E`` to ignore these environment variables."
msgstr ""

#: ../../using/mac.rst:333
msgid ""
"The free-threaded build links to the third-party shared libraries, such as "
"``OpenSSL`` and ``Tk``, installed in the traditional framework. This means "
"that both builds also share one set of trust certificates as installed by "
"the :command:`Install Certificates.command` script, thus it only needs to be "
"run once."
msgstr ""

#: ../../using/mac.rst:339
msgid ""
"If you cannot depend on the link in ``/usr/local/bin`` pointing to the "
"``python.org`` free-threaded |usemac_python_x_dot_y_t_literal| (for example, "
"if you want to install your own version there or some other distribution "
"does), you can explicitly set your shell ``PATH`` environment variable to "
"include the ``PythonT`` framework ``bin`` directory:"
msgstr ""

#: ../../using/mac.rst:345
msgid ""
"export PATH=\"/Library/Frameworks/PythonT.framework/Versions/3.13/bin\":"
"\"$PATH\""
msgstr ""
"export PATH=\"/Library/Frameworks/PythonT.framework/Versions/3.13/bin\":"
"\"$PATH\""

#: ../../using/mac.rst:349
msgid ""
"The traditional framework installation by default does something similar, "
"except for :file:`Python.framework`. Be aware that having both framework "
"``bin`` directories in ``PATH`` can lead to confusion if there are duplicate "
"names like ``python3.13`` in both; which one is actually used depends on the "
"order they appear in ``PATH``. The ``which python3.x`` or ``which python3."
"xt`` commands can show which path is being used. Using virtual environments "
"can help avoid such ambiguities. Another option might be to create a shell :"
"command:`alias` to the desired interpreter, like:"
msgstr ""

#: ../../using/mac.rst:358
msgid ""
"alias py3.13=\"/Library/Frameworks/Python.framework/Versions/3.13/bin/"
"python3.13\"\n"
"alias py3.13t=\"/Library/Frameworks/PythonT.framework/Versions/3.13/bin/"
"python3.13t\""
msgstr ""
"alias py3.13=\"/Library/Frameworks/Python.framework/Versions/3.13/bin/"
"python3.13\"\n"
"alias py3.13t=\"/Library/Frameworks/PythonT.framework/Versions/3.13/bin/"
"python3.13t\""

#: ../../using/mac.rst:364
msgid "Installing using the command line"
msgstr "使用命令列安裝"

#: ../../using/mac.rst:366
msgid ""
"If you want to use automation to install the ``python.org`` installer "
"package (rather than by using the familiar macOS :program:`Installer` GUI "
"app), the macOS command line :command:`installer` utility lets you select "
"non-default options, too. If you are not familiar with :command:`installer`, "
"it can be somewhat cryptic (see :command:`man installer` for more "
"information). As an example, the following shell snippet shows one way to do "
"it, using the ``3.13.0b2`` release and selecting the free-threaded "
"interpreter option:"
msgstr ""

#: ../../using/mac.rst:375
msgid ""
"RELEASE=\"python-3.13.0b2-macos11.pkg\"\n"
"\n"
"# download installer pkg\n"
"curl -O https://www.python.org/ftp/python/3.13.0/${RELEASE}\n"
"\n"
"# create installer choicechanges to customize the install:\n"
"#    enable the PythonTFramework-3.13 package\n"
"#    while accepting the other defaults (install all other packages)\n"
"cat > ./choicechanges.plist <<EOF\n"
"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
"<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple."
"com/DTDs/PropertyList-1.0.dtd\">\n"
"<plist version=\"1.0\">\n"
"<array>\n"
"        <dict>\n"
"                <key>attributeSetting</key>\n"
"                <integer>1</integer>\n"
"                <key>choiceAttribute</key>\n"
"                <string>selected</string>\n"
"                <key>choiceIdentifier</key>\n"
"                <string>org.python.Python.PythonTFramework-3.13</string>\n"
"        </dict>\n"
"</array>\n"
"</plist>\n"
"EOF\n"
"\n"
"sudo installer -pkg ./${RELEASE} -applyChoiceChangesXML ./choicechanges."
"plist -target /"
msgstr ""

#: ../../using/mac.rst:405
msgid ""
"You can then test that both installer builds are now available with "
"something like:"
msgstr ""

#: ../../using/mac.rst:407
msgid ""
"$ # test that the free-threaded interpreter was installed if the Unix "
"Command Tools package was enabled\n"
"$ /usr/local/bin/python3.13t -VV\n"
"Python 3.13.0b2 experimental free-threading build (v3.13.0b2:3a83b172af, "
"Jun  5 2024, 12:57:31) [Clang 15.0.0 (clang-1500.3.9.4)]\n"
"$ #    and the traditional interpreter\n"
"$ /usr/local/bin/python3.13 -VV\n"
"Python 3.13.0b2 (v3.13.0b2:3a83b172af, Jun  5 2024, 12:50:24) [Clang 15.0.0 "
"(clang-1500.3.9.4)]\n"
"$ # test that they are also available without the prefix if /usr/local/bin "
"is on $PATH\n"
"$ python3.13t -VV\n"
"Python 3.13.0b2 experimental free-threading build (v3.13.0b2:3a83b172af, "
"Jun  5 2024, 12:57:31) [Clang 15.0.0 (clang-1500.3.9.4)]\n"
"$ python3.13 -VV\n"
"Python 3.13.0b2 (v3.13.0b2:3a83b172af, Jun  5 2024, 12:50:24) [Clang 15.0.0 "
"(clang-1500.3.9.4)]"
msgstr ""

#: ../../using/mac.rst:423
msgid ""
"Current ``python.org`` installers only install to fixed locations like :file:"
"`/Library/Frameworks/`, :file:`/Applications`, and :file:`/usr/local/bin`. "
"You cannot use the :command:`installer` ``-domain`` option to install to "
"other locations."
msgstr ""

#: ../../using/mac.rst:431
msgid "Distributing Python Applications"
msgstr "發行 Python 應用程式"

#: ../../using/mac.rst:433
msgid ""
"A range of tools exist for converting your Python code into a standalone "
"distributable application:"
msgstr ""

#: ../../using/mac.rst:436
msgid ""
":pypi:`py2app`: Supports creating macOS ``.app`` bundles from a Python "
"project."
msgstr ":pypi:`py2app`：支援從 Python 專案打包成 macOS ``.app``。"

#: ../../using/mac.rst:439
msgid ""
"`Briefcase <https://briefcase.readthedocs.io>`_: Part of the `BeeWare "
"Project <https://beeware.org>`_; a cross-platform packaging tool that "
"supports creation of ``.app`` bundles on macOS, as well as managing signing "
"and notarization."
msgstr ""
"`Briefcase <https://briefcase.readthedocs.io>`_：`BeeWare 專案 <https://"
"beeware.org>`__\\ 的一部分；支援建立 macOS ``.app`` 的跨平台打包工具，亦為管"
"理簽署和驗證 (notarization) 的工具。"

#: ../../using/mac.rst:444
msgid ""
"`PyInstaller <https://pyinstaller.org/>`_: A cross-platform packaging tool "
"that creates a single file or folder as a distributable artifact."
msgstr ""
"`PyInstaller <https://pyinstaller.org/>`_：一個跨平臺打包工具，可以將單一檔案"
"或資料夾打包成可分發的檔案。"

#: ../../using/mac.rst:448
msgid "App Store Compliance"
msgstr ""

#: ../../using/mac.rst:450
msgid ""
"Apps submitted for distribution through the macOS App Store must pass "
"Apple's app review process. This process includes a set of automated "
"validation rules that inspect the submitted application bundle for "
"problematic code."
msgstr ""

#: ../../using/mac.rst:454
msgid ""
"The Python standard library contains some code that is known to violate "
"these automated rules. While these violations appear to be false positives, "
"Apple's review rules cannot be challenged. Therefore, it is necessary to "
"modify the Python standard library for an app to pass App Store review."
msgstr ""

#: ../../using/mac.rst:459
msgid ""
"The Python source tree contains :source:`a patch file <Mac/Resources/app-"
"store-compliance.patch>` that will remove all code that is known to cause "
"issues with the App Store review process. This patch is applied "
"automatically when CPython is configured with the :option:`--with-app-store-"
"compliance` option."
msgstr ""

#: ../../using/mac.rst:465
msgid ""
"This patch is not normally required to use CPython on a Mac; nor is it "
"required if you are distributing an app *outside* the macOS App Store. It is "
"*only* required if you are using the macOS App Store as a distribution "
"channel."
msgstr ""

#: ../../using/mac.rst:470
msgid "Other Resources"
msgstr "其他資源"

#: ../../using/mac.rst:472
msgid ""
"The `python.org Help page <https://www.python.org/about/help/>`_ has links "
"to many useful resources. The `Pythonmac-SIG mailing list <https://www."
"python.org/community/sigs/current/pythonmac-sig/>`_ is another support "
"resource specifically for Python users and developers on the Mac."
msgstr ""
